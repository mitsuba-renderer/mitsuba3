//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31057947
// Cuda compilation tools, release 11.6, V11.6.124
// Based on NVVM 7.0.1
//

.version 7.6
.target sm_50
.address_size 64

	// .globl	__intersection__cylinder

.visible .entry __intersection__cylinder()
{
	.reg .pred 	%p<54>;
	.reg .b16 	%rs<8>;
	.reg .f32 	%f<1011>;
	.reg .b32 	%r<323>;
	.reg .b64 	%rd<259>;


	// begin inline asm
	call (%rd17), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd17+8];
	// begin inline asm
	call (%f947), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f948), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f949), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p2, %r9, 0;
	@%p2 bra 	$L__BB0_21;

	// begin inline asm
	call (%r10), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f358), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p3, %r10, 0;
	@%p3 bra 	$L__BB0_19;

	mov.u32 	%r321, 0;

$L__BB0_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd18), _optix_get_transform_list_handle, (%r321);
	// end inline asm
	// begin inline asm
	call (%r13), _optix_get_transform_type_from_handle, (%rd18);
	// end inline asm
	or.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p4, %r14, 3;
	@%p4 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_4;

$L__BB0_9:
	setp.eq.s32 	%p7, %r13, 2;
	@%p7 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_10;

$L__BB0_13:
	// begin inline asm
	call (%rd90), _optix_get_matrix_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd92, %rd90;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd92];
	// end inline asm
	add.s64 	%rd96, %rd90, 16;
	// begin inline asm
	cvta.to.global.u64 %rd95, %rd96;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd95];
	// end inline asm
	add.s64 	%rd99, %rd90, 32;
	// begin inline asm
	cvta.to.global.u64 %rd98, %rd99;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd98];
	// end inline asm
	add.s64 	%rd102, %rd90, 48;
	// begin inline asm
	cvta.to.global.u64 %rd101, %rd102;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd101];
	// end inline asm
	add.s64 	%rd105, %rd90, 64;
	// begin inline asm
	cvta.to.global.u64 %rd104, %rd105;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd104];
	// end inline asm
	add.s64 	%rd108, %rd90, 80;
	// begin inline asm
	cvta.to.global.u64 %rd107, %rd108;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd107];
	// end inline asm
	add.s64 	%rd111, %rd90, 96;
	// begin inline asm
	cvta.to.global.u64 %rd110, %rd111;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd110];
	// end inline asm
	add.s64 	%rd114, %rd90, 112;
	// begin inline asm
	cvta.to.global.u64 %rd113, %rd114;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd113];
	// end inline asm
	mov.b32 	%f486, %r105;
	mov.b32 	%f487, %r106;
	and.b32  	%r146, %r104, 65535;
	add.s32 	%r147, %r146, -1;
	cvt.rn.f32.s32 	%f488, %r147;
	sub.f32 	%f489, %f358, %f486;
	mul.f32 	%f490, %f489, %f488;
	sub.f32 	%f491, %f487, %f486;
	div.rn.f32 	%f492, %f490, %f491;
	min.f32 	%f493, %f488, %f492;
	mov.f32 	%f494, 0f00000000;
	max.f32 	%f495, %f494, %f493;
	cvt.rmi.f32.f32 	%f496, %f495;
	sub.f32 	%f90, %f495, %f496;
	cvt.rzi.s32.f32 	%r148, %f496;
	mul.wide.s32 	%rd125, %r148, 48;
	add.s64 	%rd117, %rd99, %rd125;
	// begin inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd116];
	// end inline asm
	mov.b32 	%f902, %r134;
	mov.b32 	%f901, %r135;
	mov.b32 	%f900, %r136;
	mov.b32 	%f899, %r137;
	add.s64 	%rd120, %rd117, 16;
	// begin inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd119];
	// end inline asm
	mov.b32 	%f906, %r138;
	mov.b32 	%f905, %r139;
	mov.b32 	%f904, %r140;
	mov.b32 	%f903, %r141;
	add.s64 	%rd123, %rd117, 32;
	// begin inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd122];
	// end inline asm
	mov.b32 	%f910, %r142;
	mov.b32 	%f909, %r143;
	mov.b32 	%f908, %r144;
	mov.b32 	%f907, %r145;
	setp.leu.f32 	%p9, %f90, 0f00000000;
	@%p9 bra 	$L__BB0_15;

	cvt.rmi.f32.f32 	%f870, %f495;
	cvt.rzi.s32.f32 	%r320, %f870;
	cvt.s64.s32 	%rd256, %r320;
	mov.f32 	%f497, 0f3F800000;
	sub.f32 	%f498, %f497, %f90;
	mul.lo.s64 	%rd135, %rd256, 48;
	add.s64 	%rd136, %rd90, %rd135;
	add.s64 	%rd127, %rd136, 80;
	// begin inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r149,%r150,%r151,%r152}, [%rd126];
	// end inline asm
	mov.b32 	%f499, %r149;
	mov.b32 	%f500, %r150;
	mov.b32 	%f501, %r151;
	mov.b32 	%f502, %r152;
	mul.f32 	%f503, %f90, %f499;
	mul.f32 	%f504, %f90, %f500;
	mul.f32 	%f505, %f90, %f501;
	mul.f32 	%f506, %f90, %f502;
	fma.rn.f32 	%f902, %f498, %f902, %f503;
	fma.rn.f32 	%f901, %f498, %f901, %f504;
	fma.rn.f32 	%f900, %f498, %f900, %f505;
	fma.rn.f32 	%f899, %f498, %f899, %f506;
	add.s64 	%rd130, %rd136, 96;
	// begin inline asm
	cvta.to.global.u64 %rd129, %rd130;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r153,%r154,%r155,%r156}, [%rd129];
	// end inline asm
	mov.b32 	%f507, %r153;
	mov.b32 	%f508, %r154;
	mov.b32 	%f509, %r155;
	mov.b32 	%f510, %r156;
	mul.f32 	%f511, %f90, %f507;
	mul.f32 	%f512, %f90, %f508;
	mul.f32 	%f513, %f90, %f509;
	mul.f32 	%f514, %f90, %f510;
	fma.rn.f32 	%f906, %f498, %f906, %f511;
	fma.rn.f32 	%f905, %f498, %f905, %f512;
	fma.rn.f32 	%f904, %f498, %f904, %f513;
	fma.rn.f32 	%f903, %f498, %f903, %f514;
	add.s64 	%rd133, %rd136, 112;
	// begin inline asm
	cvta.to.global.u64 %rd132, %rd133;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r157,%r158,%r159,%r160}, [%rd132];
	// end inline asm
	mov.b32 	%f515, %r157;
	mov.b32 	%f516, %r158;
	mov.b32 	%f517, %r159;
	mov.b32 	%f518, %r160;
	mul.f32 	%f519, %f90, %f515;
	mul.f32 	%f520, %f90, %f516;
	mul.f32 	%f521, %f90, %f517;
	mul.f32 	%f522, %f90, %f518;
	fma.rn.f32 	%f910, %f498, %f910, %f519;
	fma.rn.f32 	%f909, %f498, %f909, %f520;
	fma.rn.f32 	%f908, %f498, %f908, %f521;
	fma.rn.f32 	%f907, %f498, %f907, %f522;
	bra.uni 	$L__BB0_15;

$L__BB0_4:
	mov.f32 	%f911, 0f00000000;
	mov.f32 	%f914, 0f3F800000;
	setp.eq.s32 	%p5, %r13, 4;
	@%p5 bra 	$L__BB0_7;

	setp.ne.s32 	%p6, %r13, 1;
	mov.f32 	%f912, %f911;
	mov.f32 	%f913, %f911;
	mov.f32 	%f915, %f911;
	mov.f32 	%f916, %f911;
	mov.f32 	%f917, %f914;
	mov.f32 	%f918, %f911;
	mov.f32 	%f919, %f911;
	mov.f32 	%f920, %f914;
	mov.f32 	%f921, %f911;
	mov.f32 	%f922, %f911;
	@%p6 bra 	$L__BB0_16;

	// begin inline asm
	call (%rd20), _optix_get_static_transform_from_handle, (%rd18);
	// end inline asm
	add.s64 	%rd257, %rd20, 64;
	bra.uni 	$L__BB0_8;

$L__BB0_10:
	// begin inline asm
	call (%rd33), _optix_get_srt_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd35, %rd33;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r27,%r28,%r29,%r30}, [%rd35];
	// end inline asm
	add.s64 	%rd39, %rd33, 16;
	// begin inline asm
	cvta.to.global.u64 %rd38, %rd39;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r31,%r32,%r33,%r34}, [%rd38];
	// end inline asm
	add.s64 	%rd42, %rd33, 32;
	// begin inline asm
	cvta.to.global.u64 %rd41, %rd42;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r35,%r36,%r37,%r38}, [%rd41];
	// end inline asm
	add.s64 	%rd45, %rd33, 48;
	// begin inline asm
	cvta.to.global.u64 %rd44, %rd45;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r39,%r40,%r41,%r42}, [%rd44];
	// end inline asm
	add.s64 	%rd48, %rd33, 64;
	// begin inline asm
	cvta.to.global.u64 %rd47, %rd48;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r43,%r44,%r45,%r46}, [%rd47];
	// end inline asm
	add.s64 	%rd51, %rd33, 80;
	// begin inline asm
	cvta.to.global.u64 %rd50, %rd51;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd50];
	// end inline asm
	add.s64 	%rd54, %rd33, 96;
	// begin inline asm
	cvta.to.global.u64 %rd53, %rd54;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd53];
	// end inline asm
	add.s64 	%rd57, %rd33, 112;
	// begin inline asm
	cvta.to.global.u64 %rd56, %rd57;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd56];
	// end inline asm
	add.s64 	%rd60, %rd33, 128;
	// begin inline asm
	cvta.to.global.u64 %rd59, %rd60;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd59];
	// end inline asm
	add.s64 	%rd63, %rd33, 144;
	// begin inline asm
	cvta.to.global.u64 %rd62, %rd63;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd62];
	// end inline asm
	mov.b32 	%f373, %r30;
	mov.b32 	%f374, %r31;
	and.b32  	%r83, %r29, 65535;
	add.s32 	%r84, %r83, -1;
	cvt.rn.f32.s32 	%f375, %r84;
	sub.f32 	%f376, %f358, %f373;
	mul.f32 	%f377, %f376, %f375;
	sub.f32 	%f378, %f374, %f373;
	div.rn.f32 	%f379, %f377, %f378;
	min.f32 	%f380, %f375, %f379;
	mov.f32 	%f381, 0f00000000;
	max.f32 	%f382, %f381, %f380;
	cvt.rmi.f32.f32 	%f383, %f382;
	sub.f32 	%f29, %f382, %f383;
	cvt.rzi.s32.f32 	%r85, %f383;
	mul.wide.s32 	%rd77, %r85, 64;
	add.s64 	%rd66, %rd42, %rd77;
	// begin inline asm
	cvta.to.global.u64 %rd65, %rd66;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd65];
	// end inline asm
	mov.b32 	%f883, %r67;
	mov.b32 	%f884, %r68;
	mov.b32 	%f885, %r69;
	mov.b32 	%f886, %r70;
	add.s64 	%rd69, %rd66, 16;
	// begin inline asm
	cvta.to.global.u64 %rd68, %rd69;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd68];
	// end inline asm
	mov.b32 	%f887, %r71;
	mov.b32 	%f888, %r72;
	mov.b32 	%f889, %r73;
	mov.b32 	%f890, %r74;
	add.s64 	%rd72, %rd66, 32;
	// begin inline asm
	cvta.to.global.u64 %rd71, %rd72;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd71];
	// end inline asm
	mov.b32 	%f891, %r75;
	mov.b32 	%f892, %r76;
	mov.b32 	%f893, %r77;
	mov.b32 	%f894, %r78;
	add.s64 	%rd75, %rd66, 48;
	// begin inline asm
	cvta.to.global.u64 %rd74, %rd75;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd74];
	// end inline asm
	mov.b32 	%f895, %r79;
	mov.b32 	%f896, %r80;
	mov.b32 	%f897, %r81;
	mov.b32 	%f898, %r82;
	setp.leu.f32 	%p8, %f29, 0f00000000;
	@%p8 bra 	$L__BB0_12;

	mov.f32 	%f384, 0f3F800000;
	sub.f32 	%f385, %f384, %f29;
	add.s64 	%rd79, %rd66, 64;
	// begin inline asm
	cvta.to.global.u64 %rd78, %rd79;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r86,%r87,%r88,%r89}, [%rd78];
	// end inline asm
	mov.b32 	%f386, %r86;
	mov.b32 	%f387, %r87;
	mov.b32 	%f388, %r88;
	mov.b32 	%f389, %r89;
	mul.f32 	%f390, %f29, %f386;
	mul.f32 	%f391, %f29, %f387;
	mul.f32 	%f392, %f29, %f388;
	mul.f32 	%f393, %f29, %f389;
	fma.rn.f32 	%f883, %f385, %f883, %f390;
	fma.rn.f32 	%f884, %f385, %f884, %f391;
	fma.rn.f32 	%f885, %f385, %f885, %f392;
	fma.rn.f32 	%f886, %f385, %f886, %f393;
	add.s64 	%rd82, %rd66, 80;
	// begin inline asm
	cvta.to.global.u64 %rd81, %rd82;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd81];
	// end inline asm
	mov.b32 	%f394, %r90;
	mov.b32 	%f395, %r91;
	mov.b32 	%f396, %r92;
	mov.b32 	%f397, %r93;
	mul.f32 	%f398, %f29, %f394;
	mul.f32 	%f399, %f29, %f395;
	mul.f32 	%f400, %f29, %f396;
	mul.f32 	%f401, %f29, %f397;
	fma.rn.f32 	%f887, %f385, %f887, %f398;
	fma.rn.f32 	%f888, %f385, %f888, %f399;
	fma.rn.f32 	%f889, %f385, %f889, %f400;
	fma.rn.f32 	%f890, %f385, %f890, %f401;
	add.s64 	%rd85, %rd66, 96;
	// begin inline asm
	cvta.to.global.u64 %rd84, %rd85;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd84];
	// end inline asm
	mov.b32 	%f402, %r94;
	mov.b32 	%f403, %r95;
	mov.b32 	%f404, %r96;
	mov.b32 	%f405, %r97;
	mul.f32 	%f406, %f29, %f402;
	mul.f32 	%f407, %f29, %f403;
	mul.f32 	%f408, %f29, %f404;
	mul.f32 	%f409, %f29, %f405;
	fma.rn.f32 	%f891, %f385, %f891, %f406;
	fma.rn.f32 	%f410, %f385, %f892, %f407;
	fma.rn.f32 	%f411, %f385, %f893, %f408;
	fma.rn.f32 	%f412, %f385, %f894, %f409;
	add.s64 	%rd88, %rd66, 112;
	// begin inline asm
	cvta.to.global.u64 %rd87, %rd88;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd87];
	// end inline asm
	mov.b32 	%f413, %r98;
	mov.b32 	%f414, %r99;
	mov.b32 	%f415, %r100;
	mov.b32 	%f416, %r101;
	mul.f32 	%f417, %f29, %f413;
	mul.f32 	%f418, %f29, %f414;
	mul.f32 	%f419, %f29, %f415;
	mul.f32 	%f420, %f29, %f416;
	fma.rn.f32 	%f421, %f385, %f895, %f417;
	fma.rn.f32 	%f896, %f385, %f896, %f418;
	fma.rn.f32 	%f897, %f385, %f897, %f419;
	fma.rn.f32 	%f898, %f385, %f898, %f420;
	mul.f32 	%f422, %f411, %f411;
	fma.rn.f32 	%f423, %f410, %f410, %f422;
	fma.rn.f32 	%f424, %f412, %f412, %f423;
	fma.rn.f32 	%f425, %f421, %f421, %f424;
	sqrt.rn.f32 	%f426, %f425;
	rcp.rn.f32 	%f427, %f426;
	mul.f32 	%f892, %f410, %f427;
	mul.f32 	%f893, %f411, %f427;
	mul.f32 	%f894, %f412, %f427;
	mul.f32 	%f895, %f427, %f421;

$L__BB0_12:
	mul.f32 	%f428, %f893, %f893;
	fma.rn.f32 	%f429, %f892, %f892, %f428;
	fma.rn.f32 	%f430, %f894, %f894, %f429;
	fma.rn.f32 	%f431, %f895, %f895, %f430;
	rcp.rn.f32 	%f432, %f431;
	mul.f32 	%f433, %f892, %f432;
	mul.f32 	%f434, %f893, %f432;
	mul.f32 	%f435, %f894, %f432;
	mul.f32 	%f436, %f895, %f432;
	mul.f32 	%f437, %f892, %f433;
	mul.f32 	%f438, %f893, %f434;
	mul.f32 	%f439, %f894, %f435;
	mul.f32 	%f440, %f892, %f434;
	mul.f32 	%f441, %f894, %f436;
	mul.f32 	%f442, %f892, %f435;
	mul.f32 	%f443, %f893, %f436;
	mul.f32 	%f444, %f893, %f435;
	mul.f32 	%f445, %f892, %f436;
	sub.f32 	%f446, %f437, %f438;
	sub.f32 	%f447, %f446, %f439;
	fma.rn.f32 	%f448, %f895, %f436, %f447;
	sub.f32 	%f449, %f440, %f441;
	add.f32 	%f450, %f449, %f449;
	add.f32 	%f451, %f442, %f443;
	add.f32 	%f452, %f451, %f451;
	add.f32 	%f453, %f440, %f441;
	add.f32 	%f454, %f453, %f453;
	sub.f32 	%f455, %f438, %f437;
	sub.f32 	%f456, %f455, %f439;
	fma.rn.f32 	%f457, %f895, %f436, %f456;
	sub.f32 	%f458, %f444, %f445;
	add.f32 	%f459, %f458, %f458;
	sub.f32 	%f460, %f442, %f443;
	add.f32 	%f461, %f460, %f460;
	add.f32 	%f462, %f444, %f445;
	add.f32 	%f463, %f462, %f462;
	neg.f32 	%f464, %f437;
	sub.f32 	%f465, %f464, %f438;
	add.f32 	%f466, %f439, %f465;
	fma.rn.f32 	%f467, %f895, %f436, %f466;
	mul.f32 	%f468, %f886, %f448;
	fma.rn.f32 	%f469, %f889, %f450, %f468;
	fma.rn.f32 	%f470, %f891, %f452, %f469;
	add.f32 	%f899, %f896, %f470;
	mul.f32 	%f471, %f889, %f457;
	fma.rn.f32 	%f472, %f886, %f454, %f471;
	fma.rn.f32 	%f473, %f891, %f459, %f472;
	add.f32 	%f903, %f897, %f473;
	mul.f32 	%f474, %f889, %f463;
	fma.rn.f32 	%f475, %f886, %f461, %f474;
	fma.rn.f32 	%f476, %f891, %f467, %f475;
	add.f32 	%f907, %f898, %f476;
	mul.f32 	%f477, %f885, %f448;
	fma.rn.f32 	%f478, %f888, %f450, %f477;
	fma.rn.f32 	%f900, %f890, %f452, %f478;
	mul.f32 	%f479, %f888, %f457;
	fma.rn.f32 	%f480, %f885, %f454, %f479;
	fma.rn.f32 	%f904, %f890, %f459, %f480;
	mul.f32 	%f481, %f888, %f463;
	fma.rn.f32 	%f482, %f885, %f461, %f481;
	fma.rn.f32 	%f908, %f890, %f467, %f482;
	mul.f32 	%f483, %f884, %f448;
	fma.rn.f32 	%f901, %f887, %f450, %f483;
	mul.f32 	%f484, %f887, %f457;
	fma.rn.f32 	%f905, %f884, %f454, %f484;
	mul.f32 	%f485, %f887, %f463;
	fma.rn.f32 	%f909, %f884, %f461, %f485;
	mul.f32 	%f902, %f883, %f448;
	mul.f32 	%f906, %f883, %f454;
	mul.f32 	%f910, %f883, %f461;

$L__BB0_15:
	mul.f32 	%f523, %f904, %f909;
	mul.f32 	%f524, %f905, %f908;
	sub.f32 	%f525, %f524, %f523;
	mul.f32 	%f526, %f902, %f525;
	mul.f32 	%f527, %f904, %f910;
	mul.f32 	%f528, %f906, %f908;
	sub.f32 	%f529, %f528, %f527;
	mul.f32 	%f530, %f901, %f529;
	sub.f32 	%f531, %f526, %f530;
	mul.f32 	%f532, %f905, %f910;
	mul.f32 	%f533, %f906, %f909;
	sub.f32 	%f534, %f533, %f532;
	fma.rn.f32 	%f535, %f900, %f534, %f531;
	rcp.rn.f32 	%f536, %f535;
	mul.f32 	%f914, %f525, %f536;
	mul.f32 	%f537, %f901, %f908;
	mul.f32 	%f538, %f900, %f909;
	sub.f32 	%f539, %f538, %f537;
	mul.f32 	%f913, %f539, %f536;
	mul.f32 	%f540, %f900, %f905;
	mul.f32 	%f541, %f901, %f904;
	sub.f32 	%f542, %f541, %f540;
	mul.f32 	%f912, %f542, %f536;
	sub.f32 	%f543, %f527, %f528;
	mul.f32 	%f918, %f543, %f536;
	mul.f32 	%f544, %f900, %f910;
	mul.f32 	%f545, %f902, %f908;
	sub.f32 	%f546, %f545, %f544;
	mul.f32 	%f917, %f546, %f536;
	mul.f32 	%f547, %f902, %f904;
	mul.f32 	%f548, %f900, %f906;
	sub.f32 	%f549, %f548, %f547;
	mul.f32 	%f916, %f549, %f536;
	mul.f32 	%f922, %f534, %f536;
	mul.f32 	%f550, %f902, %f909;
	mul.f32 	%f551, %f901, %f910;
	sub.f32 	%f552, %f551, %f550;
	mul.f32 	%f921, %f552, %f536;
	mul.f32 	%f553, %f901, %f906;
	mul.f32 	%f554, %f902, %f905;
	sub.f32 	%f555, %f554, %f553;
	mul.f32 	%f920, %f555, %f536;
	mul.f32 	%f556, %f899, %f914;
	neg.f32 	%f557, %f556;
	mul.f32 	%f558, %f903, %f913;
	sub.f32 	%f559, %f557, %f558;
	mul.f32 	%f560, %f907, %f912;
	sub.f32 	%f911, %f559, %f560;
	mul.f32 	%f561, %f899, %f918;
	neg.f32 	%f562, %f561;
	mul.f32 	%f563, %f903, %f917;
	sub.f32 	%f564, %f562, %f563;
	mul.f32 	%f565, %f907, %f916;
	sub.f32 	%f915, %f564, %f565;
	mul.f32 	%f566, %f899, %f922;
	neg.f32 	%f567, %f566;
	mul.f32 	%f568, %f903, %f921;
	sub.f32 	%f569, %f567, %f568;
	mul.f32 	%f570, %f907, %f920;
	sub.f32 	%f919, %f569, %f570;
	bra.uni 	$L__BB0_16;

$L__BB0_7:
	// begin inline asm
	call (%rd257), _optix_get_instance_inverse_transform_from_handle, (%rd18);
	// end inline asm

$L__BB0_8:
	// begin inline asm
	cvta.to.global.u64 %rd24, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r15,%r16,%r17,%r18}, [%rd24];
	// end inline asm
	mov.b32 	%f914, %r15;
	mov.b32 	%f913, %r16;
	mov.b32 	%f912, %r17;
	mov.b32 	%f911, %r18;
	add.s64 	%rd28, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd27, %rd28;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r19,%r20,%r21,%r22}, [%rd27];
	// end inline asm
	mov.b32 	%f918, %r19;
	mov.b32 	%f917, %r20;
	mov.b32 	%f916, %r21;
	mov.b32 	%f915, %r22;
	add.s64 	%rd31, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd30, %rd31;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r23,%r24,%r25,%r26}, [%rd30];
	// end inline asm
	mov.b32 	%f922, %r23;
	mov.b32 	%f921, %r24;
	mov.b32 	%f920, %r25;
	mov.b32 	%f919, %r26;

$L__BB0_16:
	setp.eq.s32 	%p10, %r321, 0;
	@%p10 bra 	$L__BB0_18;

	mul.f32 	%f571, %f879, %f914;
	fma.rn.f32 	%f572, %f875, %f913, %f571;
	fma.rn.f32 	%f151, %f871, %f912, %f572;
	mul.f32 	%f573, %f880, %f914;
	fma.rn.f32 	%f574, %f876, %f913, %f573;
	fma.rn.f32 	%f152, %f872, %f912, %f574;
	mul.f32 	%f575, %f881, %f914;
	fma.rn.f32 	%f576, %f877, %f913, %f575;
	fma.rn.f32 	%f153, %f873, %f912, %f576;
	mul.f32 	%f577, %f882, %f914;
	fma.rn.f32 	%f578, %f878, %f913, %f577;
	fma.rn.f32 	%f579, %f874, %f912, %f578;
	add.f32 	%f911, %f911, %f579;
	mul.f32 	%f580, %f879, %f918;
	fma.rn.f32 	%f581, %f875, %f917, %f580;
	fma.rn.f32 	%f155, %f871, %f916, %f581;
	mul.f32 	%f582, %f880, %f918;
	fma.rn.f32 	%f583, %f876, %f917, %f582;
	fma.rn.f32 	%f156, %f872, %f916, %f583;
	mul.f32 	%f584, %f881, %f918;
	fma.rn.f32 	%f585, %f877, %f917, %f584;
	fma.rn.f32 	%f157, %f873, %f916, %f585;
	mul.f32 	%f586, %f882, %f918;
	fma.rn.f32 	%f587, %f878, %f917, %f586;
	fma.rn.f32 	%f588, %f874, %f916, %f587;
	add.f32 	%f915, %f915, %f588;
	mul.f32 	%f589, %f879, %f922;
	fma.rn.f32 	%f590, %f875, %f921, %f589;
	fma.rn.f32 	%f159, %f871, %f920, %f590;
	mul.f32 	%f591, %f880, %f922;
	fma.rn.f32 	%f592, %f876, %f921, %f591;
	fma.rn.f32 	%f160, %f872, %f920, %f592;
	mul.f32 	%f593, %f881, %f922;
	fma.rn.f32 	%f594, %f877, %f921, %f593;
	fma.rn.f32 	%f161, %f873, %f920, %f594;
	mul.f32 	%f595, %f882, %f922;
	fma.rn.f32 	%f596, %f878, %f921, %f595;
	fma.rn.f32 	%f597, %f874, %f920, %f596;
	add.f32 	%f919, %f919, %f597;
	mov.f32 	%f912, %f153;
	mov.f32 	%f913, %f152;
	mov.f32 	%f914, %f151;
	mov.f32 	%f916, %f157;
	mov.f32 	%f917, %f156;
	mov.f32 	%f918, %f155;
	mov.f32 	%f920, %f161;
	mov.f32 	%f921, %f160;
	mov.f32 	%f922, %f159;

$L__BB0_18:
	add.s32 	%r321, %r321, 1;
	setp.lt.u32 	%p11, %r321, %r10;
	mov.f32 	%f871, %f922;
	mov.f32 	%f872, %f921;
	mov.f32 	%f873, %f920;
	mov.f32 	%f874, %f919;
	mov.f32 	%f875, %f918;
	mov.f32 	%f876, %f917;
	mov.f32 	%f877, %f916;
	mov.f32 	%f878, %f915;
	mov.f32 	%f879, %f914;
	mov.f32 	%f880, %f913;
	mov.f32 	%f881, %f912;
	mov.f32 	%f882, %f911;
	@%p11 bra 	$L__BB0_3;

$L__BB0_19:
	mul.f32 	%f598, %f947, %f914;
	fma.rn.f32 	%f599, %f948, %f913, %f598;
	fma.rn.f32 	%f600, %f949, %f912, %f599;
	mul.f32 	%f601, %f947, %f918;
	fma.rn.f32 	%f602, %f948, %f917, %f601;
	fma.rn.f32 	%f603, %f949, %f916, %f602;
	mul.f32 	%f604, %f947, %f922;
	fma.rn.f32 	%f605, %f948, %f921, %f604;
	fma.rn.f32 	%f606, %f949, %f920, %f605;
	add.f32 	%f949, %f919, %f606;
	add.f32 	%f948, %f915, %f603;
	add.f32 	%f947, %f911, %f600;

$L__BB0_21:
	// begin inline asm
	call (%f1005), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f1006), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f609), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r161), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p12, %r161, 0;
	@%p12 bra 	$L__BB0_41;

	// begin inline asm
	call (%r162), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f610), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p13, %r162, 0;
	@%p13 bra 	$L__BB0_40;

	mov.u32 	%r322, 0;

$L__BB0_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd137), _optix_get_transform_list_handle, (%r322);
	// end inline asm
	// begin inline asm
	call (%r165), _optix_get_transform_type_from_handle, (%rd137);
	// end inline asm
	or.b32  	%r166, %r165, 1;
	setp.eq.s32 	%p14, %r166, 3;
	@%p14 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_25;

$L__BB0_30:
	setp.eq.s32 	%p17, %r165, 2;
	@%p17 bra 	$L__BB0_34;
	bra.uni 	$L__BB0_31;

$L__BB0_34:
	// begin inline asm
	call (%rd209), _optix_get_matrix_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd211, %rd209;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd211];
	// end inline asm
	add.s64 	%rd215, %rd209, 16;
	// begin inline asm
	cvta.to.global.u64 %rd214, %rd215;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd214];
	// end inline asm
	add.s64 	%rd218, %rd209, 32;
	// begin inline asm
	cvta.to.global.u64 %rd217, %rd218;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd217];
	// end inline asm
	add.s64 	%rd221, %rd209, 48;
	// begin inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd220];
	// end inline asm
	add.s64 	%rd224, %rd209, 64;
	// begin inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd223];
	// end inline asm
	add.s64 	%rd227, %rd209, 80;
	// begin inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd226];
	// end inline asm
	add.s64 	%rd230, %rd209, 96;
	// begin inline asm
	cvta.to.global.u64 %rd229, %rd230;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd229];
	// end inline asm
	add.s64 	%rd233, %rd209, 112;
	// begin inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd232];
	// end inline asm
	mov.b32 	%f714, %r257;
	mov.b32 	%f715, %r258;
	and.b32  	%r298, %r256, 65535;
	add.s32 	%r299, %r298, -1;
	cvt.rn.f32.s32 	%f716, %r299;
	sub.f32 	%f717, %f610, %f714;
	mul.f32 	%f718, %f717, %f716;
	sub.f32 	%f719, %f715, %f714;
	div.rn.f32 	%f720, %f718, %f719;
	min.f32 	%f721, %f716, %f720;
	mov.f32 	%f722, 0f00000000;
	max.f32 	%f723, %f722, %f721;
	cvt.rmi.f32.f32 	%f724, %f723;
	sub.f32 	%f258, %f723, %f724;
	cvt.rzi.s32.f32 	%r300, %f724;
	cvt.s64.s32 	%rd15, %r300;
	mul.wide.s32 	%rd244, %r300, 48;
	add.s64 	%rd236, %rd218, %rd244;
	// begin inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd235];
	// end inline asm
	mov.b32 	%f975, %r286;
	mov.b32 	%f976, %r287;
	mov.b32 	%f977, %r288;
	add.s64 	%rd239, %rd236, 16;
	// begin inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd238];
	// end inline asm
	mov.b32 	%f972, %r290;
	mov.b32 	%f973, %r291;
	mov.b32 	%f974, %r292;
	add.s64 	%rd242, %rd236, 32;
	// begin inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd241];
	// end inline asm
	mov.b32 	%f969, %r294;
	mov.b32 	%f970, %r295;
	mov.b32 	%f971, %r296;
	setp.leu.f32 	%p19, %f258, 0f00000000;
	@%p19 bra 	$L__BB0_36;

	mov.f32 	%f725, 0f3F800000;
	sub.f32 	%f726, %f725, %f258;
	mul.lo.s64 	%rd254, %rd15, 48;
	add.s64 	%rd255, %rd209, %rd254;
	add.s64 	%rd246, %rd255, 80;
	// begin inline asm
	cvta.to.global.u64 %rd245, %rd246;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd245];
	// end inline asm
	mov.b32 	%f727, %r301;
	mov.b32 	%f728, %r302;
	mov.b32 	%f729, %r303;
	mul.f32 	%f730, %f258, %f727;
	mul.f32 	%f731, %f258, %f728;
	mul.f32 	%f732, %f258, %f729;
	fma.rn.f32 	%f975, %f726, %f975, %f730;
	fma.rn.f32 	%f976, %f726, %f976, %f731;
	fma.rn.f32 	%f977, %f726, %f977, %f732;
	add.s64 	%rd249, %rd255, 96;
	// begin inline asm
	cvta.to.global.u64 %rd248, %rd249;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd248];
	// end inline asm
	mov.b32 	%f733, %r305;
	mov.b32 	%f734, %r306;
	mov.b32 	%f735, %r307;
	mul.f32 	%f736, %f258, %f733;
	mul.f32 	%f737, %f258, %f734;
	mul.f32 	%f738, %f258, %f735;
	fma.rn.f32 	%f972, %f726, %f972, %f736;
	fma.rn.f32 	%f973, %f726, %f973, %f737;
	fma.rn.f32 	%f974, %f726, %f974, %f738;
	add.s64 	%rd252, %rd255, 112;
	// begin inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd251];
	// end inline asm
	mov.b32 	%f739, %r309;
	mov.b32 	%f740, %r310;
	mov.b32 	%f741, %r311;
	mul.f32 	%f742, %f258, %f739;
	mul.f32 	%f743, %f258, %f740;
	mul.f32 	%f744, %f258, %f741;
	fma.rn.f32 	%f969, %f726, %f969, %f742;
	fma.rn.f32 	%f970, %f726, %f970, %f743;
	fma.rn.f32 	%f971, %f726, %f971, %f744;
	bra.uni 	$L__BB0_36;

$L__BB0_25:
	mov.f32 	%f978, 0f00000000;
	mov.f32 	%f980, 0f3F800000;
	setp.eq.s32 	%p15, %r165, 4;
	@%p15 bra 	$L__BB0_28;

	setp.ne.s32 	%p16, %r165, 1;
	mov.f32 	%f979, %f978;
	mov.f32 	%f981, %f978;
	mov.f32 	%f982, %f980;
	mov.f32 	%f983, %f978;
	mov.f32 	%f984, %f980;
	mov.f32 	%f985, %f978;
	mov.f32 	%f986, %f978;
	@%p16 bra 	$L__BB0_37;

	// begin inline asm
	call (%rd139), _optix_get_static_transform_from_handle, (%rd137);
	// end inline asm
	add.s64 	%rd258, %rd139, 64;
	bra.uni 	$L__BB0_29;

$L__BB0_31:
	// begin inline asm
	call (%rd152), _optix_get_srt_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd154, %rd152;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd154];
	// end inline asm
	add.s64 	%rd158, %rd152, 16;
	// begin inline asm
	cvta.to.global.u64 %rd157, %rd158;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd157];
	// end inline asm
	add.s64 	%rd161, %rd152, 32;
	// begin inline asm
	cvta.to.global.u64 %rd160, %rd161;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd160];
	// end inline asm
	add.s64 	%rd164, %rd152, 48;
	// begin inline asm
	cvta.to.global.u64 %rd163, %rd164;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd163];
	// end inline asm
	add.s64 	%rd167, %rd152, 64;
	// begin inline asm
	cvta.to.global.u64 %rd166, %rd167;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd166];
	// end inline asm
	add.s64 	%rd170, %rd152, 80;
	// begin inline asm
	cvta.to.global.u64 %rd169, %rd170;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd169];
	// end inline asm
	add.s64 	%rd173, %rd152, 96;
	// begin inline asm
	cvta.to.global.u64 %rd172, %rd173;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd172];
	// end inline asm
	add.s64 	%rd176, %rd152, 112;
	// begin inline asm
	cvta.to.global.u64 %rd175, %rd176;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd175];
	// end inline asm
	add.s64 	%rd179, %rd152, 128;
	// begin inline asm
	cvta.to.global.u64 %rd178, %rd179;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd178];
	// end inline asm
	add.s64 	%rd182, %rd152, 144;
	// begin inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd181];
	// end inline asm
	mov.b32 	%f622, %r182;
	mov.b32 	%f623, %r183;
	and.b32  	%r235, %r181, 65535;
	add.s32 	%r236, %r235, -1;
	cvt.rn.f32.s32 	%f624, %r236;
	sub.f32 	%f625, %f610, %f622;
	mul.f32 	%f626, %f625, %f624;
	sub.f32 	%f627, %f623, %f622;
	div.rn.f32 	%f628, %f626, %f627;
	min.f32 	%f629, %f624, %f628;
	mov.f32 	%f630, 0f00000000;
	max.f32 	%f631, %f630, %f629;
	cvt.rmi.f32.f32 	%f632, %f631;
	sub.f32 	%f218, %f631, %f632;
	cvt.rzi.s32.f32 	%r237, %f632;
	mul.wide.s32 	%rd196, %r237, 64;
	add.s64 	%rd185, %rd161, %rd196;
	// begin inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd184];
	// end inline asm
	mov.b32 	%f959, %r219;
	mov.b32 	%f960, %r220;
	mov.b32 	%f961, %r221;
	add.s64 	%rd188, %rd185, 16;
	// begin inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd187];
	// end inline asm
	mov.b32 	%f962, %r223;
	mov.b32 	%f963, %r224;
	mov.b32 	%f964, %r226;
	add.s64 	%rd191, %rd185, 32;
	// begin inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd190];
	// end inline asm
	mov.b32 	%f965, %r228;
	mov.b32 	%f966, %r229;
	mov.b32 	%f967, %r230;
	add.s64 	%rd194, %rd185, 48;
	// begin inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd193];
	// end inline asm
	mov.b32 	%f968, %r231;
	setp.leu.f32 	%p18, %f218, 0f00000000;
	@%p18 bra 	$L__BB0_33;

	mov.f32 	%f633, 0f3F800000;
	sub.f32 	%f634, %f633, %f218;
	add.s64 	%rd198, %rd185, 64;
	// begin inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd197];
	// end inline asm
	mov.b32 	%f635, %r238;
	mov.b32 	%f636, %r239;
	mov.b32 	%f637, %r240;
	mul.f32 	%f638, %f218, %f635;
	mul.f32 	%f639, %f218, %f636;
	mul.f32 	%f640, %f218, %f637;
	fma.rn.f32 	%f959, %f634, %f959, %f638;
	fma.rn.f32 	%f960, %f634, %f960, %f639;
	fma.rn.f32 	%f961, %f634, %f961, %f640;
	add.s64 	%rd201, %rd185, 80;
	// begin inline asm
	cvta.to.global.u64 %rd200, %rd201;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd200];
	// end inline asm
	mov.b32 	%f641, %r242;
	mov.b32 	%f642, %r243;
	mov.b32 	%f643, %r245;
	mul.f32 	%f644, %f218, %f641;
	mul.f32 	%f645, %f218, %f642;
	mul.f32 	%f646, %f218, %f643;
	fma.rn.f32 	%f962, %f634, %f962, %f644;
	fma.rn.f32 	%f963, %f634, %f963, %f645;
	fma.rn.f32 	%f964, %f634, %f964, %f646;
	add.s64 	%rd204, %rd185, 96;
	// begin inline asm
	cvta.to.global.u64 %rd203, %rd204;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd203];
	// end inline asm
	mov.b32 	%f647, %r247;
	mov.b32 	%f648, %r248;
	mov.b32 	%f649, %r249;
	mul.f32 	%f650, %f218, %f647;
	mul.f32 	%f651, %f218, %f648;
	mul.f32 	%f652, %f218, %f649;
	fma.rn.f32 	%f653, %f634, %f965, %f650;
	fma.rn.f32 	%f654, %f634, %f966, %f651;
	fma.rn.f32 	%f655, %f634, %f967, %f652;
	add.s64 	%rd207, %rd185, 112;
	// begin inline asm
	cvta.to.global.u64 %rd206, %rd207;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd206];
	// end inline asm
	mov.b32 	%f656, %r250;
	mul.f32 	%f657, %f218, %f656;
	fma.rn.f32 	%f658, %f634, %f968, %f657;
	mul.f32 	%f659, %f654, %f654;
	fma.rn.f32 	%f660, %f653, %f653, %f659;
	fma.rn.f32 	%f661, %f655, %f655, %f660;
	fma.rn.f32 	%f662, %f658, %f658, %f661;
	sqrt.rn.f32 	%f663, %f662;
	rcp.rn.f32 	%f664, %f663;
	mul.f32 	%f965, %f653, %f664;
	mul.f32 	%f966, %f654, %f664;
	mul.f32 	%f967, %f655, %f664;
	mul.f32 	%f968, %f664, %f658;

$L__BB0_33:
	mul.f32 	%f665, %f966, %f966;
	fma.rn.f32 	%f666, %f965, %f965, %f665;
	fma.rn.f32 	%f667, %f967, %f967, %f666;
	fma.rn.f32 	%f668, %f968, %f968, %f667;
	rcp.rn.f32 	%f669, %f668;
	mul.f32 	%f670, %f965, %f669;
	mul.f32 	%f671, %f966, %f669;
	mul.f32 	%f672, %f967, %f669;
	mul.f32 	%f673, %f968, %f669;
	mul.f32 	%f674, %f965, %f670;
	mul.f32 	%f675, %f966, %f671;
	mul.f32 	%f676, %f967, %f672;
	mul.f32 	%f677, %f965, %f671;
	mul.f32 	%f678, %f967, %f673;
	mul.f32 	%f679, %f965, %f672;
	mul.f32 	%f680, %f966, %f673;
	mul.f32 	%f681, %f966, %f672;
	mul.f32 	%f682, %f965, %f673;
	sub.f32 	%f683, %f674, %f675;
	sub.f32 	%f684, %f683, %f676;
	fma.rn.f32 	%f685, %f968, %f673, %f684;
	sub.f32 	%f686, %f677, %f678;
	add.f32 	%f687, %f686, %f686;
	add.f32 	%f688, %f679, %f680;
	add.f32 	%f689, %f688, %f688;
	add.f32 	%f690, %f677, %f678;
	add.f32 	%f691, %f690, %f690;
	sub.f32 	%f692, %f675, %f674;
	sub.f32 	%f693, %f692, %f676;
	fma.rn.f32 	%f694, %f968, %f673, %f693;
	sub.f32 	%f695, %f681, %f682;
	add.f32 	%f696, %f695, %f695;
	sub.f32 	%f697, %f679, %f680;
	add.f32 	%f698, %f697, %f697;
	add.f32 	%f699, %f681, %f682;
	add.f32 	%f700, %f699, %f699;
	neg.f32 	%f701, %f674;
	sub.f32 	%f702, %f701, %f675;
	add.f32 	%f703, %f676, %f702;
	fma.rn.f32 	%f704, %f968, %f673, %f703;
	mul.f32 	%f705, %f961, %f685;
	fma.rn.f32 	%f706, %f963, %f687, %f705;
	fma.rn.f32 	%f977, %f964, %f689, %f706;
	mul.f32 	%f707, %f963, %f694;
	fma.rn.f32 	%f708, %f961, %f691, %f707;
	fma.rn.f32 	%f974, %f964, %f696, %f708;
	mul.f32 	%f709, %f963, %f700;
	fma.rn.f32 	%f710, %f961, %f698, %f709;
	fma.rn.f32 	%f971, %f964, %f704, %f710;
	mul.f32 	%f711, %f960, %f685;
	fma.rn.f32 	%f976, %f962, %f687, %f711;
	mul.f32 	%f712, %f962, %f694;
	fma.rn.f32 	%f973, %f960, %f691, %f712;
	mul.f32 	%f713, %f962, %f700;
	fma.rn.f32 	%f970, %f960, %f698, %f713;
	mul.f32 	%f975, %f959, %f685;
	mul.f32 	%f972, %f959, %f691;
	mul.f32 	%f969, %f959, %f698;

$L__BB0_36:
	mul.f32 	%f745, %f970, %f974;
	mul.f32 	%f746, %f971, %f973;
	sub.f32 	%f747, %f746, %f745;
	mul.f32 	%f748, %f975, %f747;
	mul.f32 	%f749, %f969, %f974;
	mul.f32 	%f750, %f971, %f972;
	sub.f32 	%f751, %f750, %f749;
	mul.f32 	%f752, %f751, %f976;
	sub.f32 	%f753, %f748, %f752;
	mul.f32 	%f754, %f969, %f973;
	mul.f32 	%f755, %f970, %f972;
	sub.f32 	%f756, %f755, %f754;
	fma.rn.f32 	%f757, %f756, %f977, %f753;
	rcp.rn.f32 	%f758, %f757;
	mul.f32 	%f984, %f747, %f758;
	mul.f32 	%f759, %f971, %f976;
	mul.f32 	%f760, %f970, %f977;
	sub.f32 	%f761, %f760, %f759;
	mul.f32 	%f985, %f761, %f758;
	mul.f32 	%f762, %f973, %f977;
	mul.f32 	%f763, %f974, %f976;
	sub.f32 	%f764, %f763, %f762;
	mul.f32 	%f986, %f764, %f758;
	sub.f32 	%f765, %f749, %f750;
	mul.f32 	%f981, %f765, %f758;
	mul.f32 	%f766, %f969, %f977;
	mul.f32 	%f767, %f971, %f975;
	sub.f32 	%f768, %f767, %f766;
	mul.f32 	%f982, %f768, %f758;
	mul.f32 	%f769, %f974, %f975;
	mul.f32 	%f770, %f972, %f977;
	sub.f32 	%f771, %f770, %f769;
	mul.f32 	%f983, %f771, %f758;
	mul.f32 	%f978, %f756, %f758;
	mul.f32 	%f772, %f970, %f975;
	mul.f32 	%f773, %f969, %f976;
	sub.f32 	%f774, %f773, %f772;
	mul.f32 	%f979, %f774, %f758;
	mul.f32 	%f775, %f972, %f976;
	mul.f32 	%f776, %f973, %f975;
	sub.f32 	%f777, %f776, %f775;
	mul.f32 	%f980, %f777, %f758;
	bra.uni 	$L__BB0_37;

$L__BB0_28:
	// begin inline asm
	call (%rd258), _optix_get_instance_inverse_transform_from_handle, (%rd137);
	// end inline asm

$L__BB0_29:
	// begin inline asm
	cvta.to.global.u64 %rd143, %rd258;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd143];
	// end inline asm
	mov.b32 	%f984, %r167;
	mov.b32 	%f985, %r168;
	mov.b32 	%f986, %r169;
	add.s64 	%rd147, %rd258, 16;
	// begin inline asm
	cvta.to.global.u64 %rd146, %rd147;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd146];
	// end inline asm
	mov.b32 	%f981, %r171;
	mov.b32 	%f982, %r172;
	mov.b32 	%f983, %r173;
	add.s64 	%rd150, %rd258, 32;
	// begin inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd149];
	// end inline asm
	mov.b32 	%f978, %r175;
	mov.b32 	%f979, %r176;
	mov.b32 	%f980, %r177;

$L__BB0_37:
	setp.eq.s32 	%p20, %r322, 0;
	@%p20 bra 	$L__BB0_39;

	mul.f32 	%f778, %f955, %f985;
	fma.rn.f32 	%f779, %f952, %f984, %f778;
	fma.rn.f32 	%f304, %f958, %f986, %f779;
	mul.f32 	%f780, %f954, %f985;
	fma.rn.f32 	%f781, %f951, %f984, %f780;
	fma.rn.f32 	%f305, %f957, %f986, %f781;
	mul.f32 	%f782, %f953, %f985;
	fma.rn.f32 	%f783, %f950, %f984, %f782;
	fma.rn.f32 	%f986, %f956, %f986, %f783;
	mul.f32 	%f784, %f955, %f982;
	fma.rn.f32 	%f785, %f952, %f981, %f784;
	fma.rn.f32 	%f307, %f958, %f983, %f785;
	mul.f32 	%f786, %f954, %f982;
	fma.rn.f32 	%f787, %f951, %f981, %f786;
	fma.rn.f32 	%f308, %f957, %f983, %f787;
	mul.f32 	%f788, %f953, %f982;
	fma.rn.f32 	%f789, %f950, %f981, %f788;
	fma.rn.f32 	%f983, %f956, %f983, %f789;
	mul.f32 	%f790, %f955, %f979;
	fma.rn.f32 	%f791, %f952, %f978, %f790;
	fma.rn.f32 	%f310, %f958, %f980, %f791;
	mul.f32 	%f792, %f954, %f979;
	fma.rn.f32 	%f793, %f951, %f978, %f792;
	fma.rn.f32 	%f311, %f957, %f980, %f793;
	mul.f32 	%f794, %f953, %f979;
	fma.rn.f32 	%f795, %f950, %f978, %f794;
	fma.rn.f32 	%f980, %f956, %f980, %f795;
	mov.f32 	%f978, %f310;
	mov.f32 	%f979, %f311;
	mov.f32 	%f981, %f307;
	mov.f32 	%f982, %f308;
	mov.f32 	%f984, %f304;
	mov.f32 	%f985, %f305;

$L__BB0_39:
	add.s32 	%r322, %r322, 1;
	setp.lt.u32 	%p21, %r322, %r162;
	mov.f32 	%f950, %f986;
	mov.f32 	%f951, %f985;
	mov.f32 	%f952, %f984;
	mov.f32 	%f953, %f983;
	mov.f32 	%f954, %f982;
	mov.f32 	%f955, %f981;
	mov.f32 	%f956, %f980;
	mov.f32 	%f957, %f979;
	mov.f32 	%f958, %f978;
	@%p21 bra 	$L__BB0_24;

$L__BB0_40:
	mul.f32 	%f796, %f1006, %f985;
	fma.rn.f32 	%f797, %f1005, %f984, %f796;
	mul.f32 	%f798, %f1006, %f982;
	fma.rn.f32 	%f799, %f1005, %f981, %f798;
	mul.f32 	%f800, %f1006, %f979;
	fma.rn.f32 	%f801, %f1005, %f978, %f800;
	fma.rn.f32 	%f1007, %f609, %f980, %f801;
	fma.rn.f32 	%f1006, %f609, %f983, %f799;
	fma.rn.f32 	%f1005, %f609, %f986, %f797;
	bra.uni 	$L__BB0_42;

$L__BB0_41:
	mov.f32 	%f1007, %f609;

$L__BB0_42:
	// begin inline asm
	call (%f802), _optix_get_ray_tmin, ();
	// end inline asm
	// begin inline asm
	call (%f803), _optix_get_ray_tmax, ();
	// end inline asm
	sub.f32 	%f340, %f803, %f802;
	fma.rn.f32 	%f806, %f1005, %f802, %f947;
	fma.rn.f32 	%f807, %f1006, %f802, %f948;
	fma.rn.f32 	%f808, %f1007, %f802, %f949;
	add.s64 	%rd16, %rd1, 80;
	ld.v4.f32 	{%f809, %f810, %f811, %f812}, [%rd1+80];
	ld.f32 	%f816, [%rd1+32];
	fma.rn.f32 	%f817, %f806, %f816, %f809;
	ld.f32 	%f818, [%rd1+36];
	fma.rn.f32 	%f819, %f806, %f818, %f810;
	ld.f32 	%f820, [%rd1+40];
	fma.rn.f32 	%f821, %f806, %f820, %f811;
	ld.f32 	%f822, [%rd1+48];
	fma.rn.f32 	%f823, %f807, %f822, %f817;
	ld.f32 	%f824, [%rd1+52];
	fma.rn.f32 	%f825, %f807, %f824, %f819;
	ld.f32 	%f826, [%rd1+56];
	fma.rn.f32 	%f827, %f807, %f826, %f821;
	ld.f32 	%f828, [%rd1+64];
	fma.rn.f32 	%f829, %f808, %f828, %f823;
	ld.f32 	%f830, [%rd1+68];
	fma.rn.f32 	%f831, %f808, %f830, %f825;
	ld.f32 	%f832, [%rd1+72];
	fma.rn.f32 	%f341, %f808, %f832, %f827;
	ld.v4.f32 	{%f833, %f834, %f835, %f836}, [%rd1+32];
	mul.f32 	%f840, %f1005, %f833;
	mul.f32 	%f841, %f1005, %f834;
	mul.f32 	%f842, %f1005, %f835;
	fma.rn.f32 	%f843, %f1006, %f822, %f840;
	fma.rn.f32 	%f844, %f1006, %f824, %f841;
	fma.rn.f32 	%f845, %f1006, %f826, %f842;
	fma.rn.f32 	%f846, %f1007, %f828, %f843;
	fma.rn.f32 	%f847, %f1007, %f830, %f844;
	fma.rn.f32 	%f342, %f1007, %f832, %f845;
	mul.f32 	%f848, %f847, %f847;
	fma.rn.f32 	%f343, %f846, %f846, %f848;
	mul.f32 	%f849, %f831, %f847;
	fma.rn.f32 	%f850, %f829, %f846, %f849;
	add.f32 	%f344, %f850, %f850;
	mul.f32 	%f851, %f831, %f831;
	fma.rn.f32 	%f852, %f829, %f829, %f851;
	ld.f32 	%f853, [%rd1+164];
	mul.f32 	%f854, %f853, %f853;
	sub.f32 	%f345, %f852, %f854;
	setp.eq.f32 	%p23, %f343, 0f00000000;
	setp.eq.f32 	%p24, %f344, 0f00000000;
	and.pred  	%p25, %p23, %p24;
	mov.pred 	%p53, 0;
	@%p25 bra 	$L__BB0_45;

	neg.f32 	%f855, %f345;
	div.rn.f32 	%f1008, %f855, %f344;
	mul.f32 	%f856, %f343, 0fC0800000;
	mul.f32 	%f857, %f856, %f345;
	fma.rn.f32 	%f347, %f344, %f344, %f857;
	setp.neu.f32 	%p27, %f343, 0f00000000;
	setp.lt.f32 	%p28, %f347, 0f00000000;
	and.pred  	%p29, %p28, %p27;
	mov.f32 	%f1009, %f1008;
	@%p29 bra 	$L__BB0_45;

	mov.b32 	%r313, %f344;
	and.b32  	%r314, %r313, -2147483648;
	sqrt.rn.f32 	%f858, %f347;
	mov.b32 	%r315, %f858;
	and.b32  	%r316, %r315, 2147483647;
	or.b32  	%r317, %r316, %r314;
	mov.b32 	%f859, %r317;
	add.f32 	%f860, %f344, %f859;
	mul.f32 	%f861, %f860, 0fBF000000;
	div.rn.f32 	%f862, %f861, %f343;
	div.rn.f32 	%f863, %f345, %f861;
	min.f32 	%f864, %f862, %f863;
	max.f32 	%f865, %f862, %f863;
	selp.f32 	%f348, %f1008, %f864, %p23;
	selp.f32 	%f1009, %f1008, %f865, %p23;
	mov.pred 	%p53, -1;
	mov.f32 	%f1008, %f348;

$L__BB0_45:
	fma.rn.f32 	%f352, %f342, %f1008, %f341;
	fma.rn.f32 	%f353, %f342, %f1009, %f341;
	setp.ge.f32 	%p32, %f1009, 0f00000000;
	setp.le.f32 	%p33, %f1008, %f340;
	and.pred  	%p34, %p32, %p33;
	and.pred  	%p35, %p53, %p34;
	setp.leu.f32 	%p36, %f1009, %f340;
	setp.geu.f32 	%p37, %f1008, 0f00000000;
	or.pred  	%p38, %p37, %p36;
	and.pred  	%p39, %p35, %p38;
	mov.u16 	%rs3, 0;
	not.pred 	%p40, %p39;
	mov.u16 	%rs7, %rs3;
	@%p40 bra 	$L__BB0_51;

	setp.ltu.f32 	%p41, %f352, 0f00000000;
	@%p41 bra 	$L__BB0_48;

	ld.f32 	%f866, [%rd16+80];
	setp.le.f32 	%p42, %f352, %f866;
	setp.ge.f32 	%p43, %f1008, 0f00000000;
	and.pred  	%p44, %p43, %p42;
	mov.u16 	%rs7, 1;
	@%p44 bra 	$L__BB0_51;

$L__BB0_48:
	setp.ltu.f32 	%p45, %f353, 0f00000000;
	mov.u16 	%rs7, %rs3;
	@%p45 bra 	$L__BB0_51;

	ld.f32 	%f867, [%rd16+80];
	setp.gtu.f32 	%p46, %f353, %f867;
	mov.u16 	%rs7, %rs3;
	@%p46 bra 	$L__BB0_51;

	setp.le.f32 	%p47, %f1009, %f340;
	selp.u16 	%rs7, 1, 0, %p47;

$L__BB0_51:
	setp.ltu.f32 	%p48, %f352, 0f00000000;
	@%p48 bra 	$L__BB0_53;

	ld.f32 	%f868, [%rd16+80];
	setp.le.f32 	%p49, %f352, %f868;
	setp.ge.f32 	%p50, %f1008, 0f00000000;
	and.pred  	%p51, %p50, %p49;
	@%p51 bra 	$L__BB0_54;

$L__BB0_53:
	mov.f32 	%f1008, %f1009;

$L__BB0_54:
	setp.eq.s16 	%p52, %rs7, 0;
	@%p52 bra 	$L__BB0_56;

	mov.u32 	%r319, 254;
	// begin inline asm
	call (%r318), _optix_report_intersection_0, (%f1008, %r319);
	// end inline asm

$L__BB0_56:
	ret;

}
	// .globl	__closesthit__cylinder
.visible .entry __closesthit__cylinder()
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<2>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	ld.u32 	%r10, [%rd1];
	mov.b32 	%r2, %f1;
	mov.u32 	%r8, 0;
	// begin inline asm
	call _optix_set_payload, (%r8, %r2);
	// end inline asm
	mov.u32 	%r3, 1;
	// begin inline asm
	call _optix_set_payload, (%r3, %r13);
	// end inline asm
	mov.u32 	%r5, 2;
	// begin inline asm
	call _optix_set_payload, (%r5, %r14);
	// end inline asm
	mov.u32 	%r7, 3;
	// begin inline asm
	call _optix_set_payload, (%r7, %r8);
	// end inline asm
	mov.u32 	%r9, 4;
	// begin inline asm
	call _optix_set_payload, (%r9, %r10);
	// end inline asm
	mov.u32 	%r12, 5;
	// begin inline asm
	call (%r11), _optix_get_payload, (%r12);
	// end inline asm
	setp.eq.s32 	%p1, %r11, 0;
	@%p1 bra 	$L__BB1_2;

	// begin inline asm
	call (%r15), _optix_read_instance_id, ();
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r12, %r15);
	// end inline asm

$L__BB1_2:
	ret;

}
	// .globl	__intersection__disk
.visible .entry __intersection__disk()
{
	.reg .pred 	%p<22>;
	.reg .f32 	%f<979>;
	.reg .b32 	%r<318>;
	.reg .b64 	%rd<258>;


	// begin inline asm
	call (%rd16), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd16+8];
	// begin inline asm
	call (%f918), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f919), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f920), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p1, %r9, 0;
	@%p1 bra 	$L__BB2_21;

	// begin inline asm
	call (%r10), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f344), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p2, %r10, 0;
	@%p2 bra 	$L__BB2_19;

	mov.u32 	%r316, 0;

$L__BB2_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd17), _optix_get_transform_list_handle, (%r316);
	// end inline asm
	// begin inline asm
	call (%r13), _optix_get_transform_type_from_handle, (%rd17);
	// end inline asm
	or.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p3, %r14, 3;
	@%p3 bra 	$L__BB2_9;
	bra.uni 	$L__BB2_4;

$L__BB2_9:
	setp.eq.s32 	%p6, %r13, 2;
	@%p6 bra 	$L__BB2_13;
	bra.uni 	$L__BB2_10;

$L__BB2_13:
	// begin inline asm
	call (%rd89), _optix_get_matrix_motion_transform_from_handle, (%rd17);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd91, %rd89;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd91];
	// end inline asm
	add.s64 	%rd95, %rd89, 16;
	// begin inline asm
	cvta.to.global.u64 %rd94, %rd95;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd94];
	// end inline asm
	add.s64 	%rd98, %rd89, 32;
	// begin inline asm
	cvta.to.global.u64 %rd97, %rd98;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd97];
	// end inline asm
	add.s64 	%rd101, %rd89, 48;
	// begin inline asm
	cvta.to.global.u64 %rd100, %rd101;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd100];
	// end inline asm
	add.s64 	%rd104, %rd89, 64;
	// begin inline asm
	cvta.to.global.u64 %rd103, %rd104;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd103];
	// end inline asm
	add.s64 	%rd107, %rd89, 80;
	// begin inline asm
	cvta.to.global.u64 %rd106, %rd107;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd106];
	// end inline asm
	add.s64 	%rd110, %rd89, 96;
	// begin inline asm
	cvta.to.global.u64 %rd109, %rd110;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd109];
	// end inline asm
	add.s64 	%rd113, %rd89, 112;
	// begin inline asm
	cvta.to.global.u64 %rd112, %rd113;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd112];
	// end inline asm
	mov.b32 	%f472, %r105;
	mov.b32 	%f473, %r106;
	and.b32  	%r146, %r104, 65535;
	add.s32 	%r147, %r146, -1;
	cvt.rn.f32.s32 	%f474, %r147;
	sub.f32 	%f475, %f344, %f472;
	mul.f32 	%f476, %f475, %f474;
	sub.f32 	%f477, %f473, %f472;
	div.rn.f32 	%f478, %f476, %f477;
	min.f32 	%f479, %f474, %f478;
	mov.f32 	%f480, 0f00000000;
	max.f32 	%f481, %f480, %f479;
	cvt.rmi.f32.f32 	%f482, %f481;
	sub.f32 	%f90, %f481, %f482;
	cvt.rzi.s32.f32 	%r148, %f482;
	mul.wide.s32 	%rd124, %r148, 48;
	add.s64 	%rd116, %rd98, %rd124;
	// begin inline asm
	cvta.to.global.u64 %rd115, %rd116;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd115];
	// end inline asm
	mov.b32 	%f873, %r134;
	mov.b32 	%f872, %r135;
	mov.b32 	%f871, %r136;
	mov.b32 	%f870, %r137;
	add.s64 	%rd119, %rd116, 16;
	// begin inline asm
	cvta.to.global.u64 %rd118, %rd119;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd118];
	// end inline asm
	mov.b32 	%f877, %r138;
	mov.b32 	%f876, %r139;
	mov.b32 	%f875, %r140;
	mov.b32 	%f874, %r141;
	add.s64 	%rd122, %rd116, 32;
	// begin inline asm
	cvta.to.global.u64 %rd121, %rd122;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd121];
	// end inline asm
	mov.b32 	%f881, %r142;
	mov.b32 	%f880, %r143;
	mov.b32 	%f879, %r144;
	mov.b32 	%f878, %r145;
	setp.leu.f32 	%p8, %f90, 0f00000000;
	@%p8 bra 	$L__BB2_15;

	cvt.rmi.f32.f32 	%f841, %f481;
	cvt.rzi.s32.f32 	%r315, %f841;
	cvt.s64.s32 	%rd255, %r315;
	mov.f32 	%f483, 0f3F800000;
	sub.f32 	%f484, %f483, %f90;
	mul.lo.s64 	%rd134, %rd255, 48;
	add.s64 	%rd135, %rd89, %rd134;
	add.s64 	%rd126, %rd135, 80;
	// begin inline asm
	cvta.to.global.u64 %rd125, %rd126;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r149,%r150,%r151,%r152}, [%rd125];
	// end inline asm
	mov.b32 	%f485, %r149;
	mov.b32 	%f486, %r150;
	mov.b32 	%f487, %r151;
	mov.b32 	%f488, %r152;
	mul.f32 	%f489, %f90, %f485;
	mul.f32 	%f490, %f90, %f486;
	mul.f32 	%f491, %f90, %f487;
	mul.f32 	%f492, %f90, %f488;
	fma.rn.f32 	%f873, %f484, %f873, %f489;
	fma.rn.f32 	%f872, %f484, %f872, %f490;
	fma.rn.f32 	%f871, %f484, %f871, %f491;
	fma.rn.f32 	%f870, %f484, %f870, %f492;
	add.s64 	%rd129, %rd135, 96;
	// begin inline asm
	cvta.to.global.u64 %rd128, %rd129;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r153,%r154,%r155,%r156}, [%rd128];
	// end inline asm
	mov.b32 	%f493, %r153;
	mov.b32 	%f494, %r154;
	mov.b32 	%f495, %r155;
	mov.b32 	%f496, %r156;
	mul.f32 	%f497, %f90, %f493;
	mul.f32 	%f498, %f90, %f494;
	mul.f32 	%f499, %f90, %f495;
	mul.f32 	%f500, %f90, %f496;
	fma.rn.f32 	%f877, %f484, %f877, %f497;
	fma.rn.f32 	%f876, %f484, %f876, %f498;
	fma.rn.f32 	%f875, %f484, %f875, %f499;
	fma.rn.f32 	%f874, %f484, %f874, %f500;
	add.s64 	%rd132, %rd135, 112;
	// begin inline asm
	cvta.to.global.u64 %rd131, %rd132;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r157,%r158,%r159,%r160}, [%rd131];
	// end inline asm
	mov.b32 	%f501, %r157;
	mov.b32 	%f502, %r158;
	mov.b32 	%f503, %r159;
	mov.b32 	%f504, %r160;
	mul.f32 	%f505, %f90, %f501;
	mul.f32 	%f506, %f90, %f502;
	mul.f32 	%f507, %f90, %f503;
	mul.f32 	%f508, %f90, %f504;
	fma.rn.f32 	%f881, %f484, %f881, %f505;
	fma.rn.f32 	%f880, %f484, %f880, %f506;
	fma.rn.f32 	%f879, %f484, %f879, %f507;
	fma.rn.f32 	%f878, %f484, %f878, %f508;
	bra.uni 	$L__BB2_15;

$L__BB2_4:
	mov.f32 	%f882, 0f00000000;
	mov.f32 	%f885, 0f3F800000;
	setp.eq.s32 	%p4, %r13, 4;
	@%p4 bra 	$L__BB2_7;

	setp.ne.s32 	%p5, %r13, 1;
	mov.f32 	%f883, %f882;
	mov.f32 	%f884, %f882;
	mov.f32 	%f886, %f882;
	mov.f32 	%f887, %f882;
	mov.f32 	%f888, %f885;
	mov.f32 	%f889, %f882;
	mov.f32 	%f890, %f882;
	mov.f32 	%f891, %f885;
	mov.f32 	%f892, %f882;
	mov.f32 	%f893, %f882;
	@%p5 bra 	$L__BB2_16;

	// begin inline asm
	call (%rd19), _optix_get_static_transform_from_handle, (%rd17);
	// end inline asm
	add.s64 	%rd256, %rd19, 64;
	bra.uni 	$L__BB2_8;

$L__BB2_10:
	// begin inline asm
	call (%rd32), _optix_get_srt_motion_transform_from_handle, (%rd17);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd34, %rd32;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r27,%r28,%r29,%r30}, [%rd34];
	// end inline asm
	add.s64 	%rd38, %rd32, 16;
	// begin inline asm
	cvta.to.global.u64 %rd37, %rd38;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r31,%r32,%r33,%r34}, [%rd37];
	// end inline asm
	add.s64 	%rd41, %rd32, 32;
	// begin inline asm
	cvta.to.global.u64 %rd40, %rd41;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r35,%r36,%r37,%r38}, [%rd40];
	// end inline asm
	add.s64 	%rd44, %rd32, 48;
	// begin inline asm
	cvta.to.global.u64 %rd43, %rd44;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r39,%r40,%r41,%r42}, [%rd43];
	// end inline asm
	add.s64 	%rd47, %rd32, 64;
	// begin inline asm
	cvta.to.global.u64 %rd46, %rd47;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r43,%r44,%r45,%r46}, [%rd46];
	// end inline asm
	add.s64 	%rd50, %rd32, 80;
	// begin inline asm
	cvta.to.global.u64 %rd49, %rd50;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd49];
	// end inline asm
	add.s64 	%rd53, %rd32, 96;
	// begin inline asm
	cvta.to.global.u64 %rd52, %rd53;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd52];
	// end inline asm
	add.s64 	%rd56, %rd32, 112;
	// begin inline asm
	cvta.to.global.u64 %rd55, %rd56;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd55];
	// end inline asm
	add.s64 	%rd59, %rd32, 128;
	// begin inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd58];
	// end inline asm
	add.s64 	%rd62, %rd32, 144;
	// begin inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd61];
	// end inline asm
	mov.b32 	%f359, %r30;
	mov.b32 	%f360, %r31;
	and.b32  	%r83, %r29, 65535;
	add.s32 	%r84, %r83, -1;
	cvt.rn.f32.s32 	%f361, %r84;
	sub.f32 	%f362, %f344, %f359;
	mul.f32 	%f363, %f362, %f361;
	sub.f32 	%f364, %f360, %f359;
	div.rn.f32 	%f365, %f363, %f364;
	min.f32 	%f366, %f361, %f365;
	mov.f32 	%f367, 0f00000000;
	max.f32 	%f368, %f367, %f366;
	cvt.rmi.f32.f32 	%f369, %f368;
	sub.f32 	%f29, %f368, %f369;
	cvt.rzi.s32.f32 	%r85, %f369;
	mul.wide.s32 	%rd76, %r85, 64;
	add.s64 	%rd65, %rd41, %rd76;
	// begin inline asm
	cvta.to.global.u64 %rd64, %rd65;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd64];
	// end inline asm
	mov.b32 	%f854, %r67;
	mov.b32 	%f855, %r68;
	mov.b32 	%f856, %r69;
	mov.b32 	%f857, %r70;
	add.s64 	%rd68, %rd65, 16;
	// begin inline asm
	cvta.to.global.u64 %rd67, %rd68;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd67];
	// end inline asm
	mov.b32 	%f858, %r71;
	mov.b32 	%f859, %r72;
	mov.b32 	%f860, %r73;
	mov.b32 	%f861, %r74;
	add.s64 	%rd71, %rd65, 32;
	// begin inline asm
	cvta.to.global.u64 %rd70, %rd71;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd70];
	// end inline asm
	mov.b32 	%f862, %r75;
	mov.b32 	%f863, %r76;
	mov.b32 	%f864, %r77;
	mov.b32 	%f865, %r78;
	add.s64 	%rd74, %rd65, 48;
	// begin inline asm
	cvta.to.global.u64 %rd73, %rd74;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd73];
	// end inline asm
	mov.b32 	%f866, %r79;
	mov.b32 	%f867, %r80;
	mov.b32 	%f868, %r81;
	mov.b32 	%f869, %r82;
	setp.leu.f32 	%p7, %f29, 0f00000000;
	@%p7 bra 	$L__BB2_12;

	mov.f32 	%f370, 0f3F800000;
	sub.f32 	%f371, %f370, %f29;
	add.s64 	%rd78, %rd65, 64;
	// begin inline asm
	cvta.to.global.u64 %rd77, %rd78;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r86,%r87,%r88,%r89}, [%rd77];
	// end inline asm
	mov.b32 	%f372, %r86;
	mov.b32 	%f373, %r87;
	mov.b32 	%f374, %r88;
	mov.b32 	%f375, %r89;
	mul.f32 	%f376, %f29, %f372;
	mul.f32 	%f377, %f29, %f373;
	mul.f32 	%f378, %f29, %f374;
	mul.f32 	%f379, %f29, %f375;
	fma.rn.f32 	%f854, %f371, %f854, %f376;
	fma.rn.f32 	%f855, %f371, %f855, %f377;
	fma.rn.f32 	%f856, %f371, %f856, %f378;
	fma.rn.f32 	%f857, %f371, %f857, %f379;
	add.s64 	%rd81, %rd65, 80;
	// begin inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd80];
	// end inline asm
	mov.b32 	%f380, %r90;
	mov.b32 	%f381, %r91;
	mov.b32 	%f382, %r92;
	mov.b32 	%f383, %r93;
	mul.f32 	%f384, %f29, %f380;
	mul.f32 	%f385, %f29, %f381;
	mul.f32 	%f386, %f29, %f382;
	mul.f32 	%f387, %f29, %f383;
	fma.rn.f32 	%f858, %f371, %f858, %f384;
	fma.rn.f32 	%f859, %f371, %f859, %f385;
	fma.rn.f32 	%f860, %f371, %f860, %f386;
	fma.rn.f32 	%f861, %f371, %f861, %f387;
	add.s64 	%rd84, %rd65, 96;
	// begin inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd83];
	// end inline asm
	mov.b32 	%f388, %r94;
	mov.b32 	%f389, %r95;
	mov.b32 	%f390, %r96;
	mov.b32 	%f391, %r97;
	mul.f32 	%f392, %f29, %f388;
	mul.f32 	%f393, %f29, %f389;
	mul.f32 	%f394, %f29, %f390;
	mul.f32 	%f395, %f29, %f391;
	fma.rn.f32 	%f862, %f371, %f862, %f392;
	fma.rn.f32 	%f396, %f371, %f863, %f393;
	fma.rn.f32 	%f397, %f371, %f864, %f394;
	fma.rn.f32 	%f398, %f371, %f865, %f395;
	add.s64 	%rd87, %rd65, 112;
	// begin inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd86];
	// end inline asm
	mov.b32 	%f399, %r98;
	mov.b32 	%f400, %r99;
	mov.b32 	%f401, %r100;
	mov.b32 	%f402, %r101;
	mul.f32 	%f403, %f29, %f399;
	mul.f32 	%f404, %f29, %f400;
	mul.f32 	%f405, %f29, %f401;
	mul.f32 	%f406, %f29, %f402;
	fma.rn.f32 	%f407, %f371, %f866, %f403;
	fma.rn.f32 	%f867, %f371, %f867, %f404;
	fma.rn.f32 	%f868, %f371, %f868, %f405;
	fma.rn.f32 	%f869, %f371, %f869, %f406;
	mul.f32 	%f408, %f397, %f397;
	fma.rn.f32 	%f409, %f396, %f396, %f408;
	fma.rn.f32 	%f410, %f398, %f398, %f409;
	fma.rn.f32 	%f411, %f407, %f407, %f410;
	sqrt.rn.f32 	%f412, %f411;
	rcp.rn.f32 	%f413, %f412;
	mul.f32 	%f863, %f396, %f413;
	mul.f32 	%f864, %f397, %f413;
	mul.f32 	%f865, %f398, %f413;
	mul.f32 	%f866, %f413, %f407;

$L__BB2_12:
	mul.f32 	%f414, %f864, %f864;
	fma.rn.f32 	%f415, %f863, %f863, %f414;
	fma.rn.f32 	%f416, %f865, %f865, %f415;
	fma.rn.f32 	%f417, %f866, %f866, %f416;
	rcp.rn.f32 	%f418, %f417;
	mul.f32 	%f419, %f863, %f418;
	mul.f32 	%f420, %f864, %f418;
	mul.f32 	%f421, %f865, %f418;
	mul.f32 	%f422, %f866, %f418;
	mul.f32 	%f423, %f863, %f419;
	mul.f32 	%f424, %f864, %f420;
	mul.f32 	%f425, %f865, %f421;
	mul.f32 	%f426, %f863, %f420;
	mul.f32 	%f427, %f865, %f422;
	mul.f32 	%f428, %f863, %f421;
	mul.f32 	%f429, %f864, %f422;
	mul.f32 	%f430, %f864, %f421;
	mul.f32 	%f431, %f863, %f422;
	sub.f32 	%f432, %f423, %f424;
	sub.f32 	%f433, %f432, %f425;
	fma.rn.f32 	%f434, %f866, %f422, %f433;
	sub.f32 	%f435, %f426, %f427;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f437, %f428, %f429;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f439, %f426, %f427;
	add.f32 	%f440, %f439, %f439;
	sub.f32 	%f441, %f424, %f423;
	sub.f32 	%f442, %f441, %f425;
	fma.rn.f32 	%f443, %f866, %f422, %f442;
	sub.f32 	%f444, %f430, %f431;
	add.f32 	%f445, %f444, %f444;
	sub.f32 	%f446, %f428, %f429;
	add.f32 	%f447, %f446, %f446;
	add.f32 	%f448, %f430, %f431;
	add.f32 	%f449, %f448, %f448;
	neg.f32 	%f450, %f423;
	sub.f32 	%f451, %f450, %f424;
	add.f32 	%f452, %f425, %f451;
	fma.rn.f32 	%f453, %f866, %f422, %f452;
	mul.f32 	%f454, %f857, %f434;
	fma.rn.f32 	%f455, %f860, %f436, %f454;
	fma.rn.f32 	%f456, %f862, %f438, %f455;
	add.f32 	%f870, %f867, %f456;
	mul.f32 	%f457, %f860, %f443;
	fma.rn.f32 	%f458, %f857, %f440, %f457;
	fma.rn.f32 	%f459, %f862, %f445, %f458;
	add.f32 	%f874, %f868, %f459;
	mul.f32 	%f460, %f860, %f449;
	fma.rn.f32 	%f461, %f857, %f447, %f460;
	fma.rn.f32 	%f462, %f862, %f453, %f461;
	add.f32 	%f878, %f869, %f462;
	mul.f32 	%f463, %f856, %f434;
	fma.rn.f32 	%f464, %f859, %f436, %f463;
	fma.rn.f32 	%f871, %f861, %f438, %f464;
	mul.f32 	%f465, %f859, %f443;
	fma.rn.f32 	%f466, %f856, %f440, %f465;
	fma.rn.f32 	%f875, %f861, %f445, %f466;
	mul.f32 	%f467, %f859, %f449;
	fma.rn.f32 	%f468, %f856, %f447, %f467;
	fma.rn.f32 	%f879, %f861, %f453, %f468;
	mul.f32 	%f469, %f855, %f434;
	fma.rn.f32 	%f872, %f858, %f436, %f469;
	mul.f32 	%f470, %f858, %f443;
	fma.rn.f32 	%f876, %f855, %f440, %f470;
	mul.f32 	%f471, %f858, %f449;
	fma.rn.f32 	%f880, %f855, %f447, %f471;
	mul.f32 	%f873, %f854, %f434;
	mul.f32 	%f877, %f854, %f440;
	mul.f32 	%f881, %f854, %f447;

$L__BB2_15:
	mul.f32 	%f509, %f875, %f880;
	mul.f32 	%f510, %f876, %f879;
	sub.f32 	%f511, %f510, %f509;
	mul.f32 	%f512, %f873, %f511;
	mul.f32 	%f513, %f875, %f881;
	mul.f32 	%f514, %f877, %f879;
	sub.f32 	%f515, %f514, %f513;
	mul.f32 	%f516, %f872, %f515;
	sub.f32 	%f517, %f512, %f516;
	mul.f32 	%f518, %f876, %f881;
	mul.f32 	%f519, %f877, %f880;
	sub.f32 	%f520, %f519, %f518;
	fma.rn.f32 	%f521, %f871, %f520, %f517;
	rcp.rn.f32 	%f522, %f521;
	mul.f32 	%f885, %f511, %f522;
	mul.f32 	%f523, %f872, %f879;
	mul.f32 	%f524, %f871, %f880;
	sub.f32 	%f525, %f524, %f523;
	mul.f32 	%f884, %f525, %f522;
	mul.f32 	%f526, %f871, %f876;
	mul.f32 	%f527, %f872, %f875;
	sub.f32 	%f528, %f527, %f526;
	mul.f32 	%f883, %f528, %f522;
	sub.f32 	%f529, %f513, %f514;
	mul.f32 	%f889, %f529, %f522;
	mul.f32 	%f530, %f871, %f881;
	mul.f32 	%f531, %f873, %f879;
	sub.f32 	%f532, %f531, %f530;
	mul.f32 	%f888, %f532, %f522;
	mul.f32 	%f533, %f873, %f875;
	mul.f32 	%f534, %f871, %f877;
	sub.f32 	%f535, %f534, %f533;
	mul.f32 	%f887, %f535, %f522;
	mul.f32 	%f893, %f520, %f522;
	mul.f32 	%f536, %f873, %f880;
	mul.f32 	%f537, %f872, %f881;
	sub.f32 	%f538, %f537, %f536;
	mul.f32 	%f892, %f538, %f522;
	mul.f32 	%f539, %f872, %f877;
	mul.f32 	%f540, %f873, %f876;
	sub.f32 	%f541, %f540, %f539;
	mul.f32 	%f891, %f541, %f522;
	mul.f32 	%f542, %f870, %f885;
	neg.f32 	%f543, %f542;
	mul.f32 	%f544, %f874, %f884;
	sub.f32 	%f545, %f543, %f544;
	mul.f32 	%f546, %f878, %f883;
	sub.f32 	%f882, %f545, %f546;
	mul.f32 	%f547, %f870, %f889;
	neg.f32 	%f548, %f547;
	mul.f32 	%f549, %f874, %f888;
	sub.f32 	%f550, %f548, %f549;
	mul.f32 	%f551, %f878, %f887;
	sub.f32 	%f886, %f550, %f551;
	mul.f32 	%f552, %f870, %f893;
	neg.f32 	%f553, %f552;
	mul.f32 	%f554, %f874, %f892;
	sub.f32 	%f555, %f553, %f554;
	mul.f32 	%f556, %f878, %f891;
	sub.f32 	%f890, %f555, %f556;
	bra.uni 	$L__BB2_16;

$L__BB2_7:
	// begin inline asm
	call (%rd256), _optix_get_instance_inverse_transform_from_handle, (%rd17);
	// end inline asm

$L__BB2_8:
	// begin inline asm
	cvta.to.global.u64 %rd23, %rd256;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r15,%r16,%r17,%r18}, [%rd23];
	// end inline asm
	mov.b32 	%f885, %r15;
	mov.b32 	%f884, %r16;
	mov.b32 	%f883, %r17;
	mov.b32 	%f882, %r18;
	add.s64 	%rd27, %rd256, 16;
	// begin inline asm
	cvta.to.global.u64 %rd26, %rd27;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r19,%r20,%r21,%r22}, [%rd26];
	// end inline asm
	mov.b32 	%f889, %r19;
	mov.b32 	%f888, %r20;
	mov.b32 	%f887, %r21;
	mov.b32 	%f886, %r22;
	add.s64 	%rd30, %rd256, 32;
	// begin inline asm
	cvta.to.global.u64 %rd29, %rd30;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r23,%r24,%r25,%r26}, [%rd29];
	// end inline asm
	mov.b32 	%f893, %r23;
	mov.b32 	%f892, %r24;
	mov.b32 	%f891, %r25;
	mov.b32 	%f890, %r26;

$L__BB2_16:
	setp.eq.s32 	%p9, %r316, 0;
	@%p9 bra 	$L__BB2_18;

	mul.f32 	%f557, %f850, %f885;
	fma.rn.f32 	%f558, %f846, %f884, %f557;
	fma.rn.f32 	%f151, %f842, %f883, %f558;
	mul.f32 	%f559, %f851, %f885;
	fma.rn.f32 	%f560, %f847, %f884, %f559;
	fma.rn.f32 	%f152, %f843, %f883, %f560;
	mul.f32 	%f561, %f852, %f885;
	fma.rn.f32 	%f562, %f848, %f884, %f561;
	fma.rn.f32 	%f153, %f844, %f883, %f562;
	mul.f32 	%f563, %f853, %f885;
	fma.rn.f32 	%f564, %f849, %f884, %f563;
	fma.rn.f32 	%f565, %f845, %f883, %f564;
	add.f32 	%f882, %f882, %f565;
	mul.f32 	%f566, %f850, %f889;
	fma.rn.f32 	%f567, %f846, %f888, %f566;
	fma.rn.f32 	%f155, %f842, %f887, %f567;
	mul.f32 	%f568, %f851, %f889;
	fma.rn.f32 	%f569, %f847, %f888, %f568;
	fma.rn.f32 	%f156, %f843, %f887, %f569;
	mul.f32 	%f570, %f852, %f889;
	fma.rn.f32 	%f571, %f848, %f888, %f570;
	fma.rn.f32 	%f157, %f844, %f887, %f571;
	mul.f32 	%f572, %f853, %f889;
	fma.rn.f32 	%f573, %f849, %f888, %f572;
	fma.rn.f32 	%f574, %f845, %f887, %f573;
	add.f32 	%f886, %f886, %f574;
	mul.f32 	%f575, %f850, %f893;
	fma.rn.f32 	%f576, %f846, %f892, %f575;
	fma.rn.f32 	%f159, %f842, %f891, %f576;
	mul.f32 	%f577, %f851, %f893;
	fma.rn.f32 	%f578, %f847, %f892, %f577;
	fma.rn.f32 	%f160, %f843, %f891, %f578;
	mul.f32 	%f579, %f852, %f893;
	fma.rn.f32 	%f580, %f848, %f892, %f579;
	fma.rn.f32 	%f161, %f844, %f891, %f580;
	mul.f32 	%f581, %f853, %f893;
	fma.rn.f32 	%f582, %f849, %f892, %f581;
	fma.rn.f32 	%f583, %f845, %f891, %f582;
	add.f32 	%f890, %f890, %f583;
	mov.f32 	%f883, %f153;
	mov.f32 	%f884, %f152;
	mov.f32 	%f885, %f151;
	mov.f32 	%f887, %f157;
	mov.f32 	%f888, %f156;
	mov.f32 	%f889, %f155;
	mov.f32 	%f891, %f161;
	mov.f32 	%f892, %f160;
	mov.f32 	%f893, %f159;

$L__BB2_18:
	add.s32 	%r316, %r316, 1;
	setp.lt.u32 	%p10, %r316, %r10;
	mov.f32 	%f842, %f893;
	mov.f32 	%f843, %f892;
	mov.f32 	%f844, %f891;
	mov.f32 	%f845, %f890;
	mov.f32 	%f846, %f889;
	mov.f32 	%f847, %f888;
	mov.f32 	%f848, %f887;
	mov.f32 	%f849, %f886;
	mov.f32 	%f850, %f885;
	mov.f32 	%f851, %f884;
	mov.f32 	%f852, %f883;
	mov.f32 	%f853, %f882;
	@%p10 bra 	$L__BB2_3;

$L__BB2_19:
	mul.f32 	%f584, %f918, %f885;
	fma.rn.f32 	%f585, %f919, %f884, %f584;
	fma.rn.f32 	%f586, %f920, %f883, %f585;
	mul.f32 	%f587, %f918, %f889;
	fma.rn.f32 	%f588, %f919, %f888, %f587;
	fma.rn.f32 	%f589, %f920, %f887, %f588;
	mul.f32 	%f590, %f918, %f893;
	fma.rn.f32 	%f591, %f919, %f892, %f590;
	fma.rn.f32 	%f592, %f920, %f891, %f591;
	add.f32 	%f920, %f890, %f592;
	add.f32 	%f919, %f886, %f589;
	add.f32 	%f918, %f882, %f586;

$L__BB2_21:
	// begin inline asm
	call (%f976), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f977), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f595), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r161), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p11, %r161, 0;
	@%p11 bra 	$L__BB2_41;

	// begin inline asm
	call (%r162), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f596), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p12, %r162, 0;
	@%p12 bra 	$L__BB2_40;

	mov.u32 	%r317, 0;

$L__BB2_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd136), _optix_get_transform_list_handle, (%r317);
	// end inline asm
	// begin inline asm
	call (%r165), _optix_get_transform_type_from_handle, (%rd136);
	// end inline asm
	or.b32  	%r166, %r165, 1;
	setp.eq.s32 	%p13, %r166, 3;
	@%p13 bra 	$L__BB2_30;
	bra.uni 	$L__BB2_25;

$L__BB2_30:
	setp.eq.s32 	%p16, %r165, 2;
	@%p16 bra 	$L__BB2_34;
	bra.uni 	$L__BB2_31;

$L__BB2_34:
	// begin inline asm
	call (%rd208), _optix_get_matrix_motion_transform_from_handle, (%rd136);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd210, %rd208;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd210];
	// end inline asm
	add.s64 	%rd214, %rd208, 16;
	// begin inline asm
	cvta.to.global.u64 %rd213, %rd214;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd213];
	// end inline asm
	add.s64 	%rd217, %rd208, 32;
	// begin inline asm
	cvta.to.global.u64 %rd216, %rd217;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd216];
	// end inline asm
	add.s64 	%rd220, %rd208, 48;
	// begin inline asm
	cvta.to.global.u64 %rd219, %rd220;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd219];
	// end inline asm
	add.s64 	%rd223, %rd208, 64;
	// begin inline asm
	cvta.to.global.u64 %rd222, %rd223;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd222];
	// end inline asm
	add.s64 	%rd226, %rd208, 80;
	// begin inline asm
	cvta.to.global.u64 %rd225, %rd226;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd225];
	// end inline asm
	add.s64 	%rd229, %rd208, 96;
	// begin inline asm
	cvta.to.global.u64 %rd228, %rd229;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd228];
	// end inline asm
	add.s64 	%rd232, %rd208, 112;
	// begin inline asm
	cvta.to.global.u64 %rd231, %rd232;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd231];
	// end inline asm
	mov.b32 	%f700, %r257;
	mov.b32 	%f701, %r258;
	and.b32  	%r298, %r256, 65535;
	add.s32 	%r299, %r298, -1;
	cvt.rn.f32.s32 	%f702, %r299;
	sub.f32 	%f703, %f596, %f700;
	mul.f32 	%f704, %f703, %f702;
	sub.f32 	%f705, %f701, %f700;
	div.rn.f32 	%f706, %f704, %f705;
	min.f32 	%f707, %f702, %f706;
	mov.f32 	%f708, 0f00000000;
	max.f32 	%f709, %f708, %f707;
	cvt.rmi.f32.f32 	%f710, %f709;
	sub.f32 	%f258, %f709, %f710;
	cvt.rzi.s32.f32 	%r300, %f710;
	cvt.s64.s32 	%rd15, %r300;
	mul.wide.s32 	%rd243, %r300, 48;
	add.s64 	%rd235, %rd217, %rd243;
	// begin inline asm
	cvta.to.global.u64 %rd234, %rd235;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd234];
	// end inline asm
	mov.b32 	%f946, %r286;
	mov.b32 	%f947, %r287;
	mov.b32 	%f948, %r288;
	add.s64 	%rd238, %rd235, 16;
	// begin inline asm
	cvta.to.global.u64 %rd237, %rd238;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd237];
	// end inline asm
	mov.b32 	%f943, %r290;
	mov.b32 	%f944, %r291;
	mov.b32 	%f945, %r292;
	add.s64 	%rd241, %rd235, 32;
	// begin inline asm
	cvta.to.global.u64 %rd240, %rd241;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd240];
	// end inline asm
	mov.b32 	%f940, %r294;
	mov.b32 	%f941, %r295;
	mov.b32 	%f942, %r296;
	setp.leu.f32 	%p18, %f258, 0f00000000;
	@%p18 bra 	$L__BB2_36;

	mov.f32 	%f711, 0f3F800000;
	sub.f32 	%f712, %f711, %f258;
	mul.lo.s64 	%rd253, %rd15, 48;
	add.s64 	%rd254, %rd208, %rd253;
	add.s64 	%rd245, %rd254, 80;
	// begin inline asm
	cvta.to.global.u64 %rd244, %rd245;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd244];
	// end inline asm
	mov.b32 	%f713, %r301;
	mov.b32 	%f714, %r302;
	mov.b32 	%f715, %r303;
	mul.f32 	%f716, %f258, %f713;
	mul.f32 	%f717, %f258, %f714;
	mul.f32 	%f718, %f258, %f715;
	fma.rn.f32 	%f946, %f712, %f946, %f716;
	fma.rn.f32 	%f947, %f712, %f947, %f717;
	fma.rn.f32 	%f948, %f712, %f948, %f718;
	add.s64 	%rd248, %rd254, 96;
	// begin inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd247];
	// end inline asm
	mov.b32 	%f719, %r305;
	mov.b32 	%f720, %r306;
	mov.b32 	%f721, %r307;
	mul.f32 	%f722, %f258, %f719;
	mul.f32 	%f723, %f258, %f720;
	mul.f32 	%f724, %f258, %f721;
	fma.rn.f32 	%f943, %f712, %f943, %f722;
	fma.rn.f32 	%f944, %f712, %f944, %f723;
	fma.rn.f32 	%f945, %f712, %f945, %f724;
	add.s64 	%rd251, %rd254, 112;
	// begin inline asm
	cvta.to.global.u64 %rd250, %rd251;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd250];
	// end inline asm
	mov.b32 	%f725, %r309;
	mov.b32 	%f726, %r310;
	mov.b32 	%f727, %r311;
	mul.f32 	%f728, %f258, %f725;
	mul.f32 	%f729, %f258, %f726;
	mul.f32 	%f730, %f258, %f727;
	fma.rn.f32 	%f940, %f712, %f940, %f728;
	fma.rn.f32 	%f941, %f712, %f941, %f729;
	fma.rn.f32 	%f942, %f712, %f942, %f730;
	bra.uni 	$L__BB2_36;

$L__BB2_25:
	mov.f32 	%f949, 0f00000000;
	mov.f32 	%f951, 0f3F800000;
	setp.eq.s32 	%p14, %r165, 4;
	@%p14 bra 	$L__BB2_28;

	setp.ne.s32 	%p15, %r165, 1;
	mov.f32 	%f950, %f949;
	mov.f32 	%f952, %f949;
	mov.f32 	%f953, %f951;
	mov.f32 	%f954, %f949;
	mov.f32 	%f955, %f951;
	mov.f32 	%f956, %f949;
	mov.f32 	%f957, %f949;
	@%p15 bra 	$L__BB2_37;

	// begin inline asm
	call (%rd138), _optix_get_static_transform_from_handle, (%rd136);
	// end inline asm
	add.s64 	%rd257, %rd138, 64;
	bra.uni 	$L__BB2_29;

$L__BB2_31:
	// begin inline asm
	call (%rd151), _optix_get_srt_motion_transform_from_handle, (%rd136);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd153, %rd151;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd153];
	// end inline asm
	add.s64 	%rd157, %rd151, 16;
	// begin inline asm
	cvta.to.global.u64 %rd156, %rd157;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd156];
	// end inline asm
	add.s64 	%rd160, %rd151, 32;
	// begin inline asm
	cvta.to.global.u64 %rd159, %rd160;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd159];
	// end inline asm
	add.s64 	%rd163, %rd151, 48;
	// begin inline asm
	cvta.to.global.u64 %rd162, %rd163;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd162];
	// end inline asm
	add.s64 	%rd166, %rd151, 64;
	// begin inline asm
	cvta.to.global.u64 %rd165, %rd166;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd165];
	// end inline asm
	add.s64 	%rd169, %rd151, 80;
	// begin inline asm
	cvta.to.global.u64 %rd168, %rd169;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd168];
	// end inline asm
	add.s64 	%rd172, %rd151, 96;
	// begin inline asm
	cvta.to.global.u64 %rd171, %rd172;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd171];
	// end inline asm
	add.s64 	%rd175, %rd151, 112;
	// begin inline asm
	cvta.to.global.u64 %rd174, %rd175;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd174];
	// end inline asm
	add.s64 	%rd178, %rd151, 128;
	// begin inline asm
	cvta.to.global.u64 %rd177, %rd178;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd177];
	// end inline asm
	add.s64 	%rd181, %rd151, 144;
	// begin inline asm
	cvta.to.global.u64 %rd180, %rd181;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd180];
	// end inline asm
	mov.b32 	%f608, %r182;
	mov.b32 	%f609, %r183;
	and.b32  	%r235, %r181, 65535;
	add.s32 	%r236, %r235, -1;
	cvt.rn.f32.s32 	%f610, %r236;
	sub.f32 	%f611, %f596, %f608;
	mul.f32 	%f612, %f611, %f610;
	sub.f32 	%f613, %f609, %f608;
	div.rn.f32 	%f614, %f612, %f613;
	min.f32 	%f615, %f610, %f614;
	mov.f32 	%f616, 0f00000000;
	max.f32 	%f617, %f616, %f615;
	cvt.rmi.f32.f32 	%f618, %f617;
	sub.f32 	%f218, %f617, %f618;
	cvt.rzi.s32.f32 	%r237, %f618;
	mul.wide.s32 	%rd195, %r237, 64;
	add.s64 	%rd184, %rd160, %rd195;
	// begin inline asm
	cvta.to.global.u64 %rd183, %rd184;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd183];
	// end inline asm
	mov.b32 	%f930, %r219;
	mov.b32 	%f931, %r220;
	mov.b32 	%f932, %r221;
	add.s64 	%rd187, %rd184, 16;
	// begin inline asm
	cvta.to.global.u64 %rd186, %rd187;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd186];
	// end inline asm
	mov.b32 	%f933, %r223;
	mov.b32 	%f934, %r224;
	mov.b32 	%f935, %r226;
	add.s64 	%rd190, %rd184, 32;
	// begin inline asm
	cvta.to.global.u64 %rd189, %rd190;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd189];
	// end inline asm
	mov.b32 	%f936, %r228;
	mov.b32 	%f937, %r229;
	mov.b32 	%f938, %r230;
	add.s64 	%rd193, %rd184, 48;
	// begin inline asm
	cvta.to.global.u64 %rd192, %rd193;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd192];
	// end inline asm
	mov.b32 	%f939, %r231;
	setp.leu.f32 	%p17, %f218, 0f00000000;
	@%p17 bra 	$L__BB2_33;

	mov.f32 	%f619, 0f3F800000;
	sub.f32 	%f620, %f619, %f218;
	add.s64 	%rd197, %rd184, 64;
	// begin inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd196];
	// end inline asm
	mov.b32 	%f621, %r238;
	mov.b32 	%f622, %r239;
	mov.b32 	%f623, %r240;
	mul.f32 	%f624, %f218, %f621;
	mul.f32 	%f625, %f218, %f622;
	mul.f32 	%f626, %f218, %f623;
	fma.rn.f32 	%f930, %f620, %f930, %f624;
	fma.rn.f32 	%f931, %f620, %f931, %f625;
	fma.rn.f32 	%f932, %f620, %f932, %f626;
	add.s64 	%rd200, %rd184, 80;
	// begin inline asm
	cvta.to.global.u64 %rd199, %rd200;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd199];
	// end inline asm
	mov.b32 	%f627, %r242;
	mov.b32 	%f628, %r243;
	mov.b32 	%f629, %r245;
	mul.f32 	%f630, %f218, %f627;
	mul.f32 	%f631, %f218, %f628;
	mul.f32 	%f632, %f218, %f629;
	fma.rn.f32 	%f933, %f620, %f933, %f630;
	fma.rn.f32 	%f934, %f620, %f934, %f631;
	fma.rn.f32 	%f935, %f620, %f935, %f632;
	add.s64 	%rd203, %rd184, 96;
	// begin inline asm
	cvta.to.global.u64 %rd202, %rd203;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd202];
	// end inline asm
	mov.b32 	%f633, %r247;
	mov.b32 	%f634, %r248;
	mov.b32 	%f635, %r249;
	mul.f32 	%f636, %f218, %f633;
	mul.f32 	%f637, %f218, %f634;
	mul.f32 	%f638, %f218, %f635;
	fma.rn.f32 	%f639, %f620, %f936, %f636;
	fma.rn.f32 	%f640, %f620, %f937, %f637;
	fma.rn.f32 	%f641, %f620, %f938, %f638;
	add.s64 	%rd206, %rd184, 112;
	// begin inline asm
	cvta.to.global.u64 %rd205, %rd206;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd205];
	// end inline asm
	mov.b32 	%f642, %r250;
	mul.f32 	%f643, %f218, %f642;
	fma.rn.f32 	%f644, %f620, %f939, %f643;
	mul.f32 	%f645, %f640, %f640;
	fma.rn.f32 	%f646, %f639, %f639, %f645;
	fma.rn.f32 	%f647, %f641, %f641, %f646;
	fma.rn.f32 	%f648, %f644, %f644, %f647;
	sqrt.rn.f32 	%f649, %f648;
	rcp.rn.f32 	%f650, %f649;
	mul.f32 	%f936, %f639, %f650;
	mul.f32 	%f937, %f640, %f650;
	mul.f32 	%f938, %f641, %f650;
	mul.f32 	%f939, %f650, %f644;

$L__BB2_33:
	mul.f32 	%f651, %f937, %f937;
	fma.rn.f32 	%f652, %f936, %f936, %f651;
	fma.rn.f32 	%f653, %f938, %f938, %f652;
	fma.rn.f32 	%f654, %f939, %f939, %f653;
	rcp.rn.f32 	%f655, %f654;
	mul.f32 	%f656, %f936, %f655;
	mul.f32 	%f657, %f937, %f655;
	mul.f32 	%f658, %f938, %f655;
	mul.f32 	%f659, %f939, %f655;
	mul.f32 	%f660, %f936, %f656;
	mul.f32 	%f661, %f937, %f657;
	mul.f32 	%f662, %f938, %f658;
	mul.f32 	%f663, %f936, %f657;
	mul.f32 	%f664, %f938, %f659;
	mul.f32 	%f665, %f936, %f658;
	mul.f32 	%f666, %f937, %f659;
	mul.f32 	%f667, %f937, %f658;
	mul.f32 	%f668, %f936, %f659;
	sub.f32 	%f669, %f660, %f661;
	sub.f32 	%f670, %f669, %f662;
	fma.rn.f32 	%f671, %f939, %f659, %f670;
	sub.f32 	%f672, %f663, %f664;
	add.f32 	%f673, %f672, %f672;
	add.f32 	%f674, %f665, %f666;
	add.f32 	%f675, %f674, %f674;
	add.f32 	%f676, %f663, %f664;
	add.f32 	%f677, %f676, %f676;
	sub.f32 	%f678, %f661, %f660;
	sub.f32 	%f679, %f678, %f662;
	fma.rn.f32 	%f680, %f939, %f659, %f679;
	sub.f32 	%f681, %f667, %f668;
	add.f32 	%f682, %f681, %f681;
	sub.f32 	%f683, %f665, %f666;
	add.f32 	%f684, %f683, %f683;
	add.f32 	%f685, %f667, %f668;
	add.f32 	%f686, %f685, %f685;
	neg.f32 	%f687, %f660;
	sub.f32 	%f688, %f687, %f661;
	add.f32 	%f689, %f662, %f688;
	fma.rn.f32 	%f690, %f939, %f659, %f689;
	mul.f32 	%f691, %f932, %f671;
	fma.rn.f32 	%f692, %f934, %f673, %f691;
	fma.rn.f32 	%f948, %f935, %f675, %f692;
	mul.f32 	%f693, %f934, %f680;
	fma.rn.f32 	%f694, %f932, %f677, %f693;
	fma.rn.f32 	%f945, %f935, %f682, %f694;
	mul.f32 	%f695, %f934, %f686;
	fma.rn.f32 	%f696, %f932, %f684, %f695;
	fma.rn.f32 	%f942, %f935, %f690, %f696;
	mul.f32 	%f697, %f931, %f671;
	fma.rn.f32 	%f947, %f933, %f673, %f697;
	mul.f32 	%f698, %f933, %f680;
	fma.rn.f32 	%f944, %f931, %f677, %f698;
	mul.f32 	%f699, %f933, %f686;
	fma.rn.f32 	%f941, %f931, %f684, %f699;
	mul.f32 	%f946, %f930, %f671;
	mul.f32 	%f943, %f930, %f677;
	mul.f32 	%f940, %f930, %f684;

$L__BB2_36:
	mul.f32 	%f731, %f941, %f945;
	mul.f32 	%f732, %f942, %f944;
	sub.f32 	%f733, %f732, %f731;
	mul.f32 	%f734, %f946, %f733;
	mul.f32 	%f735, %f940, %f945;
	mul.f32 	%f736, %f942, %f943;
	sub.f32 	%f737, %f736, %f735;
	mul.f32 	%f738, %f737, %f947;
	sub.f32 	%f739, %f734, %f738;
	mul.f32 	%f740, %f940, %f944;
	mul.f32 	%f741, %f941, %f943;
	sub.f32 	%f742, %f741, %f740;
	fma.rn.f32 	%f743, %f742, %f948, %f739;
	rcp.rn.f32 	%f744, %f743;
	mul.f32 	%f955, %f733, %f744;
	mul.f32 	%f745, %f942, %f947;
	mul.f32 	%f746, %f941, %f948;
	sub.f32 	%f747, %f746, %f745;
	mul.f32 	%f956, %f747, %f744;
	mul.f32 	%f748, %f944, %f948;
	mul.f32 	%f749, %f945, %f947;
	sub.f32 	%f750, %f749, %f748;
	mul.f32 	%f957, %f750, %f744;
	sub.f32 	%f751, %f735, %f736;
	mul.f32 	%f952, %f751, %f744;
	mul.f32 	%f752, %f940, %f948;
	mul.f32 	%f753, %f942, %f946;
	sub.f32 	%f754, %f753, %f752;
	mul.f32 	%f953, %f754, %f744;
	mul.f32 	%f755, %f945, %f946;
	mul.f32 	%f756, %f943, %f948;
	sub.f32 	%f757, %f756, %f755;
	mul.f32 	%f954, %f757, %f744;
	mul.f32 	%f949, %f742, %f744;
	mul.f32 	%f758, %f941, %f946;
	mul.f32 	%f759, %f940, %f947;
	sub.f32 	%f760, %f759, %f758;
	mul.f32 	%f950, %f760, %f744;
	mul.f32 	%f761, %f943, %f947;
	mul.f32 	%f762, %f944, %f946;
	sub.f32 	%f763, %f762, %f761;
	mul.f32 	%f951, %f763, %f744;
	bra.uni 	$L__BB2_37;

$L__BB2_28:
	// begin inline asm
	call (%rd257), _optix_get_instance_inverse_transform_from_handle, (%rd136);
	// end inline asm

$L__BB2_29:
	// begin inline asm
	cvta.to.global.u64 %rd142, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd142];
	// end inline asm
	mov.b32 	%f955, %r167;
	mov.b32 	%f956, %r168;
	mov.b32 	%f957, %r169;
	add.s64 	%rd146, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd145, %rd146;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd145];
	// end inline asm
	mov.b32 	%f952, %r171;
	mov.b32 	%f953, %r172;
	mov.b32 	%f954, %r173;
	add.s64 	%rd149, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd148, %rd149;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd148];
	// end inline asm
	mov.b32 	%f949, %r175;
	mov.b32 	%f950, %r176;
	mov.b32 	%f951, %r177;

$L__BB2_37:
	setp.eq.s32 	%p19, %r317, 0;
	@%p19 bra 	$L__BB2_39;

	mul.f32 	%f764, %f926, %f956;
	fma.rn.f32 	%f765, %f923, %f955, %f764;
	fma.rn.f32 	%f304, %f929, %f957, %f765;
	mul.f32 	%f766, %f925, %f956;
	fma.rn.f32 	%f767, %f922, %f955, %f766;
	fma.rn.f32 	%f305, %f928, %f957, %f767;
	mul.f32 	%f768, %f924, %f956;
	fma.rn.f32 	%f769, %f921, %f955, %f768;
	fma.rn.f32 	%f957, %f927, %f957, %f769;
	mul.f32 	%f770, %f926, %f953;
	fma.rn.f32 	%f771, %f923, %f952, %f770;
	fma.rn.f32 	%f307, %f929, %f954, %f771;
	mul.f32 	%f772, %f925, %f953;
	fma.rn.f32 	%f773, %f922, %f952, %f772;
	fma.rn.f32 	%f308, %f928, %f954, %f773;
	mul.f32 	%f774, %f924, %f953;
	fma.rn.f32 	%f775, %f921, %f952, %f774;
	fma.rn.f32 	%f954, %f927, %f954, %f775;
	mul.f32 	%f776, %f926, %f950;
	fma.rn.f32 	%f777, %f923, %f949, %f776;
	fma.rn.f32 	%f310, %f929, %f951, %f777;
	mul.f32 	%f778, %f925, %f950;
	fma.rn.f32 	%f779, %f922, %f949, %f778;
	fma.rn.f32 	%f311, %f928, %f951, %f779;
	mul.f32 	%f780, %f924, %f950;
	fma.rn.f32 	%f781, %f921, %f949, %f780;
	fma.rn.f32 	%f951, %f927, %f951, %f781;
	mov.f32 	%f949, %f310;
	mov.f32 	%f950, %f311;
	mov.f32 	%f952, %f307;
	mov.f32 	%f953, %f308;
	mov.f32 	%f955, %f304;
	mov.f32 	%f956, %f305;

$L__BB2_39:
	add.s32 	%r317, %r317, 1;
	setp.lt.u32 	%p20, %r317, %r162;
	mov.f32 	%f921, %f957;
	mov.f32 	%f922, %f956;
	mov.f32 	%f923, %f955;
	mov.f32 	%f924, %f954;
	mov.f32 	%f925, %f953;
	mov.f32 	%f926, %f952;
	mov.f32 	%f927, %f951;
	mov.f32 	%f928, %f950;
	mov.f32 	%f929, %f949;
	@%p20 bra 	$L__BB2_24;

$L__BB2_40:
	mul.f32 	%f782, %f977, %f956;
	fma.rn.f32 	%f783, %f976, %f955, %f782;
	mul.f32 	%f784, %f977, %f953;
	fma.rn.f32 	%f785, %f976, %f952, %f784;
	mul.f32 	%f786, %f977, %f950;
	fma.rn.f32 	%f787, %f976, %f949, %f786;
	fma.rn.f32 	%f978, %f595, %f951, %f787;
	fma.rn.f32 	%f977, %f595, %f954, %f785;
	fma.rn.f32 	%f976, %f595, %f957, %f783;
	bra.uni 	$L__BB2_42;

$L__BB2_41:
	mov.f32 	%f978, %f595;

$L__BB2_42:
	// begin inline asm
	call (%f788), _optix_get_ray_tmin, ();
	// end inline asm
	fma.rn.f32 	%f791, %f976, %f788, %f918;
	fma.rn.f32 	%f792, %f977, %f788, %f919;
	fma.rn.f32 	%f793, %f978, %f788, %f920;
	ld.v4.f32 	{%f794, %f795, %f796, %f797}, [%rd1+80];
	ld.f32 	%f801, [%rd1+32];
	fma.rn.f32 	%f802, %f791, %f801, %f794;
	ld.f32 	%f803, [%rd1+36];
	fma.rn.f32 	%f804, %f791, %f803, %f795;
	ld.f32 	%f805, [%rd1+40];
	fma.rn.f32 	%f806, %f791, %f805, %f796;
	ld.f32 	%f807, [%rd1+48];
	fma.rn.f32 	%f808, %f792, %f807, %f802;
	ld.f32 	%f809, [%rd1+52];
	fma.rn.f32 	%f810, %f792, %f809, %f804;
	ld.f32 	%f811, [%rd1+56];
	fma.rn.f32 	%f812, %f792, %f811, %f806;
	ld.f32 	%f813, [%rd1+64];
	fma.rn.f32 	%f814, %f793, %f813, %f808;
	ld.f32 	%f815, [%rd1+68];
	fma.rn.f32 	%f816, %f793, %f815, %f810;
	ld.f32 	%f817, [%rd1+72];
	fma.rn.f32 	%f818, %f793, %f817, %f812;
	ld.v4.f32 	{%f819, %f820, %f821, %f822}, [%rd1+32];
	mul.f32 	%f826, %f976, %f819;
	mul.f32 	%f827, %f976, %f820;
	mul.f32 	%f828, %f976, %f821;
	fma.rn.f32 	%f829, %f977, %f807, %f826;
	fma.rn.f32 	%f830, %f977, %f809, %f827;
	fma.rn.f32 	%f831, %f977, %f811, %f828;
	fma.rn.f32 	%f832, %f978, %f813, %f829;
	fma.rn.f32 	%f833, %f978, %f815, %f830;
	fma.rn.f32 	%f834, %f978, %f817, %f831;
	neg.f32 	%f835, %f818;
	div.rn.f32 	%f340, %f835, %f834;
	fma.rn.f32 	%f836, %f340, %f832, %f814;
	fma.rn.f32 	%f837, %f340, %f833, %f816;
	mul.f32 	%f838, %f837, %f837;
	fma.rn.f32 	%f839, %f836, %f836, %f838;
	setp.gtu.f32 	%p21, %f839, 0f3F800000;
	@%p21 bra 	$L__BB2_44;

	mov.u32 	%r314, 254;
	// begin inline asm
	call (%r313), _optix_report_intersection_0, (%f340, %r314);
	// end inline asm

$L__BB2_44:
	ret;

}
	// .globl	__closesthit__disk
.visible .entry __closesthit__disk()
{
	.reg .pred 	%p<22>;
	.reg .f32 	%f<976>;
	.reg .b32 	%r<331>;
	.reg .b64 	%rd<259>;


	// begin inline asm
	call (%rd17), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd2, [%rd17+8];
	// begin inline asm
	call (%f915), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f916), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f917), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p1, %r9, 0;
	@%p1 bra 	$L__BB3_21;

	// begin inline asm
	call (%r10), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f343), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p2, %r10, 0;
	@%p2 bra 	$L__BB3_19;

	mov.u32 	%r329, 0;

$L__BB3_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd18), _optix_get_transform_list_handle, (%r329);
	// end inline asm
	// begin inline asm
	call (%r13), _optix_get_transform_type_from_handle, (%rd18);
	// end inline asm
	or.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p3, %r14, 3;
	@%p3 bra 	$L__BB3_9;
	bra.uni 	$L__BB3_4;

$L__BB3_9:
	setp.eq.s32 	%p6, %r13, 2;
	@%p6 bra 	$L__BB3_13;
	bra.uni 	$L__BB3_10;

$L__BB3_13:
	// begin inline asm
	call (%rd90), _optix_get_matrix_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd92, %rd90;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd92];
	// end inline asm
	add.s64 	%rd96, %rd90, 16;
	// begin inline asm
	cvta.to.global.u64 %rd95, %rd96;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd95];
	// end inline asm
	add.s64 	%rd99, %rd90, 32;
	// begin inline asm
	cvta.to.global.u64 %rd98, %rd99;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd98];
	// end inline asm
	add.s64 	%rd102, %rd90, 48;
	// begin inline asm
	cvta.to.global.u64 %rd101, %rd102;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd101];
	// end inline asm
	add.s64 	%rd105, %rd90, 64;
	// begin inline asm
	cvta.to.global.u64 %rd104, %rd105;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd104];
	// end inline asm
	add.s64 	%rd108, %rd90, 80;
	// begin inline asm
	cvta.to.global.u64 %rd107, %rd108;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd107];
	// end inline asm
	add.s64 	%rd111, %rd90, 96;
	// begin inline asm
	cvta.to.global.u64 %rd110, %rd111;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd110];
	// end inline asm
	add.s64 	%rd114, %rd90, 112;
	// begin inline asm
	cvta.to.global.u64 %rd113, %rd114;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd113];
	// end inline asm
	mov.b32 	%f471, %r105;
	mov.b32 	%f472, %r106;
	and.b32  	%r146, %r104, 65535;
	add.s32 	%r147, %r146, -1;
	cvt.rn.f32.s32 	%f473, %r147;
	sub.f32 	%f474, %f343, %f471;
	mul.f32 	%f475, %f474, %f473;
	sub.f32 	%f476, %f472, %f471;
	div.rn.f32 	%f477, %f475, %f476;
	min.f32 	%f478, %f473, %f477;
	mov.f32 	%f479, 0f00000000;
	max.f32 	%f480, %f479, %f478;
	cvt.rmi.f32.f32 	%f481, %f480;
	sub.f32 	%f90, %f480, %f481;
	cvt.rzi.s32.f32 	%r148, %f481;
	mul.wide.s32 	%rd125, %r148, 48;
	add.s64 	%rd117, %rd99, %rd125;
	// begin inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd116];
	// end inline asm
	mov.b32 	%f870, %r134;
	mov.b32 	%f869, %r135;
	mov.b32 	%f868, %r136;
	mov.b32 	%f867, %r137;
	add.s64 	%rd120, %rd117, 16;
	// begin inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd119];
	// end inline asm
	mov.b32 	%f874, %r138;
	mov.b32 	%f873, %r139;
	mov.b32 	%f872, %r140;
	mov.b32 	%f871, %r141;
	add.s64 	%rd123, %rd117, 32;
	// begin inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd122];
	// end inline asm
	mov.b32 	%f878, %r142;
	mov.b32 	%f877, %r143;
	mov.b32 	%f876, %r144;
	mov.b32 	%f875, %r145;
	setp.leu.f32 	%p8, %f90, 0f00000000;
	@%p8 bra 	$L__BB3_15;

	cvt.rmi.f32.f32 	%f838, %f480;
	cvt.rzi.s32.f32 	%r328, %f838;
	cvt.s64.s32 	%rd256, %r328;
	mov.f32 	%f482, 0f3F800000;
	sub.f32 	%f483, %f482, %f90;
	mul.lo.s64 	%rd135, %rd256, 48;
	add.s64 	%rd136, %rd90, %rd135;
	add.s64 	%rd127, %rd136, 80;
	// begin inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r149,%r150,%r151,%r152}, [%rd126];
	// end inline asm
	mov.b32 	%f484, %r149;
	mov.b32 	%f485, %r150;
	mov.b32 	%f486, %r151;
	mov.b32 	%f487, %r152;
	mul.f32 	%f488, %f90, %f484;
	mul.f32 	%f489, %f90, %f485;
	mul.f32 	%f490, %f90, %f486;
	mul.f32 	%f491, %f90, %f487;
	fma.rn.f32 	%f870, %f483, %f870, %f488;
	fma.rn.f32 	%f869, %f483, %f869, %f489;
	fma.rn.f32 	%f868, %f483, %f868, %f490;
	fma.rn.f32 	%f867, %f483, %f867, %f491;
	add.s64 	%rd130, %rd136, 96;
	// begin inline asm
	cvta.to.global.u64 %rd129, %rd130;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r153,%r154,%r155,%r156}, [%rd129];
	// end inline asm
	mov.b32 	%f492, %r153;
	mov.b32 	%f493, %r154;
	mov.b32 	%f494, %r155;
	mov.b32 	%f495, %r156;
	mul.f32 	%f496, %f90, %f492;
	mul.f32 	%f497, %f90, %f493;
	mul.f32 	%f498, %f90, %f494;
	mul.f32 	%f499, %f90, %f495;
	fma.rn.f32 	%f874, %f483, %f874, %f496;
	fma.rn.f32 	%f873, %f483, %f873, %f497;
	fma.rn.f32 	%f872, %f483, %f872, %f498;
	fma.rn.f32 	%f871, %f483, %f871, %f499;
	add.s64 	%rd133, %rd136, 112;
	// begin inline asm
	cvta.to.global.u64 %rd132, %rd133;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r157,%r158,%r159,%r160}, [%rd132];
	// end inline asm
	mov.b32 	%f500, %r157;
	mov.b32 	%f501, %r158;
	mov.b32 	%f502, %r159;
	mov.b32 	%f503, %r160;
	mul.f32 	%f504, %f90, %f500;
	mul.f32 	%f505, %f90, %f501;
	mul.f32 	%f506, %f90, %f502;
	mul.f32 	%f507, %f90, %f503;
	fma.rn.f32 	%f878, %f483, %f878, %f504;
	fma.rn.f32 	%f877, %f483, %f877, %f505;
	fma.rn.f32 	%f876, %f483, %f876, %f506;
	fma.rn.f32 	%f875, %f483, %f875, %f507;
	bra.uni 	$L__BB3_15;

$L__BB3_4:
	mov.f32 	%f879, 0f00000000;
	mov.f32 	%f882, 0f3F800000;
	setp.eq.s32 	%p4, %r13, 4;
	@%p4 bra 	$L__BB3_7;

	setp.ne.s32 	%p5, %r13, 1;
	mov.f32 	%f880, %f879;
	mov.f32 	%f881, %f879;
	mov.f32 	%f883, %f879;
	mov.f32 	%f884, %f879;
	mov.f32 	%f885, %f882;
	mov.f32 	%f886, %f879;
	mov.f32 	%f887, %f879;
	mov.f32 	%f888, %f882;
	mov.f32 	%f889, %f879;
	mov.f32 	%f890, %f879;
	@%p5 bra 	$L__BB3_16;

	// begin inline asm
	call (%rd20), _optix_get_static_transform_from_handle, (%rd18);
	// end inline asm
	add.s64 	%rd257, %rd20, 64;
	bra.uni 	$L__BB3_8;

$L__BB3_10:
	// begin inline asm
	call (%rd33), _optix_get_srt_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd35, %rd33;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r27,%r28,%r29,%r30}, [%rd35];
	// end inline asm
	add.s64 	%rd39, %rd33, 16;
	// begin inline asm
	cvta.to.global.u64 %rd38, %rd39;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r31,%r32,%r33,%r34}, [%rd38];
	// end inline asm
	add.s64 	%rd42, %rd33, 32;
	// begin inline asm
	cvta.to.global.u64 %rd41, %rd42;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r35,%r36,%r37,%r38}, [%rd41];
	// end inline asm
	add.s64 	%rd45, %rd33, 48;
	// begin inline asm
	cvta.to.global.u64 %rd44, %rd45;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r39,%r40,%r41,%r42}, [%rd44];
	// end inline asm
	add.s64 	%rd48, %rd33, 64;
	// begin inline asm
	cvta.to.global.u64 %rd47, %rd48;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r43,%r44,%r45,%r46}, [%rd47];
	// end inline asm
	add.s64 	%rd51, %rd33, 80;
	// begin inline asm
	cvta.to.global.u64 %rd50, %rd51;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd50];
	// end inline asm
	add.s64 	%rd54, %rd33, 96;
	// begin inline asm
	cvta.to.global.u64 %rd53, %rd54;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd53];
	// end inline asm
	add.s64 	%rd57, %rd33, 112;
	// begin inline asm
	cvta.to.global.u64 %rd56, %rd57;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd56];
	// end inline asm
	add.s64 	%rd60, %rd33, 128;
	// begin inline asm
	cvta.to.global.u64 %rd59, %rd60;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd59];
	// end inline asm
	add.s64 	%rd63, %rd33, 144;
	// begin inline asm
	cvta.to.global.u64 %rd62, %rd63;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd62];
	// end inline asm
	mov.b32 	%f358, %r30;
	mov.b32 	%f359, %r31;
	and.b32  	%r83, %r29, 65535;
	add.s32 	%r84, %r83, -1;
	cvt.rn.f32.s32 	%f360, %r84;
	sub.f32 	%f361, %f343, %f358;
	mul.f32 	%f362, %f361, %f360;
	sub.f32 	%f363, %f359, %f358;
	div.rn.f32 	%f364, %f362, %f363;
	min.f32 	%f365, %f360, %f364;
	mov.f32 	%f366, 0f00000000;
	max.f32 	%f367, %f366, %f365;
	cvt.rmi.f32.f32 	%f368, %f367;
	sub.f32 	%f29, %f367, %f368;
	cvt.rzi.s32.f32 	%r85, %f368;
	mul.wide.s32 	%rd77, %r85, 64;
	add.s64 	%rd66, %rd42, %rd77;
	// begin inline asm
	cvta.to.global.u64 %rd65, %rd66;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd65];
	// end inline asm
	mov.b32 	%f851, %r67;
	mov.b32 	%f852, %r68;
	mov.b32 	%f853, %r69;
	mov.b32 	%f854, %r70;
	add.s64 	%rd69, %rd66, 16;
	// begin inline asm
	cvta.to.global.u64 %rd68, %rd69;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd68];
	// end inline asm
	mov.b32 	%f855, %r71;
	mov.b32 	%f856, %r72;
	mov.b32 	%f857, %r73;
	mov.b32 	%f858, %r74;
	add.s64 	%rd72, %rd66, 32;
	// begin inline asm
	cvta.to.global.u64 %rd71, %rd72;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd71];
	// end inline asm
	mov.b32 	%f859, %r75;
	mov.b32 	%f860, %r76;
	mov.b32 	%f861, %r77;
	mov.b32 	%f862, %r78;
	add.s64 	%rd75, %rd66, 48;
	// begin inline asm
	cvta.to.global.u64 %rd74, %rd75;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd74];
	// end inline asm
	mov.b32 	%f863, %r79;
	mov.b32 	%f864, %r80;
	mov.b32 	%f865, %r81;
	mov.b32 	%f866, %r82;
	setp.leu.f32 	%p7, %f29, 0f00000000;
	@%p7 bra 	$L__BB3_12;

	mov.f32 	%f369, 0f3F800000;
	sub.f32 	%f370, %f369, %f29;
	add.s64 	%rd79, %rd66, 64;
	// begin inline asm
	cvta.to.global.u64 %rd78, %rd79;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r86,%r87,%r88,%r89}, [%rd78];
	// end inline asm
	mov.b32 	%f371, %r86;
	mov.b32 	%f372, %r87;
	mov.b32 	%f373, %r88;
	mov.b32 	%f374, %r89;
	mul.f32 	%f375, %f29, %f371;
	mul.f32 	%f376, %f29, %f372;
	mul.f32 	%f377, %f29, %f373;
	mul.f32 	%f378, %f29, %f374;
	fma.rn.f32 	%f851, %f370, %f851, %f375;
	fma.rn.f32 	%f852, %f370, %f852, %f376;
	fma.rn.f32 	%f853, %f370, %f853, %f377;
	fma.rn.f32 	%f854, %f370, %f854, %f378;
	add.s64 	%rd82, %rd66, 80;
	// begin inline asm
	cvta.to.global.u64 %rd81, %rd82;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd81];
	// end inline asm
	mov.b32 	%f379, %r90;
	mov.b32 	%f380, %r91;
	mov.b32 	%f381, %r92;
	mov.b32 	%f382, %r93;
	mul.f32 	%f383, %f29, %f379;
	mul.f32 	%f384, %f29, %f380;
	mul.f32 	%f385, %f29, %f381;
	mul.f32 	%f386, %f29, %f382;
	fma.rn.f32 	%f855, %f370, %f855, %f383;
	fma.rn.f32 	%f856, %f370, %f856, %f384;
	fma.rn.f32 	%f857, %f370, %f857, %f385;
	fma.rn.f32 	%f858, %f370, %f858, %f386;
	add.s64 	%rd85, %rd66, 96;
	// begin inline asm
	cvta.to.global.u64 %rd84, %rd85;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd84];
	// end inline asm
	mov.b32 	%f387, %r94;
	mov.b32 	%f388, %r95;
	mov.b32 	%f389, %r96;
	mov.b32 	%f390, %r97;
	mul.f32 	%f391, %f29, %f387;
	mul.f32 	%f392, %f29, %f388;
	mul.f32 	%f393, %f29, %f389;
	mul.f32 	%f394, %f29, %f390;
	fma.rn.f32 	%f859, %f370, %f859, %f391;
	fma.rn.f32 	%f395, %f370, %f860, %f392;
	fma.rn.f32 	%f396, %f370, %f861, %f393;
	fma.rn.f32 	%f397, %f370, %f862, %f394;
	add.s64 	%rd88, %rd66, 112;
	// begin inline asm
	cvta.to.global.u64 %rd87, %rd88;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd87];
	// end inline asm
	mov.b32 	%f398, %r98;
	mov.b32 	%f399, %r99;
	mov.b32 	%f400, %r100;
	mov.b32 	%f401, %r101;
	mul.f32 	%f402, %f29, %f398;
	mul.f32 	%f403, %f29, %f399;
	mul.f32 	%f404, %f29, %f400;
	mul.f32 	%f405, %f29, %f401;
	fma.rn.f32 	%f406, %f370, %f863, %f402;
	fma.rn.f32 	%f864, %f370, %f864, %f403;
	fma.rn.f32 	%f865, %f370, %f865, %f404;
	fma.rn.f32 	%f866, %f370, %f866, %f405;
	mul.f32 	%f407, %f396, %f396;
	fma.rn.f32 	%f408, %f395, %f395, %f407;
	fma.rn.f32 	%f409, %f397, %f397, %f408;
	fma.rn.f32 	%f410, %f406, %f406, %f409;
	sqrt.rn.f32 	%f411, %f410;
	rcp.rn.f32 	%f412, %f411;
	mul.f32 	%f860, %f395, %f412;
	mul.f32 	%f861, %f396, %f412;
	mul.f32 	%f862, %f397, %f412;
	mul.f32 	%f863, %f412, %f406;

$L__BB3_12:
	mul.f32 	%f413, %f861, %f861;
	fma.rn.f32 	%f414, %f860, %f860, %f413;
	fma.rn.f32 	%f415, %f862, %f862, %f414;
	fma.rn.f32 	%f416, %f863, %f863, %f415;
	rcp.rn.f32 	%f417, %f416;
	mul.f32 	%f418, %f860, %f417;
	mul.f32 	%f419, %f861, %f417;
	mul.f32 	%f420, %f862, %f417;
	mul.f32 	%f421, %f863, %f417;
	mul.f32 	%f422, %f860, %f418;
	mul.f32 	%f423, %f861, %f419;
	mul.f32 	%f424, %f862, %f420;
	mul.f32 	%f425, %f860, %f419;
	mul.f32 	%f426, %f862, %f421;
	mul.f32 	%f427, %f860, %f420;
	mul.f32 	%f428, %f861, %f421;
	mul.f32 	%f429, %f861, %f420;
	mul.f32 	%f430, %f860, %f421;
	sub.f32 	%f431, %f422, %f423;
	sub.f32 	%f432, %f431, %f424;
	fma.rn.f32 	%f433, %f863, %f421, %f432;
	sub.f32 	%f434, %f425, %f426;
	add.f32 	%f435, %f434, %f434;
	add.f32 	%f436, %f427, %f428;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f438, %f425, %f426;
	add.f32 	%f439, %f438, %f438;
	sub.f32 	%f440, %f423, %f422;
	sub.f32 	%f441, %f440, %f424;
	fma.rn.f32 	%f442, %f863, %f421, %f441;
	sub.f32 	%f443, %f429, %f430;
	add.f32 	%f444, %f443, %f443;
	sub.f32 	%f445, %f427, %f428;
	add.f32 	%f446, %f445, %f445;
	add.f32 	%f447, %f429, %f430;
	add.f32 	%f448, %f447, %f447;
	neg.f32 	%f449, %f422;
	sub.f32 	%f450, %f449, %f423;
	add.f32 	%f451, %f424, %f450;
	fma.rn.f32 	%f452, %f863, %f421, %f451;
	mul.f32 	%f453, %f854, %f433;
	fma.rn.f32 	%f454, %f857, %f435, %f453;
	fma.rn.f32 	%f455, %f859, %f437, %f454;
	add.f32 	%f867, %f864, %f455;
	mul.f32 	%f456, %f857, %f442;
	fma.rn.f32 	%f457, %f854, %f439, %f456;
	fma.rn.f32 	%f458, %f859, %f444, %f457;
	add.f32 	%f871, %f865, %f458;
	mul.f32 	%f459, %f857, %f448;
	fma.rn.f32 	%f460, %f854, %f446, %f459;
	fma.rn.f32 	%f461, %f859, %f452, %f460;
	add.f32 	%f875, %f866, %f461;
	mul.f32 	%f462, %f853, %f433;
	fma.rn.f32 	%f463, %f856, %f435, %f462;
	fma.rn.f32 	%f868, %f858, %f437, %f463;
	mul.f32 	%f464, %f856, %f442;
	fma.rn.f32 	%f465, %f853, %f439, %f464;
	fma.rn.f32 	%f872, %f858, %f444, %f465;
	mul.f32 	%f466, %f856, %f448;
	fma.rn.f32 	%f467, %f853, %f446, %f466;
	fma.rn.f32 	%f876, %f858, %f452, %f467;
	mul.f32 	%f468, %f852, %f433;
	fma.rn.f32 	%f869, %f855, %f435, %f468;
	mul.f32 	%f469, %f855, %f442;
	fma.rn.f32 	%f873, %f852, %f439, %f469;
	mul.f32 	%f470, %f855, %f448;
	fma.rn.f32 	%f877, %f852, %f446, %f470;
	mul.f32 	%f870, %f851, %f433;
	mul.f32 	%f874, %f851, %f439;
	mul.f32 	%f878, %f851, %f446;

$L__BB3_15:
	mul.f32 	%f508, %f872, %f877;
	mul.f32 	%f509, %f873, %f876;
	sub.f32 	%f510, %f509, %f508;
	mul.f32 	%f511, %f870, %f510;
	mul.f32 	%f512, %f872, %f878;
	mul.f32 	%f513, %f874, %f876;
	sub.f32 	%f514, %f513, %f512;
	mul.f32 	%f515, %f869, %f514;
	sub.f32 	%f516, %f511, %f515;
	mul.f32 	%f517, %f873, %f878;
	mul.f32 	%f518, %f874, %f877;
	sub.f32 	%f519, %f518, %f517;
	fma.rn.f32 	%f520, %f868, %f519, %f516;
	rcp.rn.f32 	%f521, %f520;
	mul.f32 	%f882, %f510, %f521;
	mul.f32 	%f522, %f869, %f876;
	mul.f32 	%f523, %f868, %f877;
	sub.f32 	%f524, %f523, %f522;
	mul.f32 	%f881, %f524, %f521;
	mul.f32 	%f525, %f868, %f873;
	mul.f32 	%f526, %f869, %f872;
	sub.f32 	%f527, %f526, %f525;
	mul.f32 	%f880, %f527, %f521;
	sub.f32 	%f528, %f512, %f513;
	mul.f32 	%f886, %f528, %f521;
	mul.f32 	%f529, %f868, %f878;
	mul.f32 	%f530, %f870, %f876;
	sub.f32 	%f531, %f530, %f529;
	mul.f32 	%f885, %f531, %f521;
	mul.f32 	%f532, %f870, %f872;
	mul.f32 	%f533, %f868, %f874;
	sub.f32 	%f534, %f533, %f532;
	mul.f32 	%f884, %f534, %f521;
	mul.f32 	%f890, %f519, %f521;
	mul.f32 	%f535, %f870, %f877;
	mul.f32 	%f536, %f869, %f878;
	sub.f32 	%f537, %f536, %f535;
	mul.f32 	%f889, %f537, %f521;
	mul.f32 	%f538, %f869, %f874;
	mul.f32 	%f539, %f870, %f873;
	sub.f32 	%f540, %f539, %f538;
	mul.f32 	%f888, %f540, %f521;
	mul.f32 	%f541, %f867, %f882;
	neg.f32 	%f542, %f541;
	mul.f32 	%f543, %f871, %f881;
	sub.f32 	%f544, %f542, %f543;
	mul.f32 	%f545, %f875, %f880;
	sub.f32 	%f879, %f544, %f545;
	mul.f32 	%f546, %f867, %f886;
	neg.f32 	%f547, %f546;
	mul.f32 	%f548, %f871, %f885;
	sub.f32 	%f549, %f547, %f548;
	mul.f32 	%f550, %f875, %f884;
	sub.f32 	%f883, %f549, %f550;
	mul.f32 	%f551, %f867, %f890;
	neg.f32 	%f552, %f551;
	mul.f32 	%f553, %f871, %f889;
	sub.f32 	%f554, %f552, %f553;
	mul.f32 	%f555, %f875, %f888;
	sub.f32 	%f887, %f554, %f555;
	bra.uni 	$L__BB3_16;

$L__BB3_7:
	// begin inline asm
	call (%rd257), _optix_get_instance_inverse_transform_from_handle, (%rd18);
	// end inline asm

$L__BB3_8:
	// begin inline asm
	cvta.to.global.u64 %rd24, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r15,%r16,%r17,%r18}, [%rd24];
	// end inline asm
	mov.b32 	%f882, %r15;
	mov.b32 	%f881, %r16;
	mov.b32 	%f880, %r17;
	mov.b32 	%f879, %r18;
	add.s64 	%rd28, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd27, %rd28;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r19,%r20,%r21,%r22}, [%rd27];
	// end inline asm
	mov.b32 	%f886, %r19;
	mov.b32 	%f885, %r20;
	mov.b32 	%f884, %r21;
	mov.b32 	%f883, %r22;
	add.s64 	%rd31, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd30, %rd31;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r23,%r24,%r25,%r26}, [%rd30];
	// end inline asm
	mov.b32 	%f890, %r23;
	mov.b32 	%f889, %r24;
	mov.b32 	%f888, %r25;
	mov.b32 	%f887, %r26;

$L__BB3_16:
	setp.eq.s32 	%p9, %r329, 0;
	@%p9 bra 	$L__BB3_18;

	mul.f32 	%f556, %f847, %f882;
	fma.rn.f32 	%f557, %f843, %f881, %f556;
	fma.rn.f32 	%f151, %f839, %f880, %f557;
	mul.f32 	%f558, %f848, %f882;
	fma.rn.f32 	%f559, %f844, %f881, %f558;
	fma.rn.f32 	%f152, %f840, %f880, %f559;
	mul.f32 	%f560, %f849, %f882;
	fma.rn.f32 	%f561, %f845, %f881, %f560;
	fma.rn.f32 	%f153, %f841, %f880, %f561;
	mul.f32 	%f562, %f850, %f882;
	fma.rn.f32 	%f563, %f846, %f881, %f562;
	fma.rn.f32 	%f564, %f842, %f880, %f563;
	add.f32 	%f879, %f879, %f564;
	mul.f32 	%f565, %f847, %f886;
	fma.rn.f32 	%f566, %f843, %f885, %f565;
	fma.rn.f32 	%f155, %f839, %f884, %f566;
	mul.f32 	%f567, %f848, %f886;
	fma.rn.f32 	%f568, %f844, %f885, %f567;
	fma.rn.f32 	%f156, %f840, %f884, %f568;
	mul.f32 	%f569, %f849, %f886;
	fma.rn.f32 	%f570, %f845, %f885, %f569;
	fma.rn.f32 	%f157, %f841, %f884, %f570;
	mul.f32 	%f571, %f850, %f886;
	fma.rn.f32 	%f572, %f846, %f885, %f571;
	fma.rn.f32 	%f573, %f842, %f884, %f572;
	add.f32 	%f883, %f883, %f573;
	mul.f32 	%f574, %f847, %f890;
	fma.rn.f32 	%f575, %f843, %f889, %f574;
	fma.rn.f32 	%f159, %f839, %f888, %f575;
	mul.f32 	%f576, %f848, %f890;
	fma.rn.f32 	%f577, %f844, %f889, %f576;
	fma.rn.f32 	%f160, %f840, %f888, %f577;
	mul.f32 	%f578, %f849, %f890;
	fma.rn.f32 	%f579, %f845, %f889, %f578;
	fma.rn.f32 	%f161, %f841, %f888, %f579;
	mul.f32 	%f580, %f850, %f890;
	fma.rn.f32 	%f581, %f846, %f889, %f580;
	fma.rn.f32 	%f582, %f842, %f888, %f581;
	add.f32 	%f887, %f887, %f582;
	mov.f32 	%f880, %f153;
	mov.f32 	%f881, %f152;
	mov.f32 	%f882, %f151;
	mov.f32 	%f884, %f157;
	mov.f32 	%f885, %f156;
	mov.f32 	%f886, %f155;
	mov.f32 	%f888, %f161;
	mov.f32 	%f889, %f160;
	mov.f32 	%f890, %f159;

$L__BB3_18:
	add.s32 	%r329, %r329, 1;
	setp.lt.u32 	%p10, %r329, %r10;
	mov.f32 	%f839, %f890;
	mov.f32 	%f840, %f889;
	mov.f32 	%f841, %f888;
	mov.f32 	%f842, %f887;
	mov.f32 	%f843, %f886;
	mov.f32 	%f844, %f885;
	mov.f32 	%f845, %f884;
	mov.f32 	%f846, %f883;
	mov.f32 	%f847, %f882;
	mov.f32 	%f848, %f881;
	mov.f32 	%f849, %f880;
	mov.f32 	%f850, %f879;
	@%p10 bra 	$L__BB3_3;

$L__BB3_19:
	mul.f32 	%f583, %f915, %f882;
	fma.rn.f32 	%f584, %f916, %f881, %f583;
	fma.rn.f32 	%f585, %f917, %f880, %f584;
	mul.f32 	%f586, %f915, %f886;
	fma.rn.f32 	%f587, %f916, %f885, %f586;
	fma.rn.f32 	%f588, %f917, %f884, %f587;
	mul.f32 	%f589, %f915, %f890;
	fma.rn.f32 	%f590, %f916, %f889, %f589;
	fma.rn.f32 	%f591, %f917, %f888, %f590;
	add.f32 	%f917, %f887, %f591;
	add.f32 	%f916, %f883, %f588;
	add.f32 	%f915, %f879, %f585;

$L__BB3_21:
	// begin inline asm
	call (%f973), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f974), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f594), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r161), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p11, %r161, 0;
	@%p11 bra 	$L__BB3_41;

	// begin inline asm
	call (%r162), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f595), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p12, %r162, 0;
	@%p12 bra 	$L__BB3_40;

	mov.u32 	%r330, 0;

$L__BB3_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd137), _optix_get_transform_list_handle, (%r330);
	// end inline asm
	// begin inline asm
	call (%r165), _optix_get_transform_type_from_handle, (%rd137);
	// end inline asm
	or.b32  	%r166, %r165, 1;
	setp.eq.s32 	%p13, %r166, 3;
	@%p13 bra 	$L__BB3_30;
	bra.uni 	$L__BB3_25;

$L__BB3_30:
	setp.eq.s32 	%p16, %r165, 2;
	@%p16 bra 	$L__BB3_34;
	bra.uni 	$L__BB3_31;

$L__BB3_34:
	// begin inline asm
	call (%rd209), _optix_get_matrix_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd211, %rd209;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd211];
	// end inline asm
	add.s64 	%rd215, %rd209, 16;
	// begin inline asm
	cvta.to.global.u64 %rd214, %rd215;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd214];
	// end inline asm
	add.s64 	%rd218, %rd209, 32;
	// begin inline asm
	cvta.to.global.u64 %rd217, %rd218;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd217];
	// end inline asm
	add.s64 	%rd221, %rd209, 48;
	// begin inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd220];
	// end inline asm
	add.s64 	%rd224, %rd209, 64;
	// begin inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd223];
	// end inline asm
	add.s64 	%rd227, %rd209, 80;
	// begin inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd226];
	// end inline asm
	add.s64 	%rd230, %rd209, 96;
	// begin inline asm
	cvta.to.global.u64 %rd229, %rd230;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd229];
	// end inline asm
	add.s64 	%rd233, %rd209, 112;
	// begin inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd232];
	// end inline asm
	mov.b32 	%f699, %r257;
	mov.b32 	%f700, %r258;
	and.b32  	%r298, %r256, 65535;
	add.s32 	%r299, %r298, -1;
	cvt.rn.f32.s32 	%f701, %r299;
	sub.f32 	%f702, %f595, %f699;
	mul.f32 	%f703, %f702, %f701;
	sub.f32 	%f704, %f700, %f699;
	div.rn.f32 	%f705, %f703, %f704;
	min.f32 	%f706, %f701, %f705;
	mov.f32 	%f707, 0f00000000;
	max.f32 	%f708, %f707, %f706;
	cvt.rmi.f32.f32 	%f709, %f708;
	sub.f32 	%f258, %f708, %f709;
	cvt.rzi.s32.f32 	%r300, %f709;
	cvt.s64.s32 	%rd16, %r300;
	mul.wide.s32 	%rd244, %r300, 48;
	add.s64 	%rd236, %rd218, %rd244;
	// begin inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd235];
	// end inline asm
	mov.b32 	%f943, %r286;
	mov.b32 	%f944, %r287;
	mov.b32 	%f945, %r288;
	add.s64 	%rd239, %rd236, 16;
	// begin inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd238];
	// end inline asm
	mov.b32 	%f940, %r290;
	mov.b32 	%f941, %r291;
	mov.b32 	%f942, %r292;
	add.s64 	%rd242, %rd236, 32;
	// begin inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd241];
	// end inline asm
	mov.b32 	%f937, %r294;
	mov.b32 	%f938, %r295;
	mov.b32 	%f939, %r296;
	setp.leu.f32 	%p18, %f258, 0f00000000;
	@%p18 bra 	$L__BB3_36;

	mov.f32 	%f710, 0f3F800000;
	sub.f32 	%f711, %f710, %f258;
	mul.lo.s64 	%rd254, %rd16, 48;
	add.s64 	%rd255, %rd209, %rd254;
	add.s64 	%rd246, %rd255, 80;
	// begin inline asm
	cvta.to.global.u64 %rd245, %rd246;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd245];
	// end inline asm
	mov.b32 	%f712, %r301;
	mov.b32 	%f713, %r302;
	mov.b32 	%f714, %r303;
	mul.f32 	%f715, %f258, %f712;
	mul.f32 	%f716, %f258, %f713;
	mul.f32 	%f717, %f258, %f714;
	fma.rn.f32 	%f943, %f711, %f943, %f715;
	fma.rn.f32 	%f944, %f711, %f944, %f716;
	fma.rn.f32 	%f945, %f711, %f945, %f717;
	add.s64 	%rd249, %rd255, 96;
	// begin inline asm
	cvta.to.global.u64 %rd248, %rd249;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd248];
	// end inline asm
	mov.b32 	%f718, %r305;
	mov.b32 	%f719, %r306;
	mov.b32 	%f720, %r307;
	mul.f32 	%f721, %f258, %f718;
	mul.f32 	%f722, %f258, %f719;
	mul.f32 	%f723, %f258, %f720;
	fma.rn.f32 	%f940, %f711, %f940, %f721;
	fma.rn.f32 	%f941, %f711, %f941, %f722;
	fma.rn.f32 	%f942, %f711, %f942, %f723;
	add.s64 	%rd252, %rd255, 112;
	// begin inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd251];
	// end inline asm
	mov.b32 	%f724, %r309;
	mov.b32 	%f725, %r310;
	mov.b32 	%f726, %r311;
	mul.f32 	%f727, %f258, %f724;
	mul.f32 	%f728, %f258, %f725;
	mul.f32 	%f729, %f258, %f726;
	fma.rn.f32 	%f937, %f711, %f937, %f727;
	fma.rn.f32 	%f938, %f711, %f938, %f728;
	fma.rn.f32 	%f939, %f711, %f939, %f729;
	bra.uni 	$L__BB3_36;

$L__BB3_25:
	mov.f32 	%f946, 0f00000000;
	mov.f32 	%f948, 0f3F800000;
	setp.eq.s32 	%p14, %r165, 4;
	@%p14 bra 	$L__BB3_28;

	setp.ne.s32 	%p15, %r165, 1;
	mov.f32 	%f947, %f946;
	mov.f32 	%f949, %f946;
	mov.f32 	%f950, %f948;
	mov.f32 	%f951, %f946;
	mov.f32 	%f952, %f948;
	mov.f32 	%f953, %f946;
	mov.f32 	%f954, %f946;
	@%p15 bra 	$L__BB3_37;

	// begin inline asm
	call (%rd139), _optix_get_static_transform_from_handle, (%rd137);
	// end inline asm
	add.s64 	%rd258, %rd139, 64;
	bra.uni 	$L__BB3_29;

$L__BB3_31:
	// begin inline asm
	call (%rd152), _optix_get_srt_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd154, %rd152;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd154];
	// end inline asm
	add.s64 	%rd158, %rd152, 16;
	// begin inline asm
	cvta.to.global.u64 %rd157, %rd158;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd157];
	// end inline asm
	add.s64 	%rd161, %rd152, 32;
	// begin inline asm
	cvta.to.global.u64 %rd160, %rd161;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd160];
	// end inline asm
	add.s64 	%rd164, %rd152, 48;
	// begin inline asm
	cvta.to.global.u64 %rd163, %rd164;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd163];
	// end inline asm
	add.s64 	%rd167, %rd152, 64;
	// begin inline asm
	cvta.to.global.u64 %rd166, %rd167;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd166];
	// end inline asm
	add.s64 	%rd170, %rd152, 80;
	// begin inline asm
	cvta.to.global.u64 %rd169, %rd170;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd169];
	// end inline asm
	add.s64 	%rd173, %rd152, 96;
	// begin inline asm
	cvta.to.global.u64 %rd172, %rd173;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd172];
	// end inline asm
	add.s64 	%rd176, %rd152, 112;
	// begin inline asm
	cvta.to.global.u64 %rd175, %rd176;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd175];
	// end inline asm
	add.s64 	%rd179, %rd152, 128;
	// begin inline asm
	cvta.to.global.u64 %rd178, %rd179;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd178];
	// end inline asm
	add.s64 	%rd182, %rd152, 144;
	// begin inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd181];
	// end inline asm
	mov.b32 	%f607, %r182;
	mov.b32 	%f608, %r183;
	and.b32  	%r235, %r181, 65535;
	add.s32 	%r236, %r235, -1;
	cvt.rn.f32.s32 	%f609, %r236;
	sub.f32 	%f610, %f595, %f607;
	mul.f32 	%f611, %f610, %f609;
	sub.f32 	%f612, %f608, %f607;
	div.rn.f32 	%f613, %f611, %f612;
	min.f32 	%f614, %f609, %f613;
	mov.f32 	%f615, 0f00000000;
	max.f32 	%f616, %f615, %f614;
	cvt.rmi.f32.f32 	%f617, %f616;
	sub.f32 	%f218, %f616, %f617;
	cvt.rzi.s32.f32 	%r237, %f617;
	mul.wide.s32 	%rd196, %r237, 64;
	add.s64 	%rd185, %rd161, %rd196;
	// begin inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd184];
	// end inline asm
	mov.b32 	%f927, %r219;
	mov.b32 	%f928, %r220;
	mov.b32 	%f929, %r221;
	add.s64 	%rd188, %rd185, 16;
	// begin inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd187];
	// end inline asm
	mov.b32 	%f930, %r223;
	mov.b32 	%f931, %r224;
	mov.b32 	%f932, %r226;
	add.s64 	%rd191, %rd185, 32;
	// begin inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd190];
	// end inline asm
	mov.b32 	%f933, %r228;
	mov.b32 	%f934, %r229;
	mov.b32 	%f935, %r230;
	add.s64 	%rd194, %rd185, 48;
	// begin inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd193];
	// end inline asm
	mov.b32 	%f936, %r231;
	setp.leu.f32 	%p17, %f218, 0f00000000;
	@%p17 bra 	$L__BB3_33;

	mov.f32 	%f618, 0f3F800000;
	sub.f32 	%f619, %f618, %f218;
	add.s64 	%rd198, %rd185, 64;
	// begin inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd197];
	// end inline asm
	mov.b32 	%f620, %r238;
	mov.b32 	%f621, %r239;
	mov.b32 	%f622, %r240;
	mul.f32 	%f623, %f218, %f620;
	mul.f32 	%f624, %f218, %f621;
	mul.f32 	%f625, %f218, %f622;
	fma.rn.f32 	%f927, %f619, %f927, %f623;
	fma.rn.f32 	%f928, %f619, %f928, %f624;
	fma.rn.f32 	%f929, %f619, %f929, %f625;
	add.s64 	%rd201, %rd185, 80;
	// begin inline asm
	cvta.to.global.u64 %rd200, %rd201;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd200];
	// end inline asm
	mov.b32 	%f626, %r242;
	mov.b32 	%f627, %r243;
	mov.b32 	%f628, %r245;
	mul.f32 	%f629, %f218, %f626;
	mul.f32 	%f630, %f218, %f627;
	mul.f32 	%f631, %f218, %f628;
	fma.rn.f32 	%f930, %f619, %f930, %f629;
	fma.rn.f32 	%f931, %f619, %f931, %f630;
	fma.rn.f32 	%f932, %f619, %f932, %f631;
	add.s64 	%rd204, %rd185, 96;
	// begin inline asm
	cvta.to.global.u64 %rd203, %rd204;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd203];
	// end inline asm
	mov.b32 	%f632, %r247;
	mov.b32 	%f633, %r248;
	mov.b32 	%f634, %r249;
	mul.f32 	%f635, %f218, %f632;
	mul.f32 	%f636, %f218, %f633;
	mul.f32 	%f637, %f218, %f634;
	fma.rn.f32 	%f638, %f619, %f933, %f635;
	fma.rn.f32 	%f639, %f619, %f934, %f636;
	fma.rn.f32 	%f640, %f619, %f935, %f637;
	add.s64 	%rd207, %rd185, 112;
	// begin inline asm
	cvta.to.global.u64 %rd206, %rd207;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd206];
	// end inline asm
	mov.b32 	%f641, %r250;
	mul.f32 	%f642, %f218, %f641;
	fma.rn.f32 	%f643, %f619, %f936, %f642;
	mul.f32 	%f644, %f639, %f639;
	fma.rn.f32 	%f645, %f638, %f638, %f644;
	fma.rn.f32 	%f646, %f640, %f640, %f645;
	fma.rn.f32 	%f647, %f643, %f643, %f646;
	sqrt.rn.f32 	%f648, %f647;
	rcp.rn.f32 	%f649, %f648;
	mul.f32 	%f933, %f638, %f649;
	mul.f32 	%f934, %f639, %f649;
	mul.f32 	%f935, %f640, %f649;
	mul.f32 	%f936, %f649, %f643;

$L__BB3_33:
	mul.f32 	%f650, %f934, %f934;
	fma.rn.f32 	%f651, %f933, %f933, %f650;
	fma.rn.f32 	%f652, %f935, %f935, %f651;
	fma.rn.f32 	%f653, %f936, %f936, %f652;
	rcp.rn.f32 	%f654, %f653;
	mul.f32 	%f655, %f933, %f654;
	mul.f32 	%f656, %f934, %f654;
	mul.f32 	%f657, %f935, %f654;
	mul.f32 	%f658, %f936, %f654;
	mul.f32 	%f659, %f933, %f655;
	mul.f32 	%f660, %f934, %f656;
	mul.f32 	%f661, %f935, %f657;
	mul.f32 	%f662, %f933, %f656;
	mul.f32 	%f663, %f935, %f658;
	mul.f32 	%f664, %f933, %f657;
	mul.f32 	%f665, %f934, %f658;
	mul.f32 	%f666, %f934, %f657;
	mul.f32 	%f667, %f933, %f658;
	sub.f32 	%f668, %f659, %f660;
	sub.f32 	%f669, %f668, %f661;
	fma.rn.f32 	%f670, %f936, %f658, %f669;
	sub.f32 	%f671, %f662, %f663;
	add.f32 	%f672, %f671, %f671;
	add.f32 	%f673, %f664, %f665;
	add.f32 	%f674, %f673, %f673;
	add.f32 	%f675, %f662, %f663;
	add.f32 	%f676, %f675, %f675;
	sub.f32 	%f677, %f660, %f659;
	sub.f32 	%f678, %f677, %f661;
	fma.rn.f32 	%f679, %f936, %f658, %f678;
	sub.f32 	%f680, %f666, %f667;
	add.f32 	%f681, %f680, %f680;
	sub.f32 	%f682, %f664, %f665;
	add.f32 	%f683, %f682, %f682;
	add.f32 	%f684, %f666, %f667;
	add.f32 	%f685, %f684, %f684;
	neg.f32 	%f686, %f659;
	sub.f32 	%f687, %f686, %f660;
	add.f32 	%f688, %f661, %f687;
	fma.rn.f32 	%f689, %f936, %f658, %f688;
	mul.f32 	%f690, %f929, %f670;
	fma.rn.f32 	%f691, %f931, %f672, %f690;
	fma.rn.f32 	%f945, %f932, %f674, %f691;
	mul.f32 	%f692, %f931, %f679;
	fma.rn.f32 	%f693, %f929, %f676, %f692;
	fma.rn.f32 	%f942, %f932, %f681, %f693;
	mul.f32 	%f694, %f931, %f685;
	fma.rn.f32 	%f695, %f929, %f683, %f694;
	fma.rn.f32 	%f939, %f932, %f689, %f695;
	mul.f32 	%f696, %f928, %f670;
	fma.rn.f32 	%f944, %f930, %f672, %f696;
	mul.f32 	%f697, %f930, %f679;
	fma.rn.f32 	%f941, %f928, %f676, %f697;
	mul.f32 	%f698, %f930, %f685;
	fma.rn.f32 	%f938, %f928, %f683, %f698;
	mul.f32 	%f943, %f927, %f670;
	mul.f32 	%f940, %f927, %f676;
	mul.f32 	%f937, %f927, %f683;

$L__BB3_36:
	mul.f32 	%f730, %f938, %f942;
	mul.f32 	%f731, %f939, %f941;
	sub.f32 	%f732, %f731, %f730;
	mul.f32 	%f733, %f943, %f732;
	mul.f32 	%f734, %f937, %f942;
	mul.f32 	%f735, %f939, %f940;
	sub.f32 	%f736, %f735, %f734;
	mul.f32 	%f737, %f736, %f944;
	sub.f32 	%f738, %f733, %f737;
	mul.f32 	%f739, %f937, %f941;
	mul.f32 	%f740, %f938, %f940;
	sub.f32 	%f741, %f740, %f739;
	fma.rn.f32 	%f742, %f741, %f945, %f738;
	rcp.rn.f32 	%f743, %f742;
	mul.f32 	%f952, %f732, %f743;
	mul.f32 	%f744, %f939, %f944;
	mul.f32 	%f745, %f938, %f945;
	sub.f32 	%f746, %f745, %f744;
	mul.f32 	%f953, %f746, %f743;
	mul.f32 	%f747, %f941, %f945;
	mul.f32 	%f748, %f942, %f944;
	sub.f32 	%f749, %f748, %f747;
	mul.f32 	%f954, %f749, %f743;
	sub.f32 	%f750, %f734, %f735;
	mul.f32 	%f949, %f750, %f743;
	mul.f32 	%f751, %f937, %f945;
	mul.f32 	%f752, %f939, %f943;
	sub.f32 	%f753, %f752, %f751;
	mul.f32 	%f950, %f753, %f743;
	mul.f32 	%f754, %f942, %f943;
	mul.f32 	%f755, %f940, %f945;
	sub.f32 	%f756, %f755, %f754;
	mul.f32 	%f951, %f756, %f743;
	mul.f32 	%f946, %f741, %f743;
	mul.f32 	%f757, %f938, %f943;
	mul.f32 	%f758, %f937, %f944;
	sub.f32 	%f759, %f758, %f757;
	mul.f32 	%f947, %f759, %f743;
	mul.f32 	%f760, %f940, %f944;
	mul.f32 	%f761, %f941, %f943;
	sub.f32 	%f762, %f761, %f760;
	mul.f32 	%f948, %f762, %f743;
	bra.uni 	$L__BB3_37;

$L__BB3_28:
	// begin inline asm
	call (%rd258), _optix_get_instance_inverse_transform_from_handle, (%rd137);
	// end inline asm

$L__BB3_29:
	// begin inline asm
	cvta.to.global.u64 %rd143, %rd258;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd143];
	// end inline asm
	mov.b32 	%f952, %r167;
	mov.b32 	%f953, %r168;
	mov.b32 	%f954, %r169;
	add.s64 	%rd147, %rd258, 16;
	// begin inline asm
	cvta.to.global.u64 %rd146, %rd147;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd146];
	// end inline asm
	mov.b32 	%f949, %r171;
	mov.b32 	%f950, %r172;
	mov.b32 	%f951, %r173;
	add.s64 	%rd150, %rd258, 32;
	// begin inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd149];
	// end inline asm
	mov.b32 	%f946, %r175;
	mov.b32 	%f947, %r176;
	mov.b32 	%f948, %r177;

$L__BB3_37:
	setp.eq.s32 	%p19, %r330, 0;
	@%p19 bra 	$L__BB3_39;

	mul.f32 	%f763, %f923, %f953;
	fma.rn.f32 	%f764, %f920, %f952, %f763;
	fma.rn.f32 	%f304, %f926, %f954, %f764;
	mul.f32 	%f765, %f922, %f953;
	fma.rn.f32 	%f766, %f919, %f952, %f765;
	fma.rn.f32 	%f305, %f925, %f954, %f766;
	mul.f32 	%f767, %f921, %f953;
	fma.rn.f32 	%f768, %f918, %f952, %f767;
	fma.rn.f32 	%f954, %f924, %f954, %f768;
	mul.f32 	%f769, %f923, %f950;
	fma.rn.f32 	%f770, %f920, %f949, %f769;
	fma.rn.f32 	%f307, %f926, %f951, %f770;
	mul.f32 	%f771, %f922, %f950;
	fma.rn.f32 	%f772, %f919, %f949, %f771;
	fma.rn.f32 	%f308, %f925, %f951, %f772;
	mul.f32 	%f773, %f921, %f950;
	fma.rn.f32 	%f774, %f918, %f949, %f773;
	fma.rn.f32 	%f951, %f924, %f951, %f774;
	mul.f32 	%f775, %f923, %f947;
	fma.rn.f32 	%f776, %f920, %f946, %f775;
	fma.rn.f32 	%f310, %f926, %f948, %f776;
	mul.f32 	%f777, %f922, %f947;
	fma.rn.f32 	%f778, %f919, %f946, %f777;
	fma.rn.f32 	%f311, %f925, %f948, %f778;
	mul.f32 	%f779, %f921, %f947;
	fma.rn.f32 	%f780, %f918, %f946, %f779;
	fma.rn.f32 	%f948, %f924, %f948, %f780;
	mov.f32 	%f946, %f310;
	mov.f32 	%f947, %f311;
	mov.f32 	%f949, %f307;
	mov.f32 	%f950, %f308;
	mov.f32 	%f952, %f304;
	mov.f32 	%f953, %f305;

$L__BB3_39:
	add.s32 	%r330, %r330, 1;
	setp.lt.u32 	%p20, %r330, %r162;
	mov.f32 	%f918, %f954;
	mov.f32 	%f919, %f953;
	mov.f32 	%f920, %f952;
	mov.f32 	%f921, %f951;
	mov.f32 	%f922, %f950;
	mov.f32 	%f923, %f949;
	mov.f32 	%f924, %f948;
	mov.f32 	%f925, %f947;
	mov.f32 	%f926, %f946;
	@%p20 bra 	$L__BB3_24;

$L__BB3_40:
	mul.f32 	%f781, %f974, %f953;
	fma.rn.f32 	%f782, %f973, %f952, %f781;
	mul.f32 	%f783, %f974, %f950;
	fma.rn.f32 	%f784, %f973, %f949, %f783;
	mul.f32 	%f785, %f974, %f947;
	fma.rn.f32 	%f786, %f973, %f946, %f785;
	fma.rn.f32 	%f975, %f594, %f948, %f786;
	fma.rn.f32 	%f974, %f594, %f951, %f784;
	fma.rn.f32 	%f973, %f594, %f954, %f782;
	bra.uni 	$L__BB3_42;

$L__BB3_41:
	mov.f32 	%f975, %f594;

$L__BB3_42:
	// begin inline asm
	call (%f787), _optix_get_ray_tmin, ();
	// end inline asm
	fma.rn.f32 	%f790, %f973, %f787, %f915;
	fma.rn.f32 	%f791, %f974, %f787, %f916;
	fma.rn.f32 	%f792, %f975, %f787, %f917;
	ld.v4.f32 	{%f793, %f794, %f795, %f796}, [%rd2+80];
	mov.u32 	%r320, 0;
	mov.u32 	%r315, 1;
	mov.u32 	%r317, 2;
	ld.f32 	%f800, [%rd2+32];
	fma.rn.f32 	%f801, %f790, %f800, %f793;
	ld.f32 	%f802, [%rd2+36];
	fma.rn.f32 	%f803, %f790, %f802, %f794;
	ld.f32 	%f804, [%rd2+40];
	fma.rn.f32 	%f805, %f790, %f804, %f795;
	ld.f32 	%f806, [%rd2+48];
	fma.rn.f32 	%f807, %f791, %f806, %f801;
	ld.f32 	%f808, [%rd2+52];
	fma.rn.f32 	%f809, %f791, %f808, %f803;
	ld.f32 	%f810, [%rd2+56];
	fma.rn.f32 	%f811, %f791, %f810, %f805;
	ld.f32 	%f812, [%rd2+64];
	fma.rn.f32 	%f813, %f792, %f812, %f807;
	ld.f32 	%f814, [%rd2+68];
	fma.rn.f32 	%f815, %f792, %f814, %f809;
	ld.f32 	%f816, [%rd2+72];
	fma.rn.f32 	%f817, %f792, %f816, %f811;
	ld.v4.f32 	{%f818, %f819, %f820, %f821}, [%rd2+32];
	mul.f32 	%f825, %f973, %f818;
	mul.f32 	%f826, %f973, %f819;
	mul.f32 	%f827, %f973, %f820;
	fma.rn.f32 	%f828, %f974, %f806, %f825;
	fma.rn.f32 	%f829, %f974, %f808, %f826;
	fma.rn.f32 	%f830, %f974, %f810, %f827;
	fma.rn.f32 	%f831, %f975, %f812, %f828;
	fma.rn.f32 	%f832, %f975, %f814, %f829;
	fma.rn.f32 	%f833, %f975, %f816, %f830;
	neg.f32 	%f834, %f817;
	div.rn.f32 	%f835, %f834, %f833;
	fma.rn.f32 	%f836, %f835, %f831, %f813;
	fma.rn.f32 	%f837, %f835, %f832, %f815;
	ld.u32 	%r322, [%rd17];
	mov.b32 	%r314, %f835;
	// begin inline asm
	call _optix_set_payload, (%r320, %r314);
	// end inline asm
	mov.b32 	%r316, %f836;
	// begin inline asm
	call _optix_set_payload, (%r315, %r316);
	// end inline asm
	mov.b32 	%r318, %f837;
	// begin inline asm
	call _optix_set_payload, (%r317, %r318);
	// end inline asm
	mov.u32 	%r319, 3;
	// begin inline asm
	call _optix_set_payload, (%r319, %r320);
	// end inline asm
	mov.u32 	%r321, 4;
	// begin inline asm
	call _optix_set_payload, (%r321, %r322);
	// end inline asm
	mov.u32 	%r324, 5;
	// begin inline asm
	call (%r323), _optix_get_payload, (%r324);
	// end inline asm
	setp.eq.s32 	%p21, %r323, 0;
	@%p21 bra 	$L__BB3_44;

	// begin inline asm
	call (%r325), _optix_read_instance_id, ();
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r324, %r325);
	// end inline asm

$L__BB3_44:
	ret;

}
	// .globl	__closesthit__mesh
.visible .entry __closesthit__mesh()
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<2>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// end inline asm
	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%f2, %f3), _optix_get_triangle_barycentrics, ();
	// end inline asm
	ld.u32 	%r11, [%rd1];
	mov.b32 	%r3, %f1;
	mov.u32 	%r2, 0;
	// begin inline asm
	call _optix_set_payload, (%r2, %r3);
	// end inline asm
	mov.b32 	%r5, %f2;
	mov.u32 	%r4, 1;
	// begin inline asm
	call _optix_set_payload, (%r4, %r5);
	// end inline asm
	mov.b32 	%r7, %f3;
	mov.u32 	%r6, 2;
	// begin inline asm
	call _optix_set_payload, (%r6, %r7);
	// end inline asm
	mov.u32 	%r8, 3;
	// begin inline asm
	call _optix_set_payload, (%r8, %r1);
	// end inline asm
	mov.u32 	%r10, 4;
	// begin inline asm
	call _optix_set_payload, (%r10, %r11);
	// end inline asm
	mov.u32 	%r13, 5;
	// begin inline asm
	call (%r12), _optix_get_payload, (%r13);
	// end inline asm
	setp.eq.s32 	%p1, %r12, 0;
	@%p1 bra 	$L__BB4_2;

	// begin inline asm
	call (%r14), _optix_read_instance_id, ();
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r13, %r14);
	// end inline asm

$L__BB4_2:
	ret;

}
	// .globl	__intersection__rectangle
.visible .entry __intersection__rectangle()
{
	.reg .pred 	%p<23>;
	.reg .f32 	%f<979>;
	.reg .b32 	%r<318>;
	.reg .b64 	%rd<258>;


	// begin inline asm
	call (%rd16), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd16+8];
	// begin inline asm
	call (%f918), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f919), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f920), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p1, %r9, 0;
	@%p1 bra 	$L__BB5_21;

	// begin inline asm
	call (%r10), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f345), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p2, %r10, 0;
	@%p2 bra 	$L__BB5_19;

	mov.u32 	%r316, 0;

$L__BB5_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd17), _optix_get_transform_list_handle, (%r316);
	// end inline asm
	// begin inline asm
	call (%r13), _optix_get_transform_type_from_handle, (%rd17);
	// end inline asm
	or.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p3, %r14, 3;
	@%p3 bra 	$L__BB5_9;
	bra.uni 	$L__BB5_4;

$L__BB5_9:
	setp.eq.s32 	%p6, %r13, 2;
	@%p6 bra 	$L__BB5_13;
	bra.uni 	$L__BB5_10;

$L__BB5_13:
	// begin inline asm
	call (%rd89), _optix_get_matrix_motion_transform_from_handle, (%rd17);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd91, %rd89;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd91];
	// end inline asm
	add.s64 	%rd95, %rd89, 16;
	// begin inline asm
	cvta.to.global.u64 %rd94, %rd95;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd94];
	// end inline asm
	add.s64 	%rd98, %rd89, 32;
	// begin inline asm
	cvta.to.global.u64 %rd97, %rd98;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd97];
	// end inline asm
	add.s64 	%rd101, %rd89, 48;
	// begin inline asm
	cvta.to.global.u64 %rd100, %rd101;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd100];
	// end inline asm
	add.s64 	%rd104, %rd89, 64;
	// begin inline asm
	cvta.to.global.u64 %rd103, %rd104;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd103];
	// end inline asm
	add.s64 	%rd107, %rd89, 80;
	// begin inline asm
	cvta.to.global.u64 %rd106, %rd107;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd106];
	// end inline asm
	add.s64 	%rd110, %rd89, 96;
	// begin inline asm
	cvta.to.global.u64 %rd109, %rd110;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd109];
	// end inline asm
	add.s64 	%rd113, %rd89, 112;
	// begin inline asm
	cvta.to.global.u64 %rd112, %rd113;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd112];
	// end inline asm
	mov.b32 	%f473, %r105;
	mov.b32 	%f474, %r106;
	and.b32  	%r146, %r104, 65535;
	add.s32 	%r147, %r146, -1;
	cvt.rn.f32.s32 	%f475, %r147;
	sub.f32 	%f476, %f345, %f473;
	mul.f32 	%f477, %f476, %f475;
	sub.f32 	%f478, %f474, %f473;
	div.rn.f32 	%f479, %f477, %f478;
	min.f32 	%f480, %f475, %f479;
	mov.f32 	%f481, 0f00000000;
	max.f32 	%f482, %f481, %f480;
	cvt.rmi.f32.f32 	%f483, %f482;
	sub.f32 	%f90, %f482, %f483;
	cvt.rzi.s32.f32 	%r148, %f483;
	mul.wide.s32 	%rd124, %r148, 48;
	add.s64 	%rd116, %rd98, %rd124;
	// begin inline asm
	cvta.to.global.u64 %rd115, %rd116;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd115];
	// end inline asm
	mov.b32 	%f873, %r134;
	mov.b32 	%f872, %r135;
	mov.b32 	%f871, %r136;
	mov.b32 	%f870, %r137;
	add.s64 	%rd119, %rd116, 16;
	// begin inline asm
	cvta.to.global.u64 %rd118, %rd119;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd118];
	// end inline asm
	mov.b32 	%f877, %r138;
	mov.b32 	%f876, %r139;
	mov.b32 	%f875, %r140;
	mov.b32 	%f874, %r141;
	add.s64 	%rd122, %rd116, 32;
	// begin inline asm
	cvta.to.global.u64 %rd121, %rd122;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd121];
	// end inline asm
	mov.b32 	%f881, %r142;
	mov.b32 	%f880, %r143;
	mov.b32 	%f879, %r144;
	mov.b32 	%f878, %r145;
	setp.leu.f32 	%p8, %f90, 0f00000000;
	@%p8 bra 	$L__BB5_15;

	cvt.rmi.f32.f32 	%f841, %f482;
	cvt.rzi.s32.f32 	%r315, %f841;
	cvt.s64.s32 	%rd255, %r315;
	mov.f32 	%f484, 0f3F800000;
	sub.f32 	%f485, %f484, %f90;
	mul.lo.s64 	%rd134, %rd255, 48;
	add.s64 	%rd135, %rd89, %rd134;
	add.s64 	%rd126, %rd135, 80;
	// begin inline asm
	cvta.to.global.u64 %rd125, %rd126;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r149,%r150,%r151,%r152}, [%rd125];
	// end inline asm
	mov.b32 	%f486, %r149;
	mov.b32 	%f487, %r150;
	mov.b32 	%f488, %r151;
	mov.b32 	%f489, %r152;
	mul.f32 	%f490, %f90, %f486;
	mul.f32 	%f491, %f90, %f487;
	mul.f32 	%f492, %f90, %f488;
	mul.f32 	%f493, %f90, %f489;
	fma.rn.f32 	%f873, %f485, %f873, %f490;
	fma.rn.f32 	%f872, %f485, %f872, %f491;
	fma.rn.f32 	%f871, %f485, %f871, %f492;
	fma.rn.f32 	%f870, %f485, %f870, %f493;
	add.s64 	%rd129, %rd135, 96;
	// begin inline asm
	cvta.to.global.u64 %rd128, %rd129;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r153,%r154,%r155,%r156}, [%rd128];
	// end inline asm
	mov.b32 	%f494, %r153;
	mov.b32 	%f495, %r154;
	mov.b32 	%f496, %r155;
	mov.b32 	%f497, %r156;
	mul.f32 	%f498, %f90, %f494;
	mul.f32 	%f499, %f90, %f495;
	mul.f32 	%f500, %f90, %f496;
	mul.f32 	%f501, %f90, %f497;
	fma.rn.f32 	%f877, %f485, %f877, %f498;
	fma.rn.f32 	%f876, %f485, %f876, %f499;
	fma.rn.f32 	%f875, %f485, %f875, %f500;
	fma.rn.f32 	%f874, %f485, %f874, %f501;
	add.s64 	%rd132, %rd135, 112;
	// begin inline asm
	cvta.to.global.u64 %rd131, %rd132;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r157,%r158,%r159,%r160}, [%rd131];
	// end inline asm
	mov.b32 	%f502, %r157;
	mov.b32 	%f503, %r158;
	mov.b32 	%f504, %r159;
	mov.b32 	%f505, %r160;
	mul.f32 	%f506, %f90, %f502;
	mul.f32 	%f507, %f90, %f503;
	mul.f32 	%f508, %f90, %f504;
	mul.f32 	%f509, %f90, %f505;
	fma.rn.f32 	%f881, %f485, %f881, %f506;
	fma.rn.f32 	%f880, %f485, %f880, %f507;
	fma.rn.f32 	%f879, %f485, %f879, %f508;
	fma.rn.f32 	%f878, %f485, %f878, %f509;
	bra.uni 	$L__BB5_15;

$L__BB5_4:
	mov.f32 	%f882, 0f00000000;
	mov.f32 	%f885, 0f3F800000;
	setp.eq.s32 	%p4, %r13, 4;
	@%p4 bra 	$L__BB5_7;

	setp.ne.s32 	%p5, %r13, 1;
	mov.f32 	%f883, %f882;
	mov.f32 	%f884, %f882;
	mov.f32 	%f886, %f882;
	mov.f32 	%f887, %f882;
	mov.f32 	%f888, %f885;
	mov.f32 	%f889, %f882;
	mov.f32 	%f890, %f882;
	mov.f32 	%f891, %f885;
	mov.f32 	%f892, %f882;
	mov.f32 	%f893, %f882;
	@%p5 bra 	$L__BB5_16;

	// begin inline asm
	call (%rd19), _optix_get_static_transform_from_handle, (%rd17);
	// end inline asm
	add.s64 	%rd256, %rd19, 64;
	bra.uni 	$L__BB5_8;

$L__BB5_10:
	// begin inline asm
	call (%rd32), _optix_get_srt_motion_transform_from_handle, (%rd17);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd34, %rd32;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r27,%r28,%r29,%r30}, [%rd34];
	// end inline asm
	add.s64 	%rd38, %rd32, 16;
	// begin inline asm
	cvta.to.global.u64 %rd37, %rd38;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r31,%r32,%r33,%r34}, [%rd37];
	// end inline asm
	add.s64 	%rd41, %rd32, 32;
	// begin inline asm
	cvta.to.global.u64 %rd40, %rd41;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r35,%r36,%r37,%r38}, [%rd40];
	// end inline asm
	add.s64 	%rd44, %rd32, 48;
	// begin inline asm
	cvta.to.global.u64 %rd43, %rd44;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r39,%r40,%r41,%r42}, [%rd43];
	// end inline asm
	add.s64 	%rd47, %rd32, 64;
	// begin inline asm
	cvta.to.global.u64 %rd46, %rd47;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r43,%r44,%r45,%r46}, [%rd46];
	// end inline asm
	add.s64 	%rd50, %rd32, 80;
	// begin inline asm
	cvta.to.global.u64 %rd49, %rd50;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd49];
	// end inline asm
	add.s64 	%rd53, %rd32, 96;
	// begin inline asm
	cvta.to.global.u64 %rd52, %rd53;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd52];
	// end inline asm
	add.s64 	%rd56, %rd32, 112;
	// begin inline asm
	cvta.to.global.u64 %rd55, %rd56;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd55];
	// end inline asm
	add.s64 	%rd59, %rd32, 128;
	// begin inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd58];
	// end inline asm
	add.s64 	%rd62, %rd32, 144;
	// begin inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd61];
	// end inline asm
	mov.b32 	%f360, %r30;
	mov.b32 	%f361, %r31;
	and.b32  	%r83, %r29, 65535;
	add.s32 	%r84, %r83, -1;
	cvt.rn.f32.s32 	%f362, %r84;
	sub.f32 	%f363, %f345, %f360;
	mul.f32 	%f364, %f363, %f362;
	sub.f32 	%f365, %f361, %f360;
	div.rn.f32 	%f366, %f364, %f365;
	min.f32 	%f367, %f362, %f366;
	mov.f32 	%f368, 0f00000000;
	max.f32 	%f369, %f368, %f367;
	cvt.rmi.f32.f32 	%f370, %f369;
	sub.f32 	%f29, %f369, %f370;
	cvt.rzi.s32.f32 	%r85, %f370;
	mul.wide.s32 	%rd76, %r85, 64;
	add.s64 	%rd65, %rd41, %rd76;
	// begin inline asm
	cvta.to.global.u64 %rd64, %rd65;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd64];
	// end inline asm
	mov.b32 	%f854, %r67;
	mov.b32 	%f855, %r68;
	mov.b32 	%f856, %r69;
	mov.b32 	%f857, %r70;
	add.s64 	%rd68, %rd65, 16;
	// begin inline asm
	cvta.to.global.u64 %rd67, %rd68;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd67];
	// end inline asm
	mov.b32 	%f858, %r71;
	mov.b32 	%f859, %r72;
	mov.b32 	%f860, %r73;
	mov.b32 	%f861, %r74;
	add.s64 	%rd71, %rd65, 32;
	// begin inline asm
	cvta.to.global.u64 %rd70, %rd71;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd70];
	// end inline asm
	mov.b32 	%f862, %r75;
	mov.b32 	%f863, %r76;
	mov.b32 	%f864, %r77;
	mov.b32 	%f865, %r78;
	add.s64 	%rd74, %rd65, 48;
	// begin inline asm
	cvta.to.global.u64 %rd73, %rd74;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd73];
	// end inline asm
	mov.b32 	%f866, %r79;
	mov.b32 	%f867, %r80;
	mov.b32 	%f868, %r81;
	mov.b32 	%f869, %r82;
	setp.leu.f32 	%p7, %f29, 0f00000000;
	@%p7 bra 	$L__BB5_12;

	mov.f32 	%f371, 0f3F800000;
	sub.f32 	%f372, %f371, %f29;
	add.s64 	%rd78, %rd65, 64;
	// begin inline asm
	cvta.to.global.u64 %rd77, %rd78;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r86,%r87,%r88,%r89}, [%rd77];
	// end inline asm
	mov.b32 	%f373, %r86;
	mov.b32 	%f374, %r87;
	mov.b32 	%f375, %r88;
	mov.b32 	%f376, %r89;
	mul.f32 	%f377, %f29, %f373;
	mul.f32 	%f378, %f29, %f374;
	mul.f32 	%f379, %f29, %f375;
	mul.f32 	%f380, %f29, %f376;
	fma.rn.f32 	%f854, %f372, %f854, %f377;
	fma.rn.f32 	%f855, %f372, %f855, %f378;
	fma.rn.f32 	%f856, %f372, %f856, %f379;
	fma.rn.f32 	%f857, %f372, %f857, %f380;
	add.s64 	%rd81, %rd65, 80;
	// begin inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd80];
	// end inline asm
	mov.b32 	%f381, %r90;
	mov.b32 	%f382, %r91;
	mov.b32 	%f383, %r92;
	mov.b32 	%f384, %r93;
	mul.f32 	%f385, %f29, %f381;
	mul.f32 	%f386, %f29, %f382;
	mul.f32 	%f387, %f29, %f383;
	mul.f32 	%f388, %f29, %f384;
	fma.rn.f32 	%f858, %f372, %f858, %f385;
	fma.rn.f32 	%f859, %f372, %f859, %f386;
	fma.rn.f32 	%f860, %f372, %f860, %f387;
	fma.rn.f32 	%f861, %f372, %f861, %f388;
	add.s64 	%rd84, %rd65, 96;
	// begin inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd83];
	// end inline asm
	mov.b32 	%f389, %r94;
	mov.b32 	%f390, %r95;
	mov.b32 	%f391, %r96;
	mov.b32 	%f392, %r97;
	mul.f32 	%f393, %f29, %f389;
	mul.f32 	%f394, %f29, %f390;
	mul.f32 	%f395, %f29, %f391;
	mul.f32 	%f396, %f29, %f392;
	fma.rn.f32 	%f862, %f372, %f862, %f393;
	fma.rn.f32 	%f397, %f372, %f863, %f394;
	fma.rn.f32 	%f398, %f372, %f864, %f395;
	fma.rn.f32 	%f399, %f372, %f865, %f396;
	add.s64 	%rd87, %rd65, 112;
	// begin inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd86];
	// end inline asm
	mov.b32 	%f400, %r98;
	mov.b32 	%f401, %r99;
	mov.b32 	%f402, %r100;
	mov.b32 	%f403, %r101;
	mul.f32 	%f404, %f29, %f400;
	mul.f32 	%f405, %f29, %f401;
	mul.f32 	%f406, %f29, %f402;
	mul.f32 	%f407, %f29, %f403;
	fma.rn.f32 	%f408, %f372, %f866, %f404;
	fma.rn.f32 	%f867, %f372, %f867, %f405;
	fma.rn.f32 	%f868, %f372, %f868, %f406;
	fma.rn.f32 	%f869, %f372, %f869, %f407;
	mul.f32 	%f409, %f398, %f398;
	fma.rn.f32 	%f410, %f397, %f397, %f409;
	fma.rn.f32 	%f411, %f399, %f399, %f410;
	fma.rn.f32 	%f412, %f408, %f408, %f411;
	sqrt.rn.f32 	%f413, %f412;
	rcp.rn.f32 	%f414, %f413;
	mul.f32 	%f863, %f397, %f414;
	mul.f32 	%f864, %f398, %f414;
	mul.f32 	%f865, %f399, %f414;
	mul.f32 	%f866, %f414, %f408;

$L__BB5_12:
	mul.f32 	%f415, %f864, %f864;
	fma.rn.f32 	%f416, %f863, %f863, %f415;
	fma.rn.f32 	%f417, %f865, %f865, %f416;
	fma.rn.f32 	%f418, %f866, %f866, %f417;
	rcp.rn.f32 	%f419, %f418;
	mul.f32 	%f420, %f863, %f419;
	mul.f32 	%f421, %f864, %f419;
	mul.f32 	%f422, %f865, %f419;
	mul.f32 	%f423, %f866, %f419;
	mul.f32 	%f424, %f863, %f420;
	mul.f32 	%f425, %f864, %f421;
	mul.f32 	%f426, %f865, %f422;
	mul.f32 	%f427, %f863, %f421;
	mul.f32 	%f428, %f865, %f423;
	mul.f32 	%f429, %f863, %f422;
	mul.f32 	%f430, %f864, %f423;
	mul.f32 	%f431, %f864, %f422;
	mul.f32 	%f432, %f863, %f423;
	sub.f32 	%f433, %f424, %f425;
	sub.f32 	%f434, %f433, %f426;
	fma.rn.f32 	%f435, %f866, %f423, %f434;
	sub.f32 	%f436, %f427, %f428;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f438, %f429, %f430;
	add.f32 	%f439, %f438, %f438;
	add.f32 	%f440, %f427, %f428;
	add.f32 	%f441, %f440, %f440;
	sub.f32 	%f442, %f425, %f424;
	sub.f32 	%f443, %f442, %f426;
	fma.rn.f32 	%f444, %f866, %f423, %f443;
	sub.f32 	%f445, %f431, %f432;
	add.f32 	%f446, %f445, %f445;
	sub.f32 	%f447, %f429, %f430;
	add.f32 	%f448, %f447, %f447;
	add.f32 	%f449, %f431, %f432;
	add.f32 	%f450, %f449, %f449;
	neg.f32 	%f451, %f424;
	sub.f32 	%f452, %f451, %f425;
	add.f32 	%f453, %f426, %f452;
	fma.rn.f32 	%f454, %f866, %f423, %f453;
	mul.f32 	%f455, %f857, %f435;
	fma.rn.f32 	%f456, %f860, %f437, %f455;
	fma.rn.f32 	%f457, %f862, %f439, %f456;
	add.f32 	%f870, %f867, %f457;
	mul.f32 	%f458, %f860, %f444;
	fma.rn.f32 	%f459, %f857, %f441, %f458;
	fma.rn.f32 	%f460, %f862, %f446, %f459;
	add.f32 	%f874, %f868, %f460;
	mul.f32 	%f461, %f860, %f450;
	fma.rn.f32 	%f462, %f857, %f448, %f461;
	fma.rn.f32 	%f463, %f862, %f454, %f462;
	add.f32 	%f878, %f869, %f463;
	mul.f32 	%f464, %f856, %f435;
	fma.rn.f32 	%f465, %f859, %f437, %f464;
	fma.rn.f32 	%f871, %f861, %f439, %f465;
	mul.f32 	%f466, %f859, %f444;
	fma.rn.f32 	%f467, %f856, %f441, %f466;
	fma.rn.f32 	%f875, %f861, %f446, %f467;
	mul.f32 	%f468, %f859, %f450;
	fma.rn.f32 	%f469, %f856, %f448, %f468;
	fma.rn.f32 	%f879, %f861, %f454, %f469;
	mul.f32 	%f470, %f855, %f435;
	fma.rn.f32 	%f872, %f858, %f437, %f470;
	mul.f32 	%f471, %f858, %f444;
	fma.rn.f32 	%f876, %f855, %f441, %f471;
	mul.f32 	%f472, %f858, %f450;
	fma.rn.f32 	%f880, %f855, %f448, %f472;
	mul.f32 	%f873, %f854, %f435;
	mul.f32 	%f877, %f854, %f441;
	mul.f32 	%f881, %f854, %f448;

$L__BB5_15:
	mul.f32 	%f510, %f875, %f880;
	mul.f32 	%f511, %f876, %f879;
	sub.f32 	%f512, %f511, %f510;
	mul.f32 	%f513, %f873, %f512;
	mul.f32 	%f514, %f875, %f881;
	mul.f32 	%f515, %f877, %f879;
	sub.f32 	%f516, %f515, %f514;
	mul.f32 	%f517, %f872, %f516;
	sub.f32 	%f518, %f513, %f517;
	mul.f32 	%f519, %f876, %f881;
	mul.f32 	%f520, %f877, %f880;
	sub.f32 	%f521, %f520, %f519;
	fma.rn.f32 	%f522, %f871, %f521, %f518;
	rcp.rn.f32 	%f523, %f522;
	mul.f32 	%f885, %f512, %f523;
	mul.f32 	%f524, %f872, %f879;
	mul.f32 	%f525, %f871, %f880;
	sub.f32 	%f526, %f525, %f524;
	mul.f32 	%f884, %f526, %f523;
	mul.f32 	%f527, %f871, %f876;
	mul.f32 	%f528, %f872, %f875;
	sub.f32 	%f529, %f528, %f527;
	mul.f32 	%f883, %f529, %f523;
	sub.f32 	%f530, %f514, %f515;
	mul.f32 	%f889, %f530, %f523;
	mul.f32 	%f531, %f871, %f881;
	mul.f32 	%f532, %f873, %f879;
	sub.f32 	%f533, %f532, %f531;
	mul.f32 	%f888, %f533, %f523;
	mul.f32 	%f534, %f873, %f875;
	mul.f32 	%f535, %f871, %f877;
	sub.f32 	%f536, %f535, %f534;
	mul.f32 	%f887, %f536, %f523;
	mul.f32 	%f893, %f521, %f523;
	mul.f32 	%f537, %f873, %f880;
	mul.f32 	%f538, %f872, %f881;
	sub.f32 	%f539, %f538, %f537;
	mul.f32 	%f892, %f539, %f523;
	mul.f32 	%f540, %f872, %f877;
	mul.f32 	%f541, %f873, %f876;
	sub.f32 	%f542, %f541, %f540;
	mul.f32 	%f891, %f542, %f523;
	mul.f32 	%f543, %f870, %f885;
	neg.f32 	%f544, %f543;
	mul.f32 	%f545, %f874, %f884;
	sub.f32 	%f546, %f544, %f545;
	mul.f32 	%f547, %f878, %f883;
	sub.f32 	%f882, %f546, %f547;
	mul.f32 	%f548, %f870, %f889;
	neg.f32 	%f549, %f548;
	mul.f32 	%f550, %f874, %f888;
	sub.f32 	%f551, %f549, %f550;
	mul.f32 	%f552, %f878, %f887;
	sub.f32 	%f886, %f551, %f552;
	mul.f32 	%f553, %f870, %f893;
	neg.f32 	%f554, %f553;
	mul.f32 	%f555, %f874, %f892;
	sub.f32 	%f556, %f554, %f555;
	mul.f32 	%f557, %f878, %f891;
	sub.f32 	%f890, %f556, %f557;
	bra.uni 	$L__BB5_16;

$L__BB5_7:
	// begin inline asm
	call (%rd256), _optix_get_instance_inverse_transform_from_handle, (%rd17);
	// end inline asm

$L__BB5_8:
	// begin inline asm
	cvta.to.global.u64 %rd23, %rd256;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r15,%r16,%r17,%r18}, [%rd23];
	// end inline asm
	mov.b32 	%f885, %r15;
	mov.b32 	%f884, %r16;
	mov.b32 	%f883, %r17;
	mov.b32 	%f882, %r18;
	add.s64 	%rd27, %rd256, 16;
	// begin inline asm
	cvta.to.global.u64 %rd26, %rd27;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r19,%r20,%r21,%r22}, [%rd26];
	// end inline asm
	mov.b32 	%f889, %r19;
	mov.b32 	%f888, %r20;
	mov.b32 	%f887, %r21;
	mov.b32 	%f886, %r22;
	add.s64 	%rd30, %rd256, 32;
	// begin inline asm
	cvta.to.global.u64 %rd29, %rd30;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r23,%r24,%r25,%r26}, [%rd29];
	// end inline asm
	mov.b32 	%f893, %r23;
	mov.b32 	%f892, %r24;
	mov.b32 	%f891, %r25;
	mov.b32 	%f890, %r26;

$L__BB5_16:
	setp.eq.s32 	%p9, %r316, 0;
	@%p9 bra 	$L__BB5_18;

	mul.f32 	%f558, %f850, %f885;
	fma.rn.f32 	%f559, %f846, %f884, %f558;
	fma.rn.f32 	%f151, %f842, %f883, %f559;
	mul.f32 	%f560, %f851, %f885;
	fma.rn.f32 	%f561, %f847, %f884, %f560;
	fma.rn.f32 	%f152, %f843, %f883, %f561;
	mul.f32 	%f562, %f852, %f885;
	fma.rn.f32 	%f563, %f848, %f884, %f562;
	fma.rn.f32 	%f153, %f844, %f883, %f563;
	mul.f32 	%f564, %f853, %f885;
	fma.rn.f32 	%f565, %f849, %f884, %f564;
	fma.rn.f32 	%f566, %f845, %f883, %f565;
	add.f32 	%f882, %f882, %f566;
	mul.f32 	%f567, %f850, %f889;
	fma.rn.f32 	%f568, %f846, %f888, %f567;
	fma.rn.f32 	%f155, %f842, %f887, %f568;
	mul.f32 	%f569, %f851, %f889;
	fma.rn.f32 	%f570, %f847, %f888, %f569;
	fma.rn.f32 	%f156, %f843, %f887, %f570;
	mul.f32 	%f571, %f852, %f889;
	fma.rn.f32 	%f572, %f848, %f888, %f571;
	fma.rn.f32 	%f157, %f844, %f887, %f572;
	mul.f32 	%f573, %f853, %f889;
	fma.rn.f32 	%f574, %f849, %f888, %f573;
	fma.rn.f32 	%f575, %f845, %f887, %f574;
	add.f32 	%f886, %f886, %f575;
	mul.f32 	%f576, %f850, %f893;
	fma.rn.f32 	%f577, %f846, %f892, %f576;
	fma.rn.f32 	%f159, %f842, %f891, %f577;
	mul.f32 	%f578, %f851, %f893;
	fma.rn.f32 	%f579, %f847, %f892, %f578;
	fma.rn.f32 	%f160, %f843, %f891, %f579;
	mul.f32 	%f580, %f852, %f893;
	fma.rn.f32 	%f581, %f848, %f892, %f580;
	fma.rn.f32 	%f161, %f844, %f891, %f581;
	mul.f32 	%f582, %f853, %f893;
	fma.rn.f32 	%f583, %f849, %f892, %f582;
	fma.rn.f32 	%f584, %f845, %f891, %f583;
	add.f32 	%f890, %f890, %f584;
	mov.f32 	%f883, %f153;
	mov.f32 	%f884, %f152;
	mov.f32 	%f885, %f151;
	mov.f32 	%f887, %f157;
	mov.f32 	%f888, %f156;
	mov.f32 	%f889, %f155;
	mov.f32 	%f891, %f161;
	mov.f32 	%f892, %f160;
	mov.f32 	%f893, %f159;

$L__BB5_18:
	add.s32 	%r316, %r316, 1;
	setp.lt.u32 	%p10, %r316, %r10;
	mov.f32 	%f842, %f893;
	mov.f32 	%f843, %f892;
	mov.f32 	%f844, %f891;
	mov.f32 	%f845, %f890;
	mov.f32 	%f846, %f889;
	mov.f32 	%f847, %f888;
	mov.f32 	%f848, %f887;
	mov.f32 	%f849, %f886;
	mov.f32 	%f850, %f885;
	mov.f32 	%f851, %f884;
	mov.f32 	%f852, %f883;
	mov.f32 	%f853, %f882;
	@%p10 bra 	$L__BB5_3;

$L__BB5_19:
	mul.f32 	%f585, %f918, %f885;
	fma.rn.f32 	%f586, %f919, %f884, %f585;
	fma.rn.f32 	%f587, %f920, %f883, %f586;
	mul.f32 	%f588, %f918, %f889;
	fma.rn.f32 	%f589, %f919, %f888, %f588;
	fma.rn.f32 	%f590, %f920, %f887, %f589;
	mul.f32 	%f591, %f918, %f893;
	fma.rn.f32 	%f592, %f919, %f892, %f591;
	fma.rn.f32 	%f593, %f920, %f891, %f592;
	add.f32 	%f920, %f890, %f593;
	add.f32 	%f919, %f886, %f590;
	add.f32 	%f918, %f882, %f587;

$L__BB5_21:
	// begin inline asm
	call (%f976), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f977), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f596), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r161), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p11, %r161, 0;
	@%p11 bra 	$L__BB5_41;

	// begin inline asm
	call (%r162), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f597), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p12, %r162, 0;
	@%p12 bra 	$L__BB5_40;

	mov.u32 	%r317, 0;

$L__BB5_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd136), _optix_get_transform_list_handle, (%r317);
	// end inline asm
	// begin inline asm
	call (%r165), _optix_get_transform_type_from_handle, (%rd136);
	// end inline asm
	or.b32  	%r166, %r165, 1;
	setp.eq.s32 	%p13, %r166, 3;
	@%p13 bra 	$L__BB5_30;
	bra.uni 	$L__BB5_25;

$L__BB5_30:
	setp.eq.s32 	%p16, %r165, 2;
	@%p16 bra 	$L__BB5_34;
	bra.uni 	$L__BB5_31;

$L__BB5_34:
	// begin inline asm
	call (%rd208), _optix_get_matrix_motion_transform_from_handle, (%rd136);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd210, %rd208;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd210];
	// end inline asm
	add.s64 	%rd214, %rd208, 16;
	// begin inline asm
	cvta.to.global.u64 %rd213, %rd214;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd213];
	// end inline asm
	add.s64 	%rd217, %rd208, 32;
	// begin inline asm
	cvta.to.global.u64 %rd216, %rd217;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd216];
	// end inline asm
	add.s64 	%rd220, %rd208, 48;
	// begin inline asm
	cvta.to.global.u64 %rd219, %rd220;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd219];
	// end inline asm
	add.s64 	%rd223, %rd208, 64;
	// begin inline asm
	cvta.to.global.u64 %rd222, %rd223;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd222];
	// end inline asm
	add.s64 	%rd226, %rd208, 80;
	// begin inline asm
	cvta.to.global.u64 %rd225, %rd226;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd225];
	// end inline asm
	add.s64 	%rd229, %rd208, 96;
	// begin inline asm
	cvta.to.global.u64 %rd228, %rd229;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd228];
	// end inline asm
	add.s64 	%rd232, %rd208, 112;
	// begin inline asm
	cvta.to.global.u64 %rd231, %rd232;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd231];
	// end inline asm
	mov.b32 	%f701, %r257;
	mov.b32 	%f702, %r258;
	and.b32  	%r298, %r256, 65535;
	add.s32 	%r299, %r298, -1;
	cvt.rn.f32.s32 	%f703, %r299;
	sub.f32 	%f704, %f597, %f701;
	mul.f32 	%f705, %f704, %f703;
	sub.f32 	%f706, %f702, %f701;
	div.rn.f32 	%f707, %f705, %f706;
	min.f32 	%f708, %f703, %f707;
	mov.f32 	%f709, 0f00000000;
	max.f32 	%f710, %f709, %f708;
	cvt.rmi.f32.f32 	%f711, %f710;
	sub.f32 	%f258, %f710, %f711;
	cvt.rzi.s32.f32 	%r300, %f711;
	cvt.s64.s32 	%rd15, %r300;
	mul.wide.s32 	%rd243, %r300, 48;
	add.s64 	%rd235, %rd217, %rd243;
	// begin inline asm
	cvta.to.global.u64 %rd234, %rd235;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd234];
	// end inline asm
	mov.b32 	%f946, %r286;
	mov.b32 	%f947, %r287;
	mov.b32 	%f948, %r288;
	add.s64 	%rd238, %rd235, 16;
	// begin inline asm
	cvta.to.global.u64 %rd237, %rd238;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd237];
	// end inline asm
	mov.b32 	%f943, %r290;
	mov.b32 	%f944, %r291;
	mov.b32 	%f945, %r292;
	add.s64 	%rd241, %rd235, 32;
	// begin inline asm
	cvta.to.global.u64 %rd240, %rd241;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd240];
	// end inline asm
	mov.b32 	%f940, %r294;
	mov.b32 	%f941, %r295;
	mov.b32 	%f942, %r296;
	setp.leu.f32 	%p18, %f258, 0f00000000;
	@%p18 bra 	$L__BB5_36;

	mov.f32 	%f712, 0f3F800000;
	sub.f32 	%f713, %f712, %f258;
	mul.lo.s64 	%rd253, %rd15, 48;
	add.s64 	%rd254, %rd208, %rd253;
	add.s64 	%rd245, %rd254, 80;
	// begin inline asm
	cvta.to.global.u64 %rd244, %rd245;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd244];
	// end inline asm
	mov.b32 	%f714, %r301;
	mov.b32 	%f715, %r302;
	mov.b32 	%f716, %r303;
	mul.f32 	%f717, %f258, %f714;
	mul.f32 	%f718, %f258, %f715;
	mul.f32 	%f719, %f258, %f716;
	fma.rn.f32 	%f946, %f713, %f946, %f717;
	fma.rn.f32 	%f947, %f713, %f947, %f718;
	fma.rn.f32 	%f948, %f713, %f948, %f719;
	add.s64 	%rd248, %rd254, 96;
	// begin inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd247];
	// end inline asm
	mov.b32 	%f720, %r305;
	mov.b32 	%f721, %r306;
	mov.b32 	%f722, %r307;
	mul.f32 	%f723, %f258, %f720;
	mul.f32 	%f724, %f258, %f721;
	mul.f32 	%f725, %f258, %f722;
	fma.rn.f32 	%f943, %f713, %f943, %f723;
	fma.rn.f32 	%f944, %f713, %f944, %f724;
	fma.rn.f32 	%f945, %f713, %f945, %f725;
	add.s64 	%rd251, %rd254, 112;
	// begin inline asm
	cvta.to.global.u64 %rd250, %rd251;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd250];
	// end inline asm
	mov.b32 	%f726, %r309;
	mov.b32 	%f727, %r310;
	mov.b32 	%f728, %r311;
	mul.f32 	%f729, %f258, %f726;
	mul.f32 	%f730, %f258, %f727;
	mul.f32 	%f731, %f258, %f728;
	fma.rn.f32 	%f940, %f713, %f940, %f729;
	fma.rn.f32 	%f941, %f713, %f941, %f730;
	fma.rn.f32 	%f942, %f713, %f942, %f731;
	bra.uni 	$L__BB5_36;

$L__BB5_25:
	mov.f32 	%f949, 0f00000000;
	mov.f32 	%f951, 0f3F800000;
	setp.eq.s32 	%p14, %r165, 4;
	@%p14 bra 	$L__BB5_28;

	setp.ne.s32 	%p15, %r165, 1;
	mov.f32 	%f950, %f949;
	mov.f32 	%f952, %f949;
	mov.f32 	%f953, %f951;
	mov.f32 	%f954, %f949;
	mov.f32 	%f955, %f951;
	mov.f32 	%f956, %f949;
	mov.f32 	%f957, %f949;
	@%p15 bra 	$L__BB5_37;

	// begin inline asm
	call (%rd138), _optix_get_static_transform_from_handle, (%rd136);
	// end inline asm
	add.s64 	%rd257, %rd138, 64;
	bra.uni 	$L__BB5_29;

$L__BB5_31:
	// begin inline asm
	call (%rd151), _optix_get_srt_motion_transform_from_handle, (%rd136);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd153, %rd151;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd153];
	// end inline asm
	add.s64 	%rd157, %rd151, 16;
	// begin inline asm
	cvta.to.global.u64 %rd156, %rd157;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd156];
	// end inline asm
	add.s64 	%rd160, %rd151, 32;
	// begin inline asm
	cvta.to.global.u64 %rd159, %rd160;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd159];
	// end inline asm
	add.s64 	%rd163, %rd151, 48;
	// begin inline asm
	cvta.to.global.u64 %rd162, %rd163;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd162];
	// end inline asm
	add.s64 	%rd166, %rd151, 64;
	// begin inline asm
	cvta.to.global.u64 %rd165, %rd166;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd165];
	// end inline asm
	add.s64 	%rd169, %rd151, 80;
	// begin inline asm
	cvta.to.global.u64 %rd168, %rd169;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd168];
	// end inline asm
	add.s64 	%rd172, %rd151, 96;
	// begin inline asm
	cvta.to.global.u64 %rd171, %rd172;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd171];
	// end inline asm
	add.s64 	%rd175, %rd151, 112;
	// begin inline asm
	cvta.to.global.u64 %rd174, %rd175;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd174];
	// end inline asm
	add.s64 	%rd178, %rd151, 128;
	// begin inline asm
	cvta.to.global.u64 %rd177, %rd178;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd177];
	// end inline asm
	add.s64 	%rd181, %rd151, 144;
	// begin inline asm
	cvta.to.global.u64 %rd180, %rd181;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd180];
	// end inline asm
	mov.b32 	%f609, %r182;
	mov.b32 	%f610, %r183;
	and.b32  	%r235, %r181, 65535;
	add.s32 	%r236, %r235, -1;
	cvt.rn.f32.s32 	%f611, %r236;
	sub.f32 	%f612, %f597, %f609;
	mul.f32 	%f613, %f612, %f611;
	sub.f32 	%f614, %f610, %f609;
	div.rn.f32 	%f615, %f613, %f614;
	min.f32 	%f616, %f611, %f615;
	mov.f32 	%f617, 0f00000000;
	max.f32 	%f618, %f617, %f616;
	cvt.rmi.f32.f32 	%f619, %f618;
	sub.f32 	%f218, %f618, %f619;
	cvt.rzi.s32.f32 	%r237, %f619;
	mul.wide.s32 	%rd195, %r237, 64;
	add.s64 	%rd184, %rd160, %rd195;
	// begin inline asm
	cvta.to.global.u64 %rd183, %rd184;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd183];
	// end inline asm
	mov.b32 	%f930, %r219;
	mov.b32 	%f931, %r220;
	mov.b32 	%f932, %r221;
	add.s64 	%rd187, %rd184, 16;
	// begin inline asm
	cvta.to.global.u64 %rd186, %rd187;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd186];
	// end inline asm
	mov.b32 	%f933, %r223;
	mov.b32 	%f934, %r224;
	mov.b32 	%f935, %r226;
	add.s64 	%rd190, %rd184, 32;
	// begin inline asm
	cvta.to.global.u64 %rd189, %rd190;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd189];
	// end inline asm
	mov.b32 	%f936, %r228;
	mov.b32 	%f937, %r229;
	mov.b32 	%f938, %r230;
	add.s64 	%rd193, %rd184, 48;
	// begin inline asm
	cvta.to.global.u64 %rd192, %rd193;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd192];
	// end inline asm
	mov.b32 	%f939, %r231;
	setp.leu.f32 	%p17, %f218, 0f00000000;
	@%p17 bra 	$L__BB5_33;

	mov.f32 	%f620, 0f3F800000;
	sub.f32 	%f621, %f620, %f218;
	add.s64 	%rd197, %rd184, 64;
	// begin inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd196];
	// end inline asm
	mov.b32 	%f622, %r238;
	mov.b32 	%f623, %r239;
	mov.b32 	%f624, %r240;
	mul.f32 	%f625, %f218, %f622;
	mul.f32 	%f626, %f218, %f623;
	mul.f32 	%f627, %f218, %f624;
	fma.rn.f32 	%f930, %f621, %f930, %f625;
	fma.rn.f32 	%f931, %f621, %f931, %f626;
	fma.rn.f32 	%f932, %f621, %f932, %f627;
	add.s64 	%rd200, %rd184, 80;
	// begin inline asm
	cvta.to.global.u64 %rd199, %rd200;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd199];
	// end inline asm
	mov.b32 	%f628, %r242;
	mov.b32 	%f629, %r243;
	mov.b32 	%f630, %r245;
	mul.f32 	%f631, %f218, %f628;
	mul.f32 	%f632, %f218, %f629;
	mul.f32 	%f633, %f218, %f630;
	fma.rn.f32 	%f933, %f621, %f933, %f631;
	fma.rn.f32 	%f934, %f621, %f934, %f632;
	fma.rn.f32 	%f935, %f621, %f935, %f633;
	add.s64 	%rd203, %rd184, 96;
	// begin inline asm
	cvta.to.global.u64 %rd202, %rd203;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd202];
	// end inline asm
	mov.b32 	%f634, %r247;
	mov.b32 	%f635, %r248;
	mov.b32 	%f636, %r249;
	mul.f32 	%f637, %f218, %f634;
	mul.f32 	%f638, %f218, %f635;
	mul.f32 	%f639, %f218, %f636;
	fma.rn.f32 	%f640, %f621, %f936, %f637;
	fma.rn.f32 	%f641, %f621, %f937, %f638;
	fma.rn.f32 	%f642, %f621, %f938, %f639;
	add.s64 	%rd206, %rd184, 112;
	// begin inline asm
	cvta.to.global.u64 %rd205, %rd206;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd205];
	// end inline asm
	mov.b32 	%f643, %r250;
	mul.f32 	%f644, %f218, %f643;
	fma.rn.f32 	%f645, %f621, %f939, %f644;
	mul.f32 	%f646, %f641, %f641;
	fma.rn.f32 	%f647, %f640, %f640, %f646;
	fma.rn.f32 	%f648, %f642, %f642, %f647;
	fma.rn.f32 	%f649, %f645, %f645, %f648;
	sqrt.rn.f32 	%f650, %f649;
	rcp.rn.f32 	%f651, %f650;
	mul.f32 	%f936, %f640, %f651;
	mul.f32 	%f937, %f641, %f651;
	mul.f32 	%f938, %f642, %f651;
	mul.f32 	%f939, %f651, %f645;

$L__BB5_33:
	mul.f32 	%f652, %f937, %f937;
	fma.rn.f32 	%f653, %f936, %f936, %f652;
	fma.rn.f32 	%f654, %f938, %f938, %f653;
	fma.rn.f32 	%f655, %f939, %f939, %f654;
	rcp.rn.f32 	%f656, %f655;
	mul.f32 	%f657, %f936, %f656;
	mul.f32 	%f658, %f937, %f656;
	mul.f32 	%f659, %f938, %f656;
	mul.f32 	%f660, %f939, %f656;
	mul.f32 	%f661, %f936, %f657;
	mul.f32 	%f662, %f937, %f658;
	mul.f32 	%f663, %f938, %f659;
	mul.f32 	%f664, %f936, %f658;
	mul.f32 	%f665, %f938, %f660;
	mul.f32 	%f666, %f936, %f659;
	mul.f32 	%f667, %f937, %f660;
	mul.f32 	%f668, %f937, %f659;
	mul.f32 	%f669, %f936, %f660;
	sub.f32 	%f670, %f661, %f662;
	sub.f32 	%f671, %f670, %f663;
	fma.rn.f32 	%f672, %f939, %f660, %f671;
	sub.f32 	%f673, %f664, %f665;
	add.f32 	%f674, %f673, %f673;
	add.f32 	%f675, %f666, %f667;
	add.f32 	%f676, %f675, %f675;
	add.f32 	%f677, %f664, %f665;
	add.f32 	%f678, %f677, %f677;
	sub.f32 	%f679, %f662, %f661;
	sub.f32 	%f680, %f679, %f663;
	fma.rn.f32 	%f681, %f939, %f660, %f680;
	sub.f32 	%f682, %f668, %f669;
	add.f32 	%f683, %f682, %f682;
	sub.f32 	%f684, %f666, %f667;
	add.f32 	%f685, %f684, %f684;
	add.f32 	%f686, %f668, %f669;
	add.f32 	%f687, %f686, %f686;
	neg.f32 	%f688, %f661;
	sub.f32 	%f689, %f688, %f662;
	add.f32 	%f690, %f663, %f689;
	fma.rn.f32 	%f691, %f939, %f660, %f690;
	mul.f32 	%f692, %f932, %f672;
	fma.rn.f32 	%f693, %f934, %f674, %f692;
	fma.rn.f32 	%f948, %f935, %f676, %f693;
	mul.f32 	%f694, %f934, %f681;
	fma.rn.f32 	%f695, %f932, %f678, %f694;
	fma.rn.f32 	%f945, %f935, %f683, %f695;
	mul.f32 	%f696, %f934, %f687;
	fma.rn.f32 	%f697, %f932, %f685, %f696;
	fma.rn.f32 	%f942, %f935, %f691, %f697;
	mul.f32 	%f698, %f931, %f672;
	fma.rn.f32 	%f947, %f933, %f674, %f698;
	mul.f32 	%f699, %f933, %f681;
	fma.rn.f32 	%f944, %f931, %f678, %f699;
	mul.f32 	%f700, %f933, %f687;
	fma.rn.f32 	%f941, %f931, %f685, %f700;
	mul.f32 	%f946, %f930, %f672;
	mul.f32 	%f943, %f930, %f678;
	mul.f32 	%f940, %f930, %f685;

$L__BB5_36:
	mul.f32 	%f732, %f941, %f945;
	mul.f32 	%f733, %f942, %f944;
	sub.f32 	%f734, %f733, %f732;
	mul.f32 	%f735, %f946, %f734;
	mul.f32 	%f736, %f940, %f945;
	mul.f32 	%f737, %f942, %f943;
	sub.f32 	%f738, %f737, %f736;
	mul.f32 	%f739, %f738, %f947;
	sub.f32 	%f740, %f735, %f739;
	mul.f32 	%f741, %f940, %f944;
	mul.f32 	%f742, %f941, %f943;
	sub.f32 	%f743, %f742, %f741;
	fma.rn.f32 	%f744, %f743, %f948, %f740;
	rcp.rn.f32 	%f745, %f744;
	mul.f32 	%f955, %f734, %f745;
	mul.f32 	%f746, %f942, %f947;
	mul.f32 	%f747, %f941, %f948;
	sub.f32 	%f748, %f747, %f746;
	mul.f32 	%f956, %f748, %f745;
	mul.f32 	%f749, %f944, %f948;
	mul.f32 	%f750, %f945, %f947;
	sub.f32 	%f751, %f750, %f749;
	mul.f32 	%f957, %f751, %f745;
	sub.f32 	%f752, %f736, %f737;
	mul.f32 	%f952, %f752, %f745;
	mul.f32 	%f753, %f940, %f948;
	mul.f32 	%f754, %f942, %f946;
	sub.f32 	%f755, %f754, %f753;
	mul.f32 	%f953, %f755, %f745;
	mul.f32 	%f756, %f945, %f946;
	mul.f32 	%f757, %f943, %f948;
	sub.f32 	%f758, %f757, %f756;
	mul.f32 	%f954, %f758, %f745;
	mul.f32 	%f949, %f743, %f745;
	mul.f32 	%f759, %f941, %f946;
	mul.f32 	%f760, %f940, %f947;
	sub.f32 	%f761, %f760, %f759;
	mul.f32 	%f950, %f761, %f745;
	mul.f32 	%f762, %f943, %f947;
	mul.f32 	%f763, %f944, %f946;
	sub.f32 	%f764, %f763, %f762;
	mul.f32 	%f951, %f764, %f745;
	bra.uni 	$L__BB5_37;

$L__BB5_28:
	// begin inline asm
	call (%rd257), _optix_get_instance_inverse_transform_from_handle, (%rd136);
	// end inline asm

$L__BB5_29:
	// begin inline asm
	cvta.to.global.u64 %rd142, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd142];
	// end inline asm
	mov.b32 	%f955, %r167;
	mov.b32 	%f956, %r168;
	mov.b32 	%f957, %r169;
	add.s64 	%rd146, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd145, %rd146;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd145];
	// end inline asm
	mov.b32 	%f952, %r171;
	mov.b32 	%f953, %r172;
	mov.b32 	%f954, %r173;
	add.s64 	%rd149, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd148, %rd149;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd148];
	// end inline asm
	mov.b32 	%f949, %r175;
	mov.b32 	%f950, %r176;
	mov.b32 	%f951, %r177;

$L__BB5_37:
	setp.eq.s32 	%p19, %r317, 0;
	@%p19 bra 	$L__BB5_39;

	mul.f32 	%f765, %f926, %f956;
	fma.rn.f32 	%f766, %f923, %f955, %f765;
	fma.rn.f32 	%f304, %f929, %f957, %f766;
	mul.f32 	%f767, %f925, %f956;
	fma.rn.f32 	%f768, %f922, %f955, %f767;
	fma.rn.f32 	%f305, %f928, %f957, %f768;
	mul.f32 	%f769, %f924, %f956;
	fma.rn.f32 	%f770, %f921, %f955, %f769;
	fma.rn.f32 	%f957, %f927, %f957, %f770;
	mul.f32 	%f771, %f926, %f953;
	fma.rn.f32 	%f772, %f923, %f952, %f771;
	fma.rn.f32 	%f307, %f929, %f954, %f772;
	mul.f32 	%f773, %f925, %f953;
	fma.rn.f32 	%f774, %f922, %f952, %f773;
	fma.rn.f32 	%f308, %f928, %f954, %f774;
	mul.f32 	%f775, %f924, %f953;
	fma.rn.f32 	%f776, %f921, %f952, %f775;
	fma.rn.f32 	%f954, %f927, %f954, %f776;
	mul.f32 	%f777, %f926, %f950;
	fma.rn.f32 	%f778, %f923, %f949, %f777;
	fma.rn.f32 	%f310, %f929, %f951, %f778;
	mul.f32 	%f779, %f925, %f950;
	fma.rn.f32 	%f780, %f922, %f949, %f779;
	fma.rn.f32 	%f311, %f928, %f951, %f780;
	mul.f32 	%f781, %f924, %f950;
	fma.rn.f32 	%f782, %f921, %f949, %f781;
	fma.rn.f32 	%f951, %f927, %f951, %f782;
	mov.f32 	%f949, %f310;
	mov.f32 	%f950, %f311;
	mov.f32 	%f952, %f307;
	mov.f32 	%f953, %f308;
	mov.f32 	%f955, %f304;
	mov.f32 	%f956, %f305;

$L__BB5_39:
	add.s32 	%r317, %r317, 1;
	setp.lt.u32 	%p20, %r317, %r162;
	mov.f32 	%f921, %f957;
	mov.f32 	%f922, %f956;
	mov.f32 	%f923, %f955;
	mov.f32 	%f924, %f954;
	mov.f32 	%f925, %f953;
	mov.f32 	%f926, %f952;
	mov.f32 	%f927, %f951;
	mov.f32 	%f928, %f950;
	mov.f32 	%f929, %f949;
	@%p20 bra 	$L__BB5_24;

$L__BB5_40:
	mul.f32 	%f783, %f977, %f956;
	fma.rn.f32 	%f784, %f976, %f955, %f783;
	mul.f32 	%f785, %f977, %f953;
	fma.rn.f32 	%f786, %f976, %f952, %f785;
	mul.f32 	%f787, %f977, %f950;
	fma.rn.f32 	%f788, %f976, %f949, %f787;
	fma.rn.f32 	%f978, %f596, %f951, %f788;
	fma.rn.f32 	%f977, %f596, %f954, %f786;
	fma.rn.f32 	%f976, %f596, %f957, %f784;
	bra.uni 	$L__BB5_42;

$L__BB5_41:
	mov.f32 	%f978, %f596;

$L__BB5_42:
	// begin inline asm
	call (%f789), _optix_get_ray_tmin, ();
	// end inline asm
	fma.rn.f32 	%f792, %f976, %f789, %f918;
	fma.rn.f32 	%f793, %f977, %f789, %f919;
	fma.rn.f32 	%f794, %f978, %f789, %f920;
	ld.v4.f32 	{%f795, %f796, %f797, %f798}, [%rd1+80];
	ld.f32 	%f802, [%rd1+32];
	fma.rn.f32 	%f803, %f792, %f802, %f795;
	ld.f32 	%f804, [%rd1+36];
	fma.rn.f32 	%f805, %f792, %f804, %f796;
	ld.f32 	%f806, [%rd1+40];
	fma.rn.f32 	%f807, %f792, %f806, %f797;
	ld.f32 	%f808, [%rd1+48];
	fma.rn.f32 	%f809, %f793, %f808, %f803;
	ld.f32 	%f810, [%rd1+52];
	fma.rn.f32 	%f811, %f793, %f810, %f805;
	ld.f32 	%f812, [%rd1+56];
	fma.rn.f32 	%f813, %f793, %f812, %f807;
	ld.f32 	%f814, [%rd1+64];
	fma.rn.f32 	%f815, %f794, %f814, %f809;
	ld.f32 	%f816, [%rd1+68];
	fma.rn.f32 	%f817, %f794, %f816, %f811;
	ld.f32 	%f818, [%rd1+72];
	fma.rn.f32 	%f819, %f794, %f818, %f813;
	ld.v4.f32 	{%f820, %f821, %f822, %f823}, [%rd1+32];
	mul.f32 	%f827, %f976, %f820;
	mul.f32 	%f828, %f976, %f821;
	mul.f32 	%f829, %f976, %f822;
	fma.rn.f32 	%f830, %f977, %f808, %f827;
	fma.rn.f32 	%f831, %f977, %f810, %f828;
	fma.rn.f32 	%f832, %f977, %f812, %f829;
	fma.rn.f32 	%f833, %f978, %f814, %f830;
	fma.rn.f32 	%f834, %f978, %f816, %f831;
	fma.rn.f32 	%f835, %f978, %f818, %f832;
	neg.f32 	%f836, %f819;
	div.rn.f32 	%f340, %f836, %f835;
	fma.rn.f32 	%f837, %f340, %f833, %f815;
	fma.rn.f32 	%f341, %f340, %f834, %f817;
	abs.f32 	%f838, %f837;
	setp.gtu.f32 	%p21, %f838, 0f3F800000;
	@%p21 bra 	$L__BB5_45;

	abs.f32 	%f839, %f341;
	setp.gtu.f32 	%p22, %f839, 0f3F800000;
	@%p22 bra 	$L__BB5_45;

	mov.u32 	%r314, 254;
	// begin inline asm
	call (%r313), _optix_report_intersection_0, (%f340, %r314);
	// end inline asm

$L__BB5_45:
	ret;

}
	// .globl	__closesthit__rectangle
.visible .entry __closesthit__rectangle()
{
	.reg .pred 	%p<22>;
	.reg .f32 	%f<976>;
	.reg .b32 	%r<331>;
	.reg .b64 	%rd<259>;


	// begin inline asm
	call (%rd17), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd2, [%rd17+8];
	// begin inline asm
	call (%f915), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f916), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f917), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p1, %r9, 0;
	@%p1 bra 	$L__BB6_21;

	// begin inline asm
	call (%r10), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f343), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p2, %r10, 0;
	@%p2 bra 	$L__BB6_19;

	mov.u32 	%r329, 0;

$L__BB6_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd18), _optix_get_transform_list_handle, (%r329);
	// end inline asm
	// begin inline asm
	call (%r13), _optix_get_transform_type_from_handle, (%rd18);
	// end inline asm
	or.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p3, %r14, 3;
	@%p3 bra 	$L__BB6_9;
	bra.uni 	$L__BB6_4;

$L__BB6_9:
	setp.eq.s32 	%p6, %r13, 2;
	@%p6 bra 	$L__BB6_13;
	bra.uni 	$L__BB6_10;

$L__BB6_13:
	// begin inline asm
	call (%rd90), _optix_get_matrix_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd92, %rd90;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd92];
	// end inline asm
	add.s64 	%rd96, %rd90, 16;
	// begin inline asm
	cvta.to.global.u64 %rd95, %rd96;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd95];
	// end inline asm
	add.s64 	%rd99, %rd90, 32;
	// begin inline asm
	cvta.to.global.u64 %rd98, %rd99;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd98];
	// end inline asm
	add.s64 	%rd102, %rd90, 48;
	// begin inline asm
	cvta.to.global.u64 %rd101, %rd102;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd101];
	// end inline asm
	add.s64 	%rd105, %rd90, 64;
	// begin inline asm
	cvta.to.global.u64 %rd104, %rd105;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd104];
	// end inline asm
	add.s64 	%rd108, %rd90, 80;
	// begin inline asm
	cvta.to.global.u64 %rd107, %rd108;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd107];
	// end inline asm
	add.s64 	%rd111, %rd90, 96;
	// begin inline asm
	cvta.to.global.u64 %rd110, %rd111;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd110];
	// end inline asm
	add.s64 	%rd114, %rd90, 112;
	// begin inline asm
	cvta.to.global.u64 %rd113, %rd114;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd113];
	// end inline asm
	mov.b32 	%f471, %r105;
	mov.b32 	%f472, %r106;
	and.b32  	%r146, %r104, 65535;
	add.s32 	%r147, %r146, -1;
	cvt.rn.f32.s32 	%f473, %r147;
	sub.f32 	%f474, %f343, %f471;
	mul.f32 	%f475, %f474, %f473;
	sub.f32 	%f476, %f472, %f471;
	div.rn.f32 	%f477, %f475, %f476;
	min.f32 	%f478, %f473, %f477;
	mov.f32 	%f479, 0f00000000;
	max.f32 	%f480, %f479, %f478;
	cvt.rmi.f32.f32 	%f481, %f480;
	sub.f32 	%f90, %f480, %f481;
	cvt.rzi.s32.f32 	%r148, %f481;
	mul.wide.s32 	%rd125, %r148, 48;
	add.s64 	%rd117, %rd99, %rd125;
	// begin inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd116];
	// end inline asm
	mov.b32 	%f870, %r134;
	mov.b32 	%f869, %r135;
	mov.b32 	%f868, %r136;
	mov.b32 	%f867, %r137;
	add.s64 	%rd120, %rd117, 16;
	// begin inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd119];
	// end inline asm
	mov.b32 	%f874, %r138;
	mov.b32 	%f873, %r139;
	mov.b32 	%f872, %r140;
	mov.b32 	%f871, %r141;
	add.s64 	%rd123, %rd117, 32;
	// begin inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd122];
	// end inline asm
	mov.b32 	%f878, %r142;
	mov.b32 	%f877, %r143;
	mov.b32 	%f876, %r144;
	mov.b32 	%f875, %r145;
	setp.leu.f32 	%p8, %f90, 0f00000000;
	@%p8 bra 	$L__BB6_15;

	cvt.rmi.f32.f32 	%f838, %f480;
	cvt.rzi.s32.f32 	%r328, %f838;
	cvt.s64.s32 	%rd256, %r328;
	mov.f32 	%f482, 0f3F800000;
	sub.f32 	%f483, %f482, %f90;
	mul.lo.s64 	%rd135, %rd256, 48;
	add.s64 	%rd136, %rd90, %rd135;
	add.s64 	%rd127, %rd136, 80;
	// begin inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r149,%r150,%r151,%r152}, [%rd126];
	// end inline asm
	mov.b32 	%f484, %r149;
	mov.b32 	%f485, %r150;
	mov.b32 	%f486, %r151;
	mov.b32 	%f487, %r152;
	mul.f32 	%f488, %f90, %f484;
	mul.f32 	%f489, %f90, %f485;
	mul.f32 	%f490, %f90, %f486;
	mul.f32 	%f491, %f90, %f487;
	fma.rn.f32 	%f870, %f483, %f870, %f488;
	fma.rn.f32 	%f869, %f483, %f869, %f489;
	fma.rn.f32 	%f868, %f483, %f868, %f490;
	fma.rn.f32 	%f867, %f483, %f867, %f491;
	add.s64 	%rd130, %rd136, 96;
	// begin inline asm
	cvta.to.global.u64 %rd129, %rd130;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r153,%r154,%r155,%r156}, [%rd129];
	// end inline asm
	mov.b32 	%f492, %r153;
	mov.b32 	%f493, %r154;
	mov.b32 	%f494, %r155;
	mov.b32 	%f495, %r156;
	mul.f32 	%f496, %f90, %f492;
	mul.f32 	%f497, %f90, %f493;
	mul.f32 	%f498, %f90, %f494;
	mul.f32 	%f499, %f90, %f495;
	fma.rn.f32 	%f874, %f483, %f874, %f496;
	fma.rn.f32 	%f873, %f483, %f873, %f497;
	fma.rn.f32 	%f872, %f483, %f872, %f498;
	fma.rn.f32 	%f871, %f483, %f871, %f499;
	add.s64 	%rd133, %rd136, 112;
	// begin inline asm
	cvta.to.global.u64 %rd132, %rd133;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r157,%r158,%r159,%r160}, [%rd132];
	// end inline asm
	mov.b32 	%f500, %r157;
	mov.b32 	%f501, %r158;
	mov.b32 	%f502, %r159;
	mov.b32 	%f503, %r160;
	mul.f32 	%f504, %f90, %f500;
	mul.f32 	%f505, %f90, %f501;
	mul.f32 	%f506, %f90, %f502;
	mul.f32 	%f507, %f90, %f503;
	fma.rn.f32 	%f878, %f483, %f878, %f504;
	fma.rn.f32 	%f877, %f483, %f877, %f505;
	fma.rn.f32 	%f876, %f483, %f876, %f506;
	fma.rn.f32 	%f875, %f483, %f875, %f507;
	bra.uni 	$L__BB6_15;

$L__BB6_4:
	mov.f32 	%f879, 0f00000000;
	mov.f32 	%f882, 0f3F800000;
	setp.eq.s32 	%p4, %r13, 4;
	@%p4 bra 	$L__BB6_7;

	setp.ne.s32 	%p5, %r13, 1;
	mov.f32 	%f880, %f879;
	mov.f32 	%f881, %f879;
	mov.f32 	%f883, %f879;
	mov.f32 	%f884, %f879;
	mov.f32 	%f885, %f882;
	mov.f32 	%f886, %f879;
	mov.f32 	%f887, %f879;
	mov.f32 	%f888, %f882;
	mov.f32 	%f889, %f879;
	mov.f32 	%f890, %f879;
	@%p5 bra 	$L__BB6_16;

	// begin inline asm
	call (%rd20), _optix_get_static_transform_from_handle, (%rd18);
	// end inline asm
	add.s64 	%rd257, %rd20, 64;
	bra.uni 	$L__BB6_8;

$L__BB6_10:
	// begin inline asm
	call (%rd33), _optix_get_srt_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd35, %rd33;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r27,%r28,%r29,%r30}, [%rd35];
	// end inline asm
	add.s64 	%rd39, %rd33, 16;
	// begin inline asm
	cvta.to.global.u64 %rd38, %rd39;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r31,%r32,%r33,%r34}, [%rd38];
	// end inline asm
	add.s64 	%rd42, %rd33, 32;
	// begin inline asm
	cvta.to.global.u64 %rd41, %rd42;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r35,%r36,%r37,%r38}, [%rd41];
	// end inline asm
	add.s64 	%rd45, %rd33, 48;
	// begin inline asm
	cvta.to.global.u64 %rd44, %rd45;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r39,%r40,%r41,%r42}, [%rd44];
	// end inline asm
	add.s64 	%rd48, %rd33, 64;
	// begin inline asm
	cvta.to.global.u64 %rd47, %rd48;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r43,%r44,%r45,%r46}, [%rd47];
	// end inline asm
	add.s64 	%rd51, %rd33, 80;
	// begin inline asm
	cvta.to.global.u64 %rd50, %rd51;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd50];
	// end inline asm
	add.s64 	%rd54, %rd33, 96;
	// begin inline asm
	cvta.to.global.u64 %rd53, %rd54;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd53];
	// end inline asm
	add.s64 	%rd57, %rd33, 112;
	// begin inline asm
	cvta.to.global.u64 %rd56, %rd57;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd56];
	// end inline asm
	add.s64 	%rd60, %rd33, 128;
	// begin inline asm
	cvta.to.global.u64 %rd59, %rd60;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd59];
	// end inline asm
	add.s64 	%rd63, %rd33, 144;
	// begin inline asm
	cvta.to.global.u64 %rd62, %rd63;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd62];
	// end inline asm
	mov.b32 	%f358, %r30;
	mov.b32 	%f359, %r31;
	and.b32  	%r83, %r29, 65535;
	add.s32 	%r84, %r83, -1;
	cvt.rn.f32.s32 	%f360, %r84;
	sub.f32 	%f361, %f343, %f358;
	mul.f32 	%f362, %f361, %f360;
	sub.f32 	%f363, %f359, %f358;
	div.rn.f32 	%f364, %f362, %f363;
	min.f32 	%f365, %f360, %f364;
	mov.f32 	%f366, 0f00000000;
	max.f32 	%f367, %f366, %f365;
	cvt.rmi.f32.f32 	%f368, %f367;
	sub.f32 	%f29, %f367, %f368;
	cvt.rzi.s32.f32 	%r85, %f368;
	mul.wide.s32 	%rd77, %r85, 64;
	add.s64 	%rd66, %rd42, %rd77;
	// begin inline asm
	cvta.to.global.u64 %rd65, %rd66;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd65];
	// end inline asm
	mov.b32 	%f851, %r67;
	mov.b32 	%f852, %r68;
	mov.b32 	%f853, %r69;
	mov.b32 	%f854, %r70;
	add.s64 	%rd69, %rd66, 16;
	// begin inline asm
	cvta.to.global.u64 %rd68, %rd69;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd68];
	// end inline asm
	mov.b32 	%f855, %r71;
	mov.b32 	%f856, %r72;
	mov.b32 	%f857, %r73;
	mov.b32 	%f858, %r74;
	add.s64 	%rd72, %rd66, 32;
	// begin inline asm
	cvta.to.global.u64 %rd71, %rd72;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd71];
	// end inline asm
	mov.b32 	%f859, %r75;
	mov.b32 	%f860, %r76;
	mov.b32 	%f861, %r77;
	mov.b32 	%f862, %r78;
	add.s64 	%rd75, %rd66, 48;
	// begin inline asm
	cvta.to.global.u64 %rd74, %rd75;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd74];
	// end inline asm
	mov.b32 	%f863, %r79;
	mov.b32 	%f864, %r80;
	mov.b32 	%f865, %r81;
	mov.b32 	%f866, %r82;
	setp.leu.f32 	%p7, %f29, 0f00000000;
	@%p7 bra 	$L__BB6_12;

	mov.f32 	%f369, 0f3F800000;
	sub.f32 	%f370, %f369, %f29;
	add.s64 	%rd79, %rd66, 64;
	// begin inline asm
	cvta.to.global.u64 %rd78, %rd79;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r86,%r87,%r88,%r89}, [%rd78];
	// end inline asm
	mov.b32 	%f371, %r86;
	mov.b32 	%f372, %r87;
	mov.b32 	%f373, %r88;
	mov.b32 	%f374, %r89;
	mul.f32 	%f375, %f29, %f371;
	mul.f32 	%f376, %f29, %f372;
	mul.f32 	%f377, %f29, %f373;
	mul.f32 	%f378, %f29, %f374;
	fma.rn.f32 	%f851, %f370, %f851, %f375;
	fma.rn.f32 	%f852, %f370, %f852, %f376;
	fma.rn.f32 	%f853, %f370, %f853, %f377;
	fma.rn.f32 	%f854, %f370, %f854, %f378;
	add.s64 	%rd82, %rd66, 80;
	// begin inline asm
	cvta.to.global.u64 %rd81, %rd82;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd81];
	// end inline asm
	mov.b32 	%f379, %r90;
	mov.b32 	%f380, %r91;
	mov.b32 	%f381, %r92;
	mov.b32 	%f382, %r93;
	mul.f32 	%f383, %f29, %f379;
	mul.f32 	%f384, %f29, %f380;
	mul.f32 	%f385, %f29, %f381;
	mul.f32 	%f386, %f29, %f382;
	fma.rn.f32 	%f855, %f370, %f855, %f383;
	fma.rn.f32 	%f856, %f370, %f856, %f384;
	fma.rn.f32 	%f857, %f370, %f857, %f385;
	fma.rn.f32 	%f858, %f370, %f858, %f386;
	add.s64 	%rd85, %rd66, 96;
	// begin inline asm
	cvta.to.global.u64 %rd84, %rd85;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd84];
	// end inline asm
	mov.b32 	%f387, %r94;
	mov.b32 	%f388, %r95;
	mov.b32 	%f389, %r96;
	mov.b32 	%f390, %r97;
	mul.f32 	%f391, %f29, %f387;
	mul.f32 	%f392, %f29, %f388;
	mul.f32 	%f393, %f29, %f389;
	mul.f32 	%f394, %f29, %f390;
	fma.rn.f32 	%f859, %f370, %f859, %f391;
	fma.rn.f32 	%f395, %f370, %f860, %f392;
	fma.rn.f32 	%f396, %f370, %f861, %f393;
	fma.rn.f32 	%f397, %f370, %f862, %f394;
	add.s64 	%rd88, %rd66, 112;
	// begin inline asm
	cvta.to.global.u64 %rd87, %rd88;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd87];
	// end inline asm
	mov.b32 	%f398, %r98;
	mov.b32 	%f399, %r99;
	mov.b32 	%f400, %r100;
	mov.b32 	%f401, %r101;
	mul.f32 	%f402, %f29, %f398;
	mul.f32 	%f403, %f29, %f399;
	mul.f32 	%f404, %f29, %f400;
	mul.f32 	%f405, %f29, %f401;
	fma.rn.f32 	%f406, %f370, %f863, %f402;
	fma.rn.f32 	%f864, %f370, %f864, %f403;
	fma.rn.f32 	%f865, %f370, %f865, %f404;
	fma.rn.f32 	%f866, %f370, %f866, %f405;
	mul.f32 	%f407, %f396, %f396;
	fma.rn.f32 	%f408, %f395, %f395, %f407;
	fma.rn.f32 	%f409, %f397, %f397, %f408;
	fma.rn.f32 	%f410, %f406, %f406, %f409;
	sqrt.rn.f32 	%f411, %f410;
	rcp.rn.f32 	%f412, %f411;
	mul.f32 	%f860, %f395, %f412;
	mul.f32 	%f861, %f396, %f412;
	mul.f32 	%f862, %f397, %f412;
	mul.f32 	%f863, %f412, %f406;

$L__BB6_12:
	mul.f32 	%f413, %f861, %f861;
	fma.rn.f32 	%f414, %f860, %f860, %f413;
	fma.rn.f32 	%f415, %f862, %f862, %f414;
	fma.rn.f32 	%f416, %f863, %f863, %f415;
	rcp.rn.f32 	%f417, %f416;
	mul.f32 	%f418, %f860, %f417;
	mul.f32 	%f419, %f861, %f417;
	mul.f32 	%f420, %f862, %f417;
	mul.f32 	%f421, %f863, %f417;
	mul.f32 	%f422, %f860, %f418;
	mul.f32 	%f423, %f861, %f419;
	mul.f32 	%f424, %f862, %f420;
	mul.f32 	%f425, %f860, %f419;
	mul.f32 	%f426, %f862, %f421;
	mul.f32 	%f427, %f860, %f420;
	mul.f32 	%f428, %f861, %f421;
	mul.f32 	%f429, %f861, %f420;
	mul.f32 	%f430, %f860, %f421;
	sub.f32 	%f431, %f422, %f423;
	sub.f32 	%f432, %f431, %f424;
	fma.rn.f32 	%f433, %f863, %f421, %f432;
	sub.f32 	%f434, %f425, %f426;
	add.f32 	%f435, %f434, %f434;
	add.f32 	%f436, %f427, %f428;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f438, %f425, %f426;
	add.f32 	%f439, %f438, %f438;
	sub.f32 	%f440, %f423, %f422;
	sub.f32 	%f441, %f440, %f424;
	fma.rn.f32 	%f442, %f863, %f421, %f441;
	sub.f32 	%f443, %f429, %f430;
	add.f32 	%f444, %f443, %f443;
	sub.f32 	%f445, %f427, %f428;
	add.f32 	%f446, %f445, %f445;
	add.f32 	%f447, %f429, %f430;
	add.f32 	%f448, %f447, %f447;
	neg.f32 	%f449, %f422;
	sub.f32 	%f450, %f449, %f423;
	add.f32 	%f451, %f424, %f450;
	fma.rn.f32 	%f452, %f863, %f421, %f451;
	mul.f32 	%f453, %f854, %f433;
	fma.rn.f32 	%f454, %f857, %f435, %f453;
	fma.rn.f32 	%f455, %f859, %f437, %f454;
	add.f32 	%f867, %f864, %f455;
	mul.f32 	%f456, %f857, %f442;
	fma.rn.f32 	%f457, %f854, %f439, %f456;
	fma.rn.f32 	%f458, %f859, %f444, %f457;
	add.f32 	%f871, %f865, %f458;
	mul.f32 	%f459, %f857, %f448;
	fma.rn.f32 	%f460, %f854, %f446, %f459;
	fma.rn.f32 	%f461, %f859, %f452, %f460;
	add.f32 	%f875, %f866, %f461;
	mul.f32 	%f462, %f853, %f433;
	fma.rn.f32 	%f463, %f856, %f435, %f462;
	fma.rn.f32 	%f868, %f858, %f437, %f463;
	mul.f32 	%f464, %f856, %f442;
	fma.rn.f32 	%f465, %f853, %f439, %f464;
	fma.rn.f32 	%f872, %f858, %f444, %f465;
	mul.f32 	%f466, %f856, %f448;
	fma.rn.f32 	%f467, %f853, %f446, %f466;
	fma.rn.f32 	%f876, %f858, %f452, %f467;
	mul.f32 	%f468, %f852, %f433;
	fma.rn.f32 	%f869, %f855, %f435, %f468;
	mul.f32 	%f469, %f855, %f442;
	fma.rn.f32 	%f873, %f852, %f439, %f469;
	mul.f32 	%f470, %f855, %f448;
	fma.rn.f32 	%f877, %f852, %f446, %f470;
	mul.f32 	%f870, %f851, %f433;
	mul.f32 	%f874, %f851, %f439;
	mul.f32 	%f878, %f851, %f446;

$L__BB6_15:
	mul.f32 	%f508, %f872, %f877;
	mul.f32 	%f509, %f873, %f876;
	sub.f32 	%f510, %f509, %f508;
	mul.f32 	%f511, %f870, %f510;
	mul.f32 	%f512, %f872, %f878;
	mul.f32 	%f513, %f874, %f876;
	sub.f32 	%f514, %f513, %f512;
	mul.f32 	%f515, %f869, %f514;
	sub.f32 	%f516, %f511, %f515;
	mul.f32 	%f517, %f873, %f878;
	mul.f32 	%f518, %f874, %f877;
	sub.f32 	%f519, %f518, %f517;
	fma.rn.f32 	%f520, %f868, %f519, %f516;
	rcp.rn.f32 	%f521, %f520;
	mul.f32 	%f882, %f510, %f521;
	mul.f32 	%f522, %f869, %f876;
	mul.f32 	%f523, %f868, %f877;
	sub.f32 	%f524, %f523, %f522;
	mul.f32 	%f881, %f524, %f521;
	mul.f32 	%f525, %f868, %f873;
	mul.f32 	%f526, %f869, %f872;
	sub.f32 	%f527, %f526, %f525;
	mul.f32 	%f880, %f527, %f521;
	sub.f32 	%f528, %f512, %f513;
	mul.f32 	%f886, %f528, %f521;
	mul.f32 	%f529, %f868, %f878;
	mul.f32 	%f530, %f870, %f876;
	sub.f32 	%f531, %f530, %f529;
	mul.f32 	%f885, %f531, %f521;
	mul.f32 	%f532, %f870, %f872;
	mul.f32 	%f533, %f868, %f874;
	sub.f32 	%f534, %f533, %f532;
	mul.f32 	%f884, %f534, %f521;
	mul.f32 	%f890, %f519, %f521;
	mul.f32 	%f535, %f870, %f877;
	mul.f32 	%f536, %f869, %f878;
	sub.f32 	%f537, %f536, %f535;
	mul.f32 	%f889, %f537, %f521;
	mul.f32 	%f538, %f869, %f874;
	mul.f32 	%f539, %f870, %f873;
	sub.f32 	%f540, %f539, %f538;
	mul.f32 	%f888, %f540, %f521;
	mul.f32 	%f541, %f867, %f882;
	neg.f32 	%f542, %f541;
	mul.f32 	%f543, %f871, %f881;
	sub.f32 	%f544, %f542, %f543;
	mul.f32 	%f545, %f875, %f880;
	sub.f32 	%f879, %f544, %f545;
	mul.f32 	%f546, %f867, %f886;
	neg.f32 	%f547, %f546;
	mul.f32 	%f548, %f871, %f885;
	sub.f32 	%f549, %f547, %f548;
	mul.f32 	%f550, %f875, %f884;
	sub.f32 	%f883, %f549, %f550;
	mul.f32 	%f551, %f867, %f890;
	neg.f32 	%f552, %f551;
	mul.f32 	%f553, %f871, %f889;
	sub.f32 	%f554, %f552, %f553;
	mul.f32 	%f555, %f875, %f888;
	sub.f32 	%f887, %f554, %f555;
	bra.uni 	$L__BB6_16;

$L__BB6_7:
	// begin inline asm
	call (%rd257), _optix_get_instance_inverse_transform_from_handle, (%rd18);
	// end inline asm

$L__BB6_8:
	// begin inline asm
	cvta.to.global.u64 %rd24, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r15,%r16,%r17,%r18}, [%rd24];
	// end inline asm
	mov.b32 	%f882, %r15;
	mov.b32 	%f881, %r16;
	mov.b32 	%f880, %r17;
	mov.b32 	%f879, %r18;
	add.s64 	%rd28, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd27, %rd28;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r19,%r20,%r21,%r22}, [%rd27];
	// end inline asm
	mov.b32 	%f886, %r19;
	mov.b32 	%f885, %r20;
	mov.b32 	%f884, %r21;
	mov.b32 	%f883, %r22;
	add.s64 	%rd31, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd30, %rd31;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r23,%r24,%r25,%r26}, [%rd30];
	// end inline asm
	mov.b32 	%f890, %r23;
	mov.b32 	%f889, %r24;
	mov.b32 	%f888, %r25;
	mov.b32 	%f887, %r26;

$L__BB6_16:
	setp.eq.s32 	%p9, %r329, 0;
	@%p9 bra 	$L__BB6_18;

	mul.f32 	%f556, %f847, %f882;
	fma.rn.f32 	%f557, %f843, %f881, %f556;
	fma.rn.f32 	%f151, %f839, %f880, %f557;
	mul.f32 	%f558, %f848, %f882;
	fma.rn.f32 	%f559, %f844, %f881, %f558;
	fma.rn.f32 	%f152, %f840, %f880, %f559;
	mul.f32 	%f560, %f849, %f882;
	fma.rn.f32 	%f561, %f845, %f881, %f560;
	fma.rn.f32 	%f153, %f841, %f880, %f561;
	mul.f32 	%f562, %f850, %f882;
	fma.rn.f32 	%f563, %f846, %f881, %f562;
	fma.rn.f32 	%f564, %f842, %f880, %f563;
	add.f32 	%f879, %f879, %f564;
	mul.f32 	%f565, %f847, %f886;
	fma.rn.f32 	%f566, %f843, %f885, %f565;
	fma.rn.f32 	%f155, %f839, %f884, %f566;
	mul.f32 	%f567, %f848, %f886;
	fma.rn.f32 	%f568, %f844, %f885, %f567;
	fma.rn.f32 	%f156, %f840, %f884, %f568;
	mul.f32 	%f569, %f849, %f886;
	fma.rn.f32 	%f570, %f845, %f885, %f569;
	fma.rn.f32 	%f157, %f841, %f884, %f570;
	mul.f32 	%f571, %f850, %f886;
	fma.rn.f32 	%f572, %f846, %f885, %f571;
	fma.rn.f32 	%f573, %f842, %f884, %f572;
	add.f32 	%f883, %f883, %f573;
	mul.f32 	%f574, %f847, %f890;
	fma.rn.f32 	%f575, %f843, %f889, %f574;
	fma.rn.f32 	%f159, %f839, %f888, %f575;
	mul.f32 	%f576, %f848, %f890;
	fma.rn.f32 	%f577, %f844, %f889, %f576;
	fma.rn.f32 	%f160, %f840, %f888, %f577;
	mul.f32 	%f578, %f849, %f890;
	fma.rn.f32 	%f579, %f845, %f889, %f578;
	fma.rn.f32 	%f161, %f841, %f888, %f579;
	mul.f32 	%f580, %f850, %f890;
	fma.rn.f32 	%f581, %f846, %f889, %f580;
	fma.rn.f32 	%f582, %f842, %f888, %f581;
	add.f32 	%f887, %f887, %f582;
	mov.f32 	%f880, %f153;
	mov.f32 	%f881, %f152;
	mov.f32 	%f882, %f151;
	mov.f32 	%f884, %f157;
	mov.f32 	%f885, %f156;
	mov.f32 	%f886, %f155;
	mov.f32 	%f888, %f161;
	mov.f32 	%f889, %f160;
	mov.f32 	%f890, %f159;

$L__BB6_18:
	add.s32 	%r329, %r329, 1;
	setp.lt.u32 	%p10, %r329, %r10;
	mov.f32 	%f839, %f890;
	mov.f32 	%f840, %f889;
	mov.f32 	%f841, %f888;
	mov.f32 	%f842, %f887;
	mov.f32 	%f843, %f886;
	mov.f32 	%f844, %f885;
	mov.f32 	%f845, %f884;
	mov.f32 	%f846, %f883;
	mov.f32 	%f847, %f882;
	mov.f32 	%f848, %f881;
	mov.f32 	%f849, %f880;
	mov.f32 	%f850, %f879;
	@%p10 bra 	$L__BB6_3;

$L__BB6_19:
	mul.f32 	%f583, %f915, %f882;
	fma.rn.f32 	%f584, %f916, %f881, %f583;
	fma.rn.f32 	%f585, %f917, %f880, %f584;
	mul.f32 	%f586, %f915, %f886;
	fma.rn.f32 	%f587, %f916, %f885, %f586;
	fma.rn.f32 	%f588, %f917, %f884, %f587;
	mul.f32 	%f589, %f915, %f890;
	fma.rn.f32 	%f590, %f916, %f889, %f589;
	fma.rn.f32 	%f591, %f917, %f888, %f590;
	add.f32 	%f917, %f887, %f591;
	add.f32 	%f916, %f883, %f588;
	add.f32 	%f915, %f879, %f585;

$L__BB6_21:
	// begin inline asm
	call (%f973), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f974), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f594), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r161), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p11, %r161, 0;
	@%p11 bra 	$L__BB6_41;

	// begin inline asm
	call (%r162), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f595), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p12, %r162, 0;
	@%p12 bra 	$L__BB6_40;

	mov.u32 	%r330, 0;

$L__BB6_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd137), _optix_get_transform_list_handle, (%r330);
	// end inline asm
	// begin inline asm
	call (%r165), _optix_get_transform_type_from_handle, (%rd137);
	// end inline asm
	or.b32  	%r166, %r165, 1;
	setp.eq.s32 	%p13, %r166, 3;
	@%p13 bra 	$L__BB6_30;
	bra.uni 	$L__BB6_25;

$L__BB6_30:
	setp.eq.s32 	%p16, %r165, 2;
	@%p16 bra 	$L__BB6_34;
	bra.uni 	$L__BB6_31;

$L__BB6_34:
	// begin inline asm
	call (%rd209), _optix_get_matrix_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd211, %rd209;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd211];
	// end inline asm
	add.s64 	%rd215, %rd209, 16;
	// begin inline asm
	cvta.to.global.u64 %rd214, %rd215;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd214];
	// end inline asm
	add.s64 	%rd218, %rd209, 32;
	// begin inline asm
	cvta.to.global.u64 %rd217, %rd218;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd217];
	// end inline asm
	add.s64 	%rd221, %rd209, 48;
	// begin inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd220];
	// end inline asm
	add.s64 	%rd224, %rd209, 64;
	// begin inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd223];
	// end inline asm
	add.s64 	%rd227, %rd209, 80;
	// begin inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd226];
	// end inline asm
	add.s64 	%rd230, %rd209, 96;
	// begin inline asm
	cvta.to.global.u64 %rd229, %rd230;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd229];
	// end inline asm
	add.s64 	%rd233, %rd209, 112;
	// begin inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd232];
	// end inline asm
	mov.b32 	%f699, %r257;
	mov.b32 	%f700, %r258;
	and.b32  	%r298, %r256, 65535;
	add.s32 	%r299, %r298, -1;
	cvt.rn.f32.s32 	%f701, %r299;
	sub.f32 	%f702, %f595, %f699;
	mul.f32 	%f703, %f702, %f701;
	sub.f32 	%f704, %f700, %f699;
	div.rn.f32 	%f705, %f703, %f704;
	min.f32 	%f706, %f701, %f705;
	mov.f32 	%f707, 0f00000000;
	max.f32 	%f708, %f707, %f706;
	cvt.rmi.f32.f32 	%f709, %f708;
	sub.f32 	%f258, %f708, %f709;
	cvt.rzi.s32.f32 	%r300, %f709;
	cvt.s64.s32 	%rd16, %r300;
	mul.wide.s32 	%rd244, %r300, 48;
	add.s64 	%rd236, %rd218, %rd244;
	// begin inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd235];
	// end inline asm
	mov.b32 	%f943, %r286;
	mov.b32 	%f944, %r287;
	mov.b32 	%f945, %r288;
	add.s64 	%rd239, %rd236, 16;
	// begin inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd238];
	// end inline asm
	mov.b32 	%f940, %r290;
	mov.b32 	%f941, %r291;
	mov.b32 	%f942, %r292;
	add.s64 	%rd242, %rd236, 32;
	// begin inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd241];
	// end inline asm
	mov.b32 	%f937, %r294;
	mov.b32 	%f938, %r295;
	mov.b32 	%f939, %r296;
	setp.leu.f32 	%p18, %f258, 0f00000000;
	@%p18 bra 	$L__BB6_36;

	mov.f32 	%f710, 0f3F800000;
	sub.f32 	%f711, %f710, %f258;
	mul.lo.s64 	%rd254, %rd16, 48;
	add.s64 	%rd255, %rd209, %rd254;
	add.s64 	%rd246, %rd255, 80;
	// begin inline asm
	cvta.to.global.u64 %rd245, %rd246;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd245];
	// end inline asm
	mov.b32 	%f712, %r301;
	mov.b32 	%f713, %r302;
	mov.b32 	%f714, %r303;
	mul.f32 	%f715, %f258, %f712;
	mul.f32 	%f716, %f258, %f713;
	mul.f32 	%f717, %f258, %f714;
	fma.rn.f32 	%f943, %f711, %f943, %f715;
	fma.rn.f32 	%f944, %f711, %f944, %f716;
	fma.rn.f32 	%f945, %f711, %f945, %f717;
	add.s64 	%rd249, %rd255, 96;
	// begin inline asm
	cvta.to.global.u64 %rd248, %rd249;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd248];
	// end inline asm
	mov.b32 	%f718, %r305;
	mov.b32 	%f719, %r306;
	mov.b32 	%f720, %r307;
	mul.f32 	%f721, %f258, %f718;
	mul.f32 	%f722, %f258, %f719;
	mul.f32 	%f723, %f258, %f720;
	fma.rn.f32 	%f940, %f711, %f940, %f721;
	fma.rn.f32 	%f941, %f711, %f941, %f722;
	fma.rn.f32 	%f942, %f711, %f942, %f723;
	add.s64 	%rd252, %rd255, 112;
	// begin inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd251];
	// end inline asm
	mov.b32 	%f724, %r309;
	mov.b32 	%f725, %r310;
	mov.b32 	%f726, %r311;
	mul.f32 	%f727, %f258, %f724;
	mul.f32 	%f728, %f258, %f725;
	mul.f32 	%f729, %f258, %f726;
	fma.rn.f32 	%f937, %f711, %f937, %f727;
	fma.rn.f32 	%f938, %f711, %f938, %f728;
	fma.rn.f32 	%f939, %f711, %f939, %f729;
	bra.uni 	$L__BB6_36;

$L__BB6_25:
	mov.f32 	%f946, 0f00000000;
	mov.f32 	%f948, 0f3F800000;
	setp.eq.s32 	%p14, %r165, 4;
	@%p14 bra 	$L__BB6_28;

	setp.ne.s32 	%p15, %r165, 1;
	mov.f32 	%f947, %f946;
	mov.f32 	%f949, %f946;
	mov.f32 	%f950, %f948;
	mov.f32 	%f951, %f946;
	mov.f32 	%f952, %f948;
	mov.f32 	%f953, %f946;
	mov.f32 	%f954, %f946;
	@%p15 bra 	$L__BB6_37;

	// begin inline asm
	call (%rd139), _optix_get_static_transform_from_handle, (%rd137);
	// end inline asm
	add.s64 	%rd258, %rd139, 64;
	bra.uni 	$L__BB6_29;

$L__BB6_31:
	// begin inline asm
	call (%rd152), _optix_get_srt_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd154, %rd152;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd154];
	// end inline asm
	add.s64 	%rd158, %rd152, 16;
	// begin inline asm
	cvta.to.global.u64 %rd157, %rd158;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd157];
	// end inline asm
	add.s64 	%rd161, %rd152, 32;
	// begin inline asm
	cvta.to.global.u64 %rd160, %rd161;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd160];
	// end inline asm
	add.s64 	%rd164, %rd152, 48;
	// begin inline asm
	cvta.to.global.u64 %rd163, %rd164;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd163];
	// end inline asm
	add.s64 	%rd167, %rd152, 64;
	// begin inline asm
	cvta.to.global.u64 %rd166, %rd167;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd166];
	// end inline asm
	add.s64 	%rd170, %rd152, 80;
	// begin inline asm
	cvta.to.global.u64 %rd169, %rd170;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd169];
	// end inline asm
	add.s64 	%rd173, %rd152, 96;
	// begin inline asm
	cvta.to.global.u64 %rd172, %rd173;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd172];
	// end inline asm
	add.s64 	%rd176, %rd152, 112;
	// begin inline asm
	cvta.to.global.u64 %rd175, %rd176;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd175];
	// end inline asm
	add.s64 	%rd179, %rd152, 128;
	// begin inline asm
	cvta.to.global.u64 %rd178, %rd179;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd178];
	// end inline asm
	add.s64 	%rd182, %rd152, 144;
	// begin inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd181];
	// end inline asm
	mov.b32 	%f607, %r182;
	mov.b32 	%f608, %r183;
	and.b32  	%r235, %r181, 65535;
	add.s32 	%r236, %r235, -1;
	cvt.rn.f32.s32 	%f609, %r236;
	sub.f32 	%f610, %f595, %f607;
	mul.f32 	%f611, %f610, %f609;
	sub.f32 	%f612, %f608, %f607;
	div.rn.f32 	%f613, %f611, %f612;
	min.f32 	%f614, %f609, %f613;
	mov.f32 	%f615, 0f00000000;
	max.f32 	%f616, %f615, %f614;
	cvt.rmi.f32.f32 	%f617, %f616;
	sub.f32 	%f218, %f616, %f617;
	cvt.rzi.s32.f32 	%r237, %f617;
	mul.wide.s32 	%rd196, %r237, 64;
	add.s64 	%rd185, %rd161, %rd196;
	// begin inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd184];
	// end inline asm
	mov.b32 	%f927, %r219;
	mov.b32 	%f928, %r220;
	mov.b32 	%f929, %r221;
	add.s64 	%rd188, %rd185, 16;
	// begin inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd187];
	// end inline asm
	mov.b32 	%f930, %r223;
	mov.b32 	%f931, %r224;
	mov.b32 	%f932, %r226;
	add.s64 	%rd191, %rd185, 32;
	// begin inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd190];
	// end inline asm
	mov.b32 	%f933, %r228;
	mov.b32 	%f934, %r229;
	mov.b32 	%f935, %r230;
	add.s64 	%rd194, %rd185, 48;
	// begin inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd193];
	// end inline asm
	mov.b32 	%f936, %r231;
	setp.leu.f32 	%p17, %f218, 0f00000000;
	@%p17 bra 	$L__BB6_33;

	mov.f32 	%f618, 0f3F800000;
	sub.f32 	%f619, %f618, %f218;
	add.s64 	%rd198, %rd185, 64;
	// begin inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd197];
	// end inline asm
	mov.b32 	%f620, %r238;
	mov.b32 	%f621, %r239;
	mov.b32 	%f622, %r240;
	mul.f32 	%f623, %f218, %f620;
	mul.f32 	%f624, %f218, %f621;
	mul.f32 	%f625, %f218, %f622;
	fma.rn.f32 	%f927, %f619, %f927, %f623;
	fma.rn.f32 	%f928, %f619, %f928, %f624;
	fma.rn.f32 	%f929, %f619, %f929, %f625;
	add.s64 	%rd201, %rd185, 80;
	// begin inline asm
	cvta.to.global.u64 %rd200, %rd201;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd200];
	// end inline asm
	mov.b32 	%f626, %r242;
	mov.b32 	%f627, %r243;
	mov.b32 	%f628, %r245;
	mul.f32 	%f629, %f218, %f626;
	mul.f32 	%f630, %f218, %f627;
	mul.f32 	%f631, %f218, %f628;
	fma.rn.f32 	%f930, %f619, %f930, %f629;
	fma.rn.f32 	%f931, %f619, %f931, %f630;
	fma.rn.f32 	%f932, %f619, %f932, %f631;
	add.s64 	%rd204, %rd185, 96;
	// begin inline asm
	cvta.to.global.u64 %rd203, %rd204;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd203];
	// end inline asm
	mov.b32 	%f632, %r247;
	mov.b32 	%f633, %r248;
	mov.b32 	%f634, %r249;
	mul.f32 	%f635, %f218, %f632;
	mul.f32 	%f636, %f218, %f633;
	mul.f32 	%f637, %f218, %f634;
	fma.rn.f32 	%f638, %f619, %f933, %f635;
	fma.rn.f32 	%f639, %f619, %f934, %f636;
	fma.rn.f32 	%f640, %f619, %f935, %f637;
	add.s64 	%rd207, %rd185, 112;
	// begin inline asm
	cvta.to.global.u64 %rd206, %rd207;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd206];
	// end inline asm
	mov.b32 	%f641, %r250;
	mul.f32 	%f642, %f218, %f641;
	fma.rn.f32 	%f643, %f619, %f936, %f642;
	mul.f32 	%f644, %f639, %f639;
	fma.rn.f32 	%f645, %f638, %f638, %f644;
	fma.rn.f32 	%f646, %f640, %f640, %f645;
	fma.rn.f32 	%f647, %f643, %f643, %f646;
	sqrt.rn.f32 	%f648, %f647;
	rcp.rn.f32 	%f649, %f648;
	mul.f32 	%f933, %f638, %f649;
	mul.f32 	%f934, %f639, %f649;
	mul.f32 	%f935, %f640, %f649;
	mul.f32 	%f936, %f649, %f643;

$L__BB6_33:
	mul.f32 	%f650, %f934, %f934;
	fma.rn.f32 	%f651, %f933, %f933, %f650;
	fma.rn.f32 	%f652, %f935, %f935, %f651;
	fma.rn.f32 	%f653, %f936, %f936, %f652;
	rcp.rn.f32 	%f654, %f653;
	mul.f32 	%f655, %f933, %f654;
	mul.f32 	%f656, %f934, %f654;
	mul.f32 	%f657, %f935, %f654;
	mul.f32 	%f658, %f936, %f654;
	mul.f32 	%f659, %f933, %f655;
	mul.f32 	%f660, %f934, %f656;
	mul.f32 	%f661, %f935, %f657;
	mul.f32 	%f662, %f933, %f656;
	mul.f32 	%f663, %f935, %f658;
	mul.f32 	%f664, %f933, %f657;
	mul.f32 	%f665, %f934, %f658;
	mul.f32 	%f666, %f934, %f657;
	mul.f32 	%f667, %f933, %f658;
	sub.f32 	%f668, %f659, %f660;
	sub.f32 	%f669, %f668, %f661;
	fma.rn.f32 	%f670, %f936, %f658, %f669;
	sub.f32 	%f671, %f662, %f663;
	add.f32 	%f672, %f671, %f671;
	add.f32 	%f673, %f664, %f665;
	add.f32 	%f674, %f673, %f673;
	add.f32 	%f675, %f662, %f663;
	add.f32 	%f676, %f675, %f675;
	sub.f32 	%f677, %f660, %f659;
	sub.f32 	%f678, %f677, %f661;
	fma.rn.f32 	%f679, %f936, %f658, %f678;
	sub.f32 	%f680, %f666, %f667;
	add.f32 	%f681, %f680, %f680;
	sub.f32 	%f682, %f664, %f665;
	add.f32 	%f683, %f682, %f682;
	add.f32 	%f684, %f666, %f667;
	add.f32 	%f685, %f684, %f684;
	neg.f32 	%f686, %f659;
	sub.f32 	%f687, %f686, %f660;
	add.f32 	%f688, %f661, %f687;
	fma.rn.f32 	%f689, %f936, %f658, %f688;
	mul.f32 	%f690, %f929, %f670;
	fma.rn.f32 	%f691, %f931, %f672, %f690;
	fma.rn.f32 	%f945, %f932, %f674, %f691;
	mul.f32 	%f692, %f931, %f679;
	fma.rn.f32 	%f693, %f929, %f676, %f692;
	fma.rn.f32 	%f942, %f932, %f681, %f693;
	mul.f32 	%f694, %f931, %f685;
	fma.rn.f32 	%f695, %f929, %f683, %f694;
	fma.rn.f32 	%f939, %f932, %f689, %f695;
	mul.f32 	%f696, %f928, %f670;
	fma.rn.f32 	%f944, %f930, %f672, %f696;
	mul.f32 	%f697, %f930, %f679;
	fma.rn.f32 	%f941, %f928, %f676, %f697;
	mul.f32 	%f698, %f930, %f685;
	fma.rn.f32 	%f938, %f928, %f683, %f698;
	mul.f32 	%f943, %f927, %f670;
	mul.f32 	%f940, %f927, %f676;
	mul.f32 	%f937, %f927, %f683;

$L__BB6_36:
	mul.f32 	%f730, %f938, %f942;
	mul.f32 	%f731, %f939, %f941;
	sub.f32 	%f732, %f731, %f730;
	mul.f32 	%f733, %f943, %f732;
	mul.f32 	%f734, %f937, %f942;
	mul.f32 	%f735, %f939, %f940;
	sub.f32 	%f736, %f735, %f734;
	mul.f32 	%f737, %f736, %f944;
	sub.f32 	%f738, %f733, %f737;
	mul.f32 	%f739, %f937, %f941;
	mul.f32 	%f740, %f938, %f940;
	sub.f32 	%f741, %f740, %f739;
	fma.rn.f32 	%f742, %f741, %f945, %f738;
	rcp.rn.f32 	%f743, %f742;
	mul.f32 	%f952, %f732, %f743;
	mul.f32 	%f744, %f939, %f944;
	mul.f32 	%f745, %f938, %f945;
	sub.f32 	%f746, %f745, %f744;
	mul.f32 	%f953, %f746, %f743;
	mul.f32 	%f747, %f941, %f945;
	mul.f32 	%f748, %f942, %f944;
	sub.f32 	%f749, %f748, %f747;
	mul.f32 	%f954, %f749, %f743;
	sub.f32 	%f750, %f734, %f735;
	mul.f32 	%f949, %f750, %f743;
	mul.f32 	%f751, %f937, %f945;
	mul.f32 	%f752, %f939, %f943;
	sub.f32 	%f753, %f752, %f751;
	mul.f32 	%f950, %f753, %f743;
	mul.f32 	%f754, %f942, %f943;
	mul.f32 	%f755, %f940, %f945;
	sub.f32 	%f756, %f755, %f754;
	mul.f32 	%f951, %f756, %f743;
	mul.f32 	%f946, %f741, %f743;
	mul.f32 	%f757, %f938, %f943;
	mul.f32 	%f758, %f937, %f944;
	sub.f32 	%f759, %f758, %f757;
	mul.f32 	%f947, %f759, %f743;
	mul.f32 	%f760, %f940, %f944;
	mul.f32 	%f761, %f941, %f943;
	sub.f32 	%f762, %f761, %f760;
	mul.f32 	%f948, %f762, %f743;
	bra.uni 	$L__BB6_37;

$L__BB6_28:
	// begin inline asm
	call (%rd258), _optix_get_instance_inverse_transform_from_handle, (%rd137);
	// end inline asm

$L__BB6_29:
	// begin inline asm
	cvta.to.global.u64 %rd143, %rd258;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd143];
	// end inline asm
	mov.b32 	%f952, %r167;
	mov.b32 	%f953, %r168;
	mov.b32 	%f954, %r169;
	add.s64 	%rd147, %rd258, 16;
	// begin inline asm
	cvta.to.global.u64 %rd146, %rd147;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd146];
	// end inline asm
	mov.b32 	%f949, %r171;
	mov.b32 	%f950, %r172;
	mov.b32 	%f951, %r173;
	add.s64 	%rd150, %rd258, 32;
	// begin inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd149];
	// end inline asm
	mov.b32 	%f946, %r175;
	mov.b32 	%f947, %r176;
	mov.b32 	%f948, %r177;

$L__BB6_37:
	setp.eq.s32 	%p19, %r330, 0;
	@%p19 bra 	$L__BB6_39;

	mul.f32 	%f763, %f923, %f953;
	fma.rn.f32 	%f764, %f920, %f952, %f763;
	fma.rn.f32 	%f304, %f926, %f954, %f764;
	mul.f32 	%f765, %f922, %f953;
	fma.rn.f32 	%f766, %f919, %f952, %f765;
	fma.rn.f32 	%f305, %f925, %f954, %f766;
	mul.f32 	%f767, %f921, %f953;
	fma.rn.f32 	%f768, %f918, %f952, %f767;
	fma.rn.f32 	%f954, %f924, %f954, %f768;
	mul.f32 	%f769, %f923, %f950;
	fma.rn.f32 	%f770, %f920, %f949, %f769;
	fma.rn.f32 	%f307, %f926, %f951, %f770;
	mul.f32 	%f771, %f922, %f950;
	fma.rn.f32 	%f772, %f919, %f949, %f771;
	fma.rn.f32 	%f308, %f925, %f951, %f772;
	mul.f32 	%f773, %f921, %f950;
	fma.rn.f32 	%f774, %f918, %f949, %f773;
	fma.rn.f32 	%f951, %f924, %f951, %f774;
	mul.f32 	%f775, %f923, %f947;
	fma.rn.f32 	%f776, %f920, %f946, %f775;
	fma.rn.f32 	%f310, %f926, %f948, %f776;
	mul.f32 	%f777, %f922, %f947;
	fma.rn.f32 	%f778, %f919, %f946, %f777;
	fma.rn.f32 	%f311, %f925, %f948, %f778;
	mul.f32 	%f779, %f921, %f947;
	fma.rn.f32 	%f780, %f918, %f946, %f779;
	fma.rn.f32 	%f948, %f924, %f948, %f780;
	mov.f32 	%f946, %f310;
	mov.f32 	%f947, %f311;
	mov.f32 	%f949, %f307;
	mov.f32 	%f950, %f308;
	mov.f32 	%f952, %f304;
	mov.f32 	%f953, %f305;

$L__BB6_39:
	add.s32 	%r330, %r330, 1;
	setp.lt.u32 	%p20, %r330, %r162;
	mov.f32 	%f918, %f954;
	mov.f32 	%f919, %f953;
	mov.f32 	%f920, %f952;
	mov.f32 	%f921, %f951;
	mov.f32 	%f922, %f950;
	mov.f32 	%f923, %f949;
	mov.f32 	%f924, %f948;
	mov.f32 	%f925, %f947;
	mov.f32 	%f926, %f946;
	@%p20 bra 	$L__BB6_24;

$L__BB6_40:
	mul.f32 	%f781, %f974, %f953;
	fma.rn.f32 	%f782, %f973, %f952, %f781;
	mul.f32 	%f783, %f974, %f950;
	fma.rn.f32 	%f784, %f973, %f949, %f783;
	mul.f32 	%f785, %f974, %f947;
	fma.rn.f32 	%f786, %f973, %f946, %f785;
	fma.rn.f32 	%f975, %f594, %f948, %f786;
	fma.rn.f32 	%f974, %f594, %f951, %f784;
	fma.rn.f32 	%f973, %f594, %f954, %f782;
	bra.uni 	$L__BB6_42;

$L__BB6_41:
	mov.f32 	%f975, %f594;

$L__BB6_42:
	// begin inline asm
	call (%f787), _optix_get_ray_tmin, ();
	// end inline asm
	fma.rn.f32 	%f790, %f973, %f787, %f915;
	fma.rn.f32 	%f791, %f974, %f787, %f916;
	fma.rn.f32 	%f792, %f975, %f787, %f917;
	ld.v4.f32 	{%f793, %f794, %f795, %f796}, [%rd2+80];
	mov.u32 	%r320, 0;
	mov.u32 	%r315, 1;
	mov.u32 	%r317, 2;
	ld.f32 	%f800, [%rd2+32];
	fma.rn.f32 	%f801, %f790, %f800, %f793;
	ld.f32 	%f802, [%rd2+36];
	fma.rn.f32 	%f803, %f790, %f802, %f794;
	ld.f32 	%f804, [%rd2+40];
	fma.rn.f32 	%f805, %f790, %f804, %f795;
	ld.f32 	%f806, [%rd2+48];
	fma.rn.f32 	%f807, %f791, %f806, %f801;
	ld.f32 	%f808, [%rd2+52];
	fma.rn.f32 	%f809, %f791, %f808, %f803;
	ld.f32 	%f810, [%rd2+56];
	fma.rn.f32 	%f811, %f791, %f810, %f805;
	ld.f32 	%f812, [%rd2+64];
	fma.rn.f32 	%f813, %f792, %f812, %f807;
	ld.f32 	%f814, [%rd2+68];
	fma.rn.f32 	%f815, %f792, %f814, %f809;
	ld.f32 	%f816, [%rd2+72];
	fma.rn.f32 	%f817, %f792, %f816, %f811;
	ld.v4.f32 	{%f818, %f819, %f820, %f821}, [%rd2+32];
	mul.f32 	%f825, %f973, %f818;
	mul.f32 	%f826, %f973, %f819;
	mul.f32 	%f827, %f973, %f820;
	fma.rn.f32 	%f828, %f974, %f806, %f825;
	fma.rn.f32 	%f829, %f974, %f808, %f826;
	fma.rn.f32 	%f830, %f974, %f810, %f827;
	fma.rn.f32 	%f831, %f975, %f812, %f828;
	fma.rn.f32 	%f832, %f975, %f814, %f829;
	fma.rn.f32 	%f833, %f975, %f816, %f830;
	neg.f32 	%f834, %f817;
	div.rn.f32 	%f835, %f834, %f833;
	fma.rn.f32 	%f836, %f835, %f831, %f813;
	fma.rn.f32 	%f837, %f835, %f832, %f815;
	ld.u32 	%r322, [%rd17];
	mov.b32 	%r314, %f835;
	// begin inline asm
	call _optix_set_payload, (%r320, %r314);
	// end inline asm
	mov.b32 	%r316, %f836;
	// begin inline asm
	call _optix_set_payload, (%r315, %r316);
	// end inline asm
	mov.b32 	%r318, %f837;
	// begin inline asm
	call _optix_set_payload, (%r317, %r318);
	// end inline asm
	mov.u32 	%r319, 3;
	// begin inline asm
	call _optix_set_payload, (%r319, %r320);
	// end inline asm
	mov.u32 	%r321, 4;
	// begin inline asm
	call _optix_set_payload, (%r321, %r322);
	// end inline asm
	mov.u32 	%r324, 5;
	// begin inline asm
	call (%r323), _optix_get_payload, (%r324);
	// end inline asm
	setp.eq.s32 	%p21, %r323, 0;
	@%p21 bra 	$L__BB6_44;

	// begin inline asm
	call (%r325), _optix_read_instance_id, ();
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r324, %r325);
	// end inline asm

$L__BB6_44:
	ret;

}
	// .globl	__intersection__sdfgrid
.visible .entry __intersection__sdfgrid()
{
	.reg .pred 	%p<110>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<1247>;
	.reg .b32 	%r<355>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<355>;


	// begin inline asm
	call (%rd35), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd35+8];
	ld.u64 	%rd36, [%rd1];
	// begin inline asm
	call (%r11), _optix_read_primitive_idx, ();
	// end inline asm
	mul.wide.u32 	%rd37, %r11, 8;
	add.s64 	%rd38, %rd36, %rd37;
	ld.u64 	%rd2, [%rd38];
	// begin inline asm
	call (%f1163), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f1164), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f1165), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r12), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p5, %r12, 0;
	@%p5 bra 	$L__BB7_20;

	// begin inline asm
	call (%r13), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f417), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p6, %r13, 0;
	@%p6 bra 	$L__BB7_19;

	mov.u32 	%r352, 0;

$L__BB7_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd39), _optix_get_transform_list_handle, (%r352);
	// end inline asm
	// begin inline asm
	call (%r16), _optix_get_transform_type_from_handle, (%rd39);
	// end inline asm
	or.b32  	%r17, %r16, 1;
	setp.eq.s32 	%p7, %r17, 3;
	@%p7 bra 	$L__BB7_9;
	bra.uni 	$L__BB7_4;

$L__BB7_9:
	setp.eq.s32 	%p10, %r16, 2;
	@%p10 bra 	$L__BB7_13;
	bra.uni 	$L__BB7_10;

$L__BB7_13:
	// begin inline asm
	call (%rd111), _optix_get_matrix_motion_transform_from_handle, (%rd39);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd113, %rd111;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r105,%r106,%r107,%r108}, [%rd113];
	// end inline asm
	add.s64 	%rd117, %rd111, 16;
	// begin inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r109,%r110,%r111,%r112}, [%rd116];
	// end inline asm
	add.s64 	%rd120, %rd111, 32;
	// begin inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r113,%r114,%r115,%r116}, [%rd119];
	// end inline asm
	add.s64 	%rd123, %rd111, 48;
	// begin inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r117,%r118,%r119,%r120}, [%rd122];
	// end inline asm
	add.s64 	%rd126, %rd111, 64;
	// begin inline asm
	cvta.to.global.u64 %rd125, %rd126;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r121,%r122,%r123,%r124}, [%rd125];
	// end inline asm
	add.s64 	%rd129, %rd111, 80;
	// begin inline asm
	cvta.to.global.u64 %rd128, %rd129;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r125,%r126,%r127,%r128}, [%rd128];
	// end inline asm
	add.s64 	%rd132, %rd111, 96;
	// begin inline asm
	cvta.to.global.u64 %rd131, %rd132;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r129,%r130,%r131,%r132}, [%rd131];
	// end inline asm
	add.s64 	%rd135, %rd111, 112;
	// begin inline asm
	cvta.to.global.u64 %rd134, %rd135;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r133,%r134,%r135,%r136}, [%rd134];
	// end inline asm
	mov.b32 	%f545, %r108;
	mov.b32 	%f546, %r109;
	and.b32  	%r149, %r107, 65535;
	add.s32 	%r150, %r149, -1;
	cvt.rn.f32.s32 	%f547, %r150;
	sub.f32 	%f548, %f417, %f545;
	mul.f32 	%f549, %f548, %f547;
	sub.f32 	%f550, %f546, %f545;
	div.rn.f32 	%f551, %f549, %f550;
	min.f32 	%f552, %f547, %f551;
	mov.f32 	%f553, 0f00000000;
	max.f32 	%f554, %f553, %f552;
	cvt.rmi.f32.f32 	%f555, %f554;
	sub.f32 	%f90, %f554, %f555;
	cvt.rzi.s32.f32 	%r151, %f555;
	mul.wide.s32 	%rd146, %r151, 48;
	add.s64 	%rd138, %rd120, %rd146;
	// begin inline asm
	cvta.to.global.u64 %rd137, %rd138;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r137,%r138,%r139,%r140}, [%rd137];
	// end inline asm
	mov.b32 	%f1123, %r137;
	mov.b32 	%f1124, %r138;
	mov.b32 	%f1125, %r139;
	mov.b32 	%f1126, %r140;
	add.s64 	%rd141, %rd138, 16;
	// begin inline asm
	cvta.to.global.u64 %rd140, %rd141;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r141,%r142,%r143,%r144}, [%rd140];
	// end inline asm
	mov.b32 	%f1119, %r141;
	mov.b32 	%f1120, %r142;
	mov.b32 	%f1121, %r143;
	mov.b32 	%f1122, %r144;
	add.s64 	%rd144, %rd138, 32;
	// begin inline asm
	cvta.to.global.u64 %rd143, %rd144;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r145,%r146,%r147,%r148}, [%rd143];
	// end inline asm
	mov.b32 	%f1115, %r145;
	mov.b32 	%f1116, %r146;
	mov.b32 	%f1117, %r147;
	mov.b32 	%f1118, %r148;
	setp.leu.f32 	%p12, %f90, 0f00000000;
	@%p12 bra 	$L__BB7_15;

	cvt.rmi.f32.f32 	%f1086, %f554;
	cvt.rzi.s32.f32 	%r351, %f1086;
	cvt.s64.s32 	%rd348, %r351;
	mov.f32 	%f556, 0f3F800000;
	sub.f32 	%f557, %f556, %f90;
	mul.lo.s64 	%rd156, %rd348, 48;
	add.s64 	%rd157, %rd111, %rd156;
	add.s64 	%rd148, %rd157, 80;
	// begin inline asm
	cvta.to.global.u64 %rd147, %rd148;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r152,%r153,%r154,%r155}, [%rd147];
	// end inline asm
	mov.b32 	%f558, %r152;
	mov.b32 	%f559, %r153;
	mov.b32 	%f560, %r154;
	mov.b32 	%f561, %r155;
	mul.f32 	%f562, %f90, %f558;
	mul.f32 	%f563, %f90, %f559;
	mul.f32 	%f564, %f90, %f560;
	mul.f32 	%f565, %f90, %f561;
	fma.rn.f32 	%f1123, %f557, %f1123, %f562;
	fma.rn.f32 	%f1124, %f557, %f1124, %f563;
	fma.rn.f32 	%f1125, %f557, %f1125, %f564;
	fma.rn.f32 	%f1126, %f557, %f1126, %f565;
	add.s64 	%rd151, %rd157, 96;
	// begin inline asm
	cvta.to.global.u64 %rd150, %rd151;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r156,%r157,%r158,%r159}, [%rd150];
	// end inline asm
	mov.b32 	%f566, %r156;
	mov.b32 	%f567, %r157;
	mov.b32 	%f568, %r158;
	mov.b32 	%f569, %r159;
	mul.f32 	%f570, %f90, %f566;
	mul.f32 	%f571, %f90, %f567;
	mul.f32 	%f572, %f90, %f568;
	mul.f32 	%f573, %f90, %f569;
	fma.rn.f32 	%f1119, %f557, %f1119, %f570;
	fma.rn.f32 	%f1120, %f557, %f1120, %f571;
	fma.rn.f32 	%f1121, %f557, %f1121, %f572;
	fma.rn.f32 	%f1122, %f557, %f1122, %f573;
	add.s64 	%rd154, %rd157, 112;
	// begin inline asm
	cvta.to.global.u64 %rd153, %rd154;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r160,%r161,%r162,%r163}, [%rd153];
	// end inline asm
	mov.b32 	%f574, %r160;
	mov.b32 	%f575, %r161;
	mov.b32 	%f576, %r162;
	mov.b32 	%f577, %r163;
	mul.f32 	%f578, %f90, %f574;
	mul.f32 	%f579, %f90, %f575;
	mul.f32 	%f580, %f90, %f576;
	mul.f32 	%f581, %f90, %f577;
	fma.rn.f32 	%f1115, %f557, %f1115, %f578;
	fma.rn.f32 	%f1116, %f557, %f1116, %f579;
	fma.rn.f32 	%f1117, %f557, %f1117, %f580;
	fma.rn.f32 	%f1118, %f557, %f1118, %f581;
	bra.uni 	$L__BB7_15;

$L__BB7_4:
	mov.f32 	%f1127, 0f00000000;
	mov.f32 	%f1129, 0f3F800000;
	setp.eq.s32 	%p8, %r16, 4;
	@%p8 bra 	$L__BB7_7;

	setp.ne.s32 	%p9, %r16, 1;
	mov.f32 	%f1128, %f1127;
	mov.f32 	%f1130, %f1127;
	mov.f32 	%f1131, %f1127;
	mov.f32 	%f1132, %f1129;
	mov.f32 	%f1133, %f1127;
	mov.f32 	%f1134, %f1127;
	mov.f32 	%f1135, %f1129;
	mov.f32 	%f1136, %f1127;
	mov.f32 	%f1137, %f1127;
	mov.f32 	%f1138, %f1127;
	@%p9 bra 	$L__BB7_16;

	// begin inline asm
	call (%rd41), _optix_get_static_transform_from_handle, (%rd39);
	// end inline asm
	add.s64 	%rd349, %rd41, 64;
	bra.uni 	$L__BB7_8;

$L__BB7_10:
	// begin inline asm
	call (%rd54), _optix_get_srt_motion_transform_from_handle, (%rd39);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd56, %rd54;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r30,%r31,%r32,%r33}, [%rd56];
	// end inline asm
	add.s64 	%rd60, %rd54, 16;
	// begin inline asm
	cvta.to.global.u64 %rd59, %rd60;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r34,%r35,%r36,%r37}, [%rd59];
	// end inline asm
	add.s64 	%rd63, %rd54, 32;
	// begin inline asm
	cvta.to.global.u64 %rd62, %rd63;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r38,%r39,%r40,%r41}, [%rd62];
	// end inline asm
	add.s64 	%rd66, %rd54, 48;
	// begin inline asm
	cvta.to.global.u64 %rd65, %rd66;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r42,%r43,%r44,%r45}, [%rd65];
	// end inline asm
	add.s64 	%rd69, %rd54, 64;
	// begin inline asm
	cvta.to.global.u64 %rd68, %rd69;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r46,%r47,%r48,%r49}, [%rd68];
	// end inline asm
	add.s64 	%rd72, %rd54, 80;
	// begin inline asm
	cvta.to.global.u64 %rd71, %rd72;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r50,%r51,%r52,%r53}, [%rd71];
	// end inline asm
	add.s64 	%rd75, %rd54, 96;
	// begin inline asm
	cvta.to.global.u64 %rd74, %rd75;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r54,%r55,%r56,%r57}, [%rd74];
	// end inline asm
	add.s64 	%rd78, %rd54, 112;
	// begin inline asm
	cvta.to.global.u64 %rd77, %rd78;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r58,%r59,%r60,%r61}, [%rd77];
	// end inline asm
	add.s64 	%rd81, %rd54, 128;
	// begin inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r62,%r63,%r64,%r65}, [%rd80];
	// end inline asm
	add.s64 	%rd84, %rd54, 144;
	// begin inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r66,%r67,%r68,%r69}, [%rd83];
	// end inline asm
	mov.b32 	%f432, %r33;
	mov.b32 	%f433, %r34;
	and.b32  	%r86, %r32, 65535;
	add.s32 	%r87, %r86, -1;
	cvt.rn.f32.s32 	%f434, %r87;
	sub.f32 	%f435, %f417, %f432;
	mul.f32 	%f436, %f435, %f434;
	sub.f32 	%f437, %f433, %f432;
	div.rn.f32 	%f438, %f436, %f437;
	min.f32 	%f439, %f434, %f438;
	mov.f32 	%f440, 0f00000000;
	max.f32 	%f441, %f440, %f439;
	cvt.rmi.f32.f32 	%f442, %f441;
	sub.f32 	%f29, %f441, %f442;
	cvt.rzi.s32.f32 	%r88, %f442;
	mul.wide.s32 	%rd98, %r88, 64;
	add.s64 	%rd87, %rd63, %rd98;
	// begin inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r70,%r71,%r72,%r73}, [%rd86];
	// end inline asm
	mov.b32 	%f1099, %r70;
	mov.b32 	%f1100, %r71;
	mov.b32 	%f1101, %r72;
	mov.b32 	%f1102, %r73;
	add.s64 	%rd90, %rd87, 16;
	// begin inline asm
	cvta.to.global.u64 %rd89, %rd90;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r74,%r75,%r76,%r77}, [%rd89];
	// end inline asm
	mov.b32 	%f1103, %r74;
	mov.b32 	%f1104, %r75;
	mov.b32 	%f1105, %r76;
	mov.b32 	%f1106, %r77;
	add.s64 	%rd93, %rd87, 32;
	// begin inline asm
	cvta.to.global.u64 %rd92, %rd93;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r78,%r79,%r80,%r81}, [%rd92];
	// end inline asm
	mov.b32 	%f1107, %r78;
	mov.b32 	%f1108, %r79;
	mov.b32 	%f1109, %r80;
	mov.b32 	%f1110, %r81;
	add.s64 	%rd96, %rd87, 48;
	// begin inline asm
	cvta.to.global.u64 %rd95, %rd96;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r82,%r83,%r84,%r85}, [%rd95];
	// end inline asm
	mov.b32 	%f1111, %r82;
	mov.b32 	%f1112, %r83;
	mov.b32 	%f1113, %r84;
	mov.b32 	%f1114, %r85;
	setp.leu.f32 	%p11, %f29, 0f00000000;
	@%p11 bra 	$L__BB7_12;

	mov.f32 	%f443, 0f3F800000;
	sub.f32 	%f444, %f443, %f29;
	add.s64 	%rd100, %rd87, 64;
	// begin inline asm
	cvta.to.global.u64 %rd99, %rd100;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r89,%r90,%r91,%r92}, [%rd99];
	// end inline asm
	mov.b32 	%f445, %r89;
	mov.b32 	%f446, %r90;
	mov.b32 	%f447, %r91;
	mov.b32 	%f448, %r92;
	mul.f32 	%f449, %f29, %f445;
	mul.f32 	%f450, %f29, %f446;
	mul.f32 	%f451, %f29, %f447;
	mul.f32 	%f452, %f29, %f448;
	fma.rn.f32 	%f1099, %f444, %f1099, %f449;
	fma.rn.f32 	%f1100, %f444, %f1100, %f450;
	fma.rn.f32 	%f1101, %f444, %f1101, %f451;
	fma.rn.f32 	%f1102, %f444, %f1102, %f452;
	add.s64 	%rd103, %rd87, 80;
	// begin inline asm
	cvta.to.global.u64 %rd102, %rd103;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r93,%r94,%r95,%r96}, [%rd102];
	// end inline asm
	mov.b32 	%f453, %r93;
	mov.b32 	%f454, %r94;
	mov.b32 	%f455, %r95;
	mov.b32 	%f456, %r96;
	mul.f32 	%f457, %f29, %f453;
	mul.f32 	%f458, %f29, %f454;
	mul.f32 	%f459, %f29, %f455;
	mul.f32 	%f460, %f29, %f456;
	fma.rn.f32 	%f1103, %f444, %f1103, %f457;
	fma.rn.f32 	%f1104, %f444, %f1104, %f458;
	fma.rn.f32 	%f1105, %f444, %f1105, %f459;
	fma.rn.f32 	%f1106, %f444, %f1106, %f460;
	add.s64 	%rd106, %rd87, 96;
	// begin inline asm
	cvta.to.global.u64 %rd105, %rd106;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r97,%r98,%r99,%r100}, [%rd105];
	// end inline asm
	mov.b32 	%f461, %r97;
	mov.b32 	%f462, %r98;
	mov.b32 	%f463, %r99;
	mov.b32 	%f464, %r100;
	mul.f32 	%f465, %f29, %f461;
	mul.f32 	%f466, %f29, %f462;
	mul.f32 	%f467, %f29, %f463;
	mul.f32 	%f468, %f29, %f464;
	fma.rn.f32 	%f1107, %f444, %f1107, %f465;
	fma.rn.f32 	%f469, %f444, %f1108, %f466;
	fma.rn.f32 	%f470, %f444, %f1109, %f467;
	fma.rn.f32 	%f471, %f444, %f1110, %f468;
	add.s64 	%rd109, %rd87, 112;
	// begin inline asm
	cvta.to.global.u64 %rd108, %rd109;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r101,%r102,%r103,%r104}, [%rd108];
	// end inline asm
	mov.b32 	%f472, %r101;
	mov.b32 	%f473, %r102;
	mov.b32 	%f474, %r103;
	mov.b32 	%f475, %r104;
	mul.f32 	%f476, %f29, %f472;
	mul.f32 	%f477, %f29, %f473;
	mul.f32 	%f478, %f29, %f474;
	mul.f32 	%f479, %f29, %f475;
	fma.rn.f32 	%f480, %f444, %f1111, %f476;
	fma.rn.f32 	%f1112, %f444, %f1112, %f477;
	fma.rn.f32 	%f1113, %f444, %f1113, %f478;
	fma.rn.f32 	%f1114, %f444, %f1114, %f479;
	mul.f32 	%f481, %f470, %f470;
	fma.rn.f32 	%f482, %f469, %f469, %f481;
	fma.rn.f32 	%f483, %f471, %f471, %f482;
	fma.rn.f32 	%f484, %f480, %f480, %f483;
	sqrt.rn.f32 	%f485, %f484;
	rcp.rn.f32 	%f486, %f485;
	mul.f32 	%f1108, %f469, %f486;
	mul.f32 	%f1109, %f470, %f486;
	mul.f32 	%f1110, %f471, %f486;
	mul.f32 	%f1111, %f486, %f480;

$L__BB7_12:
	mul.f32 	%f487, %f1109, %f1109;
	fma.rn.f32 	%f488, %f1108, %f1108, %f487;
	fma.rn.f32 	%f489, %f1110, %f1110, %f488;
	fma.rn.f32 	%f490, %f1111, %f1111, %f489;
	rcp.rn.f32 	%f491, %f490;
	mul.f32 	%f492, %f1108, %f491;
	mul.f32 	%f493, %f1109, %f491;
	mul.f32 	%f494, %f1110, %f491;
	mul.f32 	%f495, %f1111, %f491;
	mul.f32 	%f496, %f1108, %f492;
	mul.f32 	%f497, %f1109, %f493;
	mul.f32 	%f498, %f1110, %f494;
	mul.f32 	%f499, %f1108, %f493;
	mul.f32 	%f500, %f1110, %f495;
	mul.f32 	%f501, %f1108, %f494;
	mul.f32 	%f502, %f1109, %f495;
	mul.f32 	%f503, %f1109, %f494;
	mul.f32 	%f504, %f1108, %f495;
	sub.f32 	%f505, %f496, %f497;
	sub.f32 	%f506, %f505, %f498;
	fma.rn.f32 	%f507, %f1111, %f495, %f506;
	sub.f32 	%f508, %f499, %f500;
	add.f32 	%f509, %f508, %f508;
	add.f32 	%f510, %f501, %f502;
	add.f32 	%f511, %f510, %f510;
	add.f32 	%f512, %f499, %f500;
	add.f32 	%f513, %f512, %f512;
	sub.f32 	%f514, %f497, %f496;
	sub.f32 	%f515, %f514, %f498;
	fma.rn.f32 	%f516, %f1111, %f495, %f515;
	sub.f32 	%f517, %f503, %f504;
	add.f32 	%f518, %f517, %f517;
	sub.f32 	%f519, %f501, %f502;
	add.f32 	%f520, %f519, %f519;
	add.f32 	%f521, %f503, %f504;
	add.f32 	%f522, %f521, %f521;
	neg.f32 	%f523, %f496;
	sub.f32 	%f524, %f523, %f497;
	add.f32 	%f525, %f498, %f524;
	fma.rn.f32 	%f526, %f1111, %f495, %f525;
	mul.f32 	%f527, %f1102, %f507;
	fma.rn.f32 	%f528, %f1105, %f509, %f527;
	fma.rn.f32 	%f529, %f1107, %f511, %f528;
	add.f32 	%f1126, %f1112, %f529;
	mul.f32 	%f530, %f1105, %f516;
	fma.rn.f32 	%f531, %f1102, %f513, %f530;
	fma.rn.f32 	%f532, %f1107, %f518, %f531;
	add.f32 	%f1122, %f1113, %f532;
	mul.f32 	%f533, %f1105, %f522;
	fma.rn.f32 	%f534, %f1102, %f520, %f533;
	fma.rn.f32 	%f535, %f1107, %f526, %f534;
	add.f32 	%f1118, %f1114, %f535;
	mul.f32 	%f536, %f1101, %f507;
	fma.rn.f32 	%f537, %f1104, %f509, %f536;
	fma.rn.f32 	%f1125, %f1106, %f511, %f537;
	mul.f32 	%f538, %f1104, %f516;
	fma.rn.f32 	%f539, %f1101, %f513, %f538;
	fma.rn.f32 	%f1121, %f1106, %f518, %f539;
	mul.f32 	%f540, %f1104, %f522;
	fma.rn.f32 	%f541, %f1101, %f520, %f540;
	fma.rn.f32 	%f1117, %f1106, %f526, %f541;
	mul.f32 	%f542, %f1100, %f507;
	fma.rn.f32 	%f1124, %f1103, %f509, %f542;
	mul.f32 	%f543, %f1103, %f516;
	fma.rn.f32 	%f1120, %f1100, %f513, %f543;
	mul.f32 	%f544, %f1103, %f522;
	fma.rn.f32 	%f1116, %f1100, %f520, %f544;
	mul.f32 	%f1123, %f1099, %f507;
	mul.f32 	%f1119, %f1099, %f513;
	mul.f32 	%f1115, %f1099, %f520;

$L__BB7_15:
	mul.f32 	%f582, %f1116, %f1121;
	mul.f32 	%f583, %f1117, %f1120;
	sub.f32 	%f584, %f583, %f582;
	mul.f32 	%f585, %f1123, %f584;
	mul.f32 	%f586, %f1115, %f1121;
	mul.f32 	%f587, %f1117, %f1119;
	sub.f32 	%f588, %f587, %f586;
	mul.f32 	%f589, %f588, %f1124;
	sub.f32 	%f590, %f585, %f589;
	mul.f32 	%f591, %f1115, %f1120;
	mul.f32 	%f592, %f1116, %f1119;
	sub.f32 	%f593, %f592, %f591;
	fma.rn.f32 	%f594, %f593, %f1125, %f590;
	rcp.rn.f32 	%f595, %f594;
	mul.f32 	%f1135, %f584, %f595;
	mul.f32 	%f596, %f1117, %f1124;
	mul.f32 	%f597, %f1116, %f1125;
	sub.f32 	%f598, %f597, %f596;
	mul.f32 	%f1136, %f598, %f595;
	mul.f32 	%f599, %f1120, %f1125;
	mul.f32 	%f600, %f1121, %f1124;
	sub.f32 	%f601, %f600, %f599;
	mul.f32 	%f1137, %f601, %f595;
	sub.f32 	%f602, %f586, %f587;
	mul.f32 	%f1131, %f602, %f595;
	mul.f32 	%f603, %f1115, %f1125;
	mul.f32 	%f604, %f1117, %f1123;
	sub.f32 	%f605, %f604, %f603;
	mul.f32 	%f1132, %f605, %f595;
	mul.f32 	%f606, %f1121, %f1123;
	mul.f32 	%f607, %f1119, %f1125;
	sub.f32 	%f608, %f607, %f606;
	mul.f32 	%f1133, %f608, %f595;
	mul.f32 	%f1127, %f593, %f595;
	mul.f32 	%f609, %f1116, %f1123;
	mul.f32 	%f610, %f1115, %f1124;
	sub.f32 	%f611, %f610, %f609;
	mul.f32 	%f1128, %f611, %f595;
	mul.f32 	%f612, %f1119, %f1124;
	mul.f32 	%f613, %f1120, %f1123;
	sub.f32 	%f614, %f613, %f612;
	mul.f32 	%f1129, %f614, %f595;
	mul.f32 	%f615, %f1126, %f1135;
	neg.f32 	%f616, %f615;
	mul.f32 	%f617, %f1122, %f1136;
	sub.f32 	%f618, %f616, %f617;
	mul.f32 	%f619, %f1118, %f1137;
	sub.f32 	%f1138, %f618, %f619;
	mul.f32 	%f620, %f1126, %f1131;
	neg.f32 	%f621, %f620;
	mul.f32 	%f622, %f1122, %f1132;
	sub.f32 	%f623, %f621, %f622;
	mul.f32 	%f624, %f1118, %f1133;
	sub.f32 	%f1134, %f623, %f624;
	mul.f32 	%f625, %f1126, %f1127;
	neg.f32 	%f626, %f625;
	mul.f32 	%f627, %f1122, %f1128;
	sub.f32 	%f628, %f626, %f627;
	mul.f32 	%f629, %f1118, %f1129;
	sub.f32 	%f1130, %f628, %f629;
	bra.uni 	$L__BB7_16;

$L__BB7_7:
	// begin inline asm
	call (%rd349), _optix_get_instance_inverse_transform_from_handle, (%rd39);
	// end inline asm

$L__BB7_8:
	// begin inline asm
	cvta.to.global.u64 %rd45, %rd349;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r18,%r19,%r20,%r21}, [%rd45];
	// end inline asm
	mov.b32 	%f1135, %r18;
	mov.b32 	%f1136, %r19;
	mov.b32 	%f1137, %r20;
	mov.b32 	%f1138, %r21;
	add.s64 	%rd49, %rd349, 16;
	// begin inline asm
	cvta.to.global.u64 %rd48, %rd49;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r22,%r23,%r24,%r25}, [%rd48];
	// end inline asm
	mov.b32 	%f1131, %r22;
	mov.b32 	%f1132, %r23;
	mov.b32 	%f1133, %r24;
	mov.b32 	%f1134, %r25;
	add.s64 	%rd52, %rd349, 32;
	// begin inline asm
	cvta.to.global.u64 %rd51, %rd52;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r26,%r27,%r28,%r29}, [%rd51];
	// end inline asm
	mov.b32 	%f1127, %r26;
	mov.b32 	%f1128, %r27;
	mov.b32 	%f1129, %r28;
	mov.b32 	%f1130, %r29;

$L__BB7_16:
	setp.eq.s32 	%p13, %r352, 0;
	@%p13 bra 	$L__BB7_18;

	mul.f32 	%f630, %f1094, %f1136;
	fma.rn.f32 	%f631, %f1090, %f1135, %f630;
	fma.rn.f32 	%f151, %f1098, %f1137, %f631;
	mul.f32 	%f632, %f1093, %f1136;
	fma.rn.f32 	%f633, %f1089, %f1135, %f632;
	fma.rn.f32 	%f152, %f1097, %f1137, %f633;
	mul.f32 	%f634, %f1092, %f1136;
	fma.rn.f32 	%f635, %f1088, %f1135, %f634;
	fma.rn.f32 	%f153, %f1096, %f1137, %f635;
	mul.f32 	%f636, %f1091, %f1136;
	fma.rn.f32 	%f637, %f1087, %f1135, %f636;
	fma.rn.f32 	%f638, %f1095, %f1137, %f637;
	add.f32 	%f1138, %f1138, %f638;
	mul.f32 	%f639, %f1094, %f1132;
	fma.rn.f32 	%f640, %f1090, %f1131, %f639;
	fma.rn.f32 	%f155, %f1098, %f1133, %f640;
	mul.f32 	%f641, %f1093, %f1132;
	fma.rn.f32 	%f642, %f1089, %f1131, %f641;
	fma.rn.f32 	%f156, %f1097, %f1133, %f642;
	mul.f32 	%f643, %f1092, %f1132;
	fma.rn.f32 	%f644, %f1088, %f1131, %f643;
	fma.rn.f32 	%f157, %f1096, %f1133, %f644;
	mul.f32 	%f645, %f1091, %f1132;
	fma.rn.f32 	%f646, %f1087, %f1131, %f645;
	fma.rn.f32 	%f647, %f1095, %f1133, %f646;
	add.f32 	%f1134, %f1134, %f647;
	mul.f32 	%f648, %f1094, %f1128;
	fma.rn.f32 	%f649, %f1090, %f1127, %f648;
	fma.rn.f32 	%f159, %f1098, %f1129, %f649;
	mul.f32 	%f650, %f1093, %f1128;
	fma.rn.f32 	%f651, %f1089, %f1127, %f650;
	fma.rn.f32 	%f160, %f1097, %f1129, %f651;
	mul.f32 	%f652, %f1092, %f1128;
	fma.rn.f32 	%f653, %f1088, %f1127, %f652;
	fma.rn.f32 	%f161, %f1096, %f1129, %f653;
	mul.f32 	%f654, %f1091, %f1128;
	fma.rn.f32 	%f655, %f1087, %f1127, %f654;
	fma.rn.f32 	%f656, %f1095, %f1129, %f655;
	add.f32 	%f1130, %f1130, %f656;
	mov.f32 	%f1127, %f159;
	mov.f32 	%f1128, %f160;
	mov.f32 	%f1129, %f161;
	mov.f32 	%f1131, %f155;
	mov.f32 	%f1132, %f156;
	mov.f32 	%f1133, %f157;
	mov.f32 	%f1135, %f151;
	mov.f32 	%f1136, %f152;
	mov.f32 	%f1137, %f153;

$L__BB7_18:
	add.s32 	%r352, %r352, 1;
	setp.lt.u32 	%p14, %r352, %r13;
	mov.f32 	%f1087, %f1138;
	mov.f32 	%f1088, %f1137;
	mov.f32 	%f1089, %f1136;
	mov.f32 	%f1090, %f1135;
	mov.f32 	%f1091, %f1134;
	mov.f32 	%f1092, %f1133;
	mov.f32 	%f1093, %f1132;
	mov.f32 	%f1094, %f1131;
	mov.f32 	%f1095, %f1130;
	mov.f32 	%f1096, %f1129;
	mov.f32 	%f1097, %f1128;
	mov.f32 	%f1098, %f1127;
	@%p14 bra 	$L__BB7_3;

$L__BB7_19:
	mul.f32 	%f657, %f1164, %f1136;
	fma.rn.f32 	%f658, %f1163, %f1135, %f657;
	fma.rn.f32 	%f659, %f1165, %f1137, %f658;
	mul.f32 	%f660, %f1164, %f1132;
	fma.rn.f32 	%f661, %f1163, %f1131, %f660;
	fma.rn.f32 	%f662, %f1165, %f1133, %f661;
	mul.f32 	%f663, %f1164, %f1128;
	fma.rn.f32 	%f664, %f1163, %f1127, %f663;
	fma.rn.f32 	%f665, %f1165, %f1129, %f664;
	add.f32 	%f1165, %f1130, %f665;
	add.f32 	%f1164, %f1134, %f662;
	add.f32 	%f1163, %f1138, %f659;

$L__BB7_20:
	// begin inline asm
	call (%f1221), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f1222), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f668), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r164), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p15, %r164, 0;
	@%p15 bra 	$L__BB7_40;

	// begin inline asm
	call (%r165), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f669), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p16, %r165, 0;
	@%p16 bra 	$L__BB7_39;

	mov.u32 	%r353, 0;

$L__BB7_23:
	.pragma "nounroll";
	// begin inline asm
	call (%rd158), _optix_get_transform_list_handle, (%r353);
	// end inline asm
	// begin inline asm
	call (%r168), _optix_get_transform_type_from_handle, (%rd158);
	// end inline asm
	or.b32  	%r169, %r168, 1;
	setp.eq.s32 	%p17, %r169, 3;
	@%p17 bra 	$L__BB7_29;
	bra.uni 	$L__BB7_24;

$L__BB7_29:
	setp.eq.s32 	%p20, %r168, 2;
	@%p20 bra 	$L__BB7_33;
	bra.uni 	$L__BB7_30;

$L__BB7_33:
	// begin inline asm
	call (%rd230), _optix_get_matrix_motion_transform_from_handle, (%rd158);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd232, %rd230;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r257,%r258,%r259,%r260}, [%rd232];
	// end inline asm
	add.s64 	%rd236, %rd230, 16;
	// begin inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r261,%r262,%r263,%r264}, [%rd235];
	// end inline asm
	add.s64 	%rd239, %rd230, 32;
	// begin inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r265,%r266,%r267,%r268}, [%rd238];
	// end inline asm
	add.s64 	%rd242, %rd230, 48;
	// begin inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r269,%r270,%r271,%r272}, [%rd241];
	// end inline asm
	add.s64 	%rd245, %rd230, 64;
	// begin inline asm
	cvta.to.global.u64 %rd244, %rd245;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r273,%r274,%r275,%r276}, [%rd244];
	// end inline asm
	add.s64 	%rd248, %rd230, 80;
	// begin inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r277,%r278,%r279,%r280}, [%rd247];
	// end inline asm
	add.s64 	%rd251, %rd230, 96;
	// begin inline asm
	cvta.to.global.u64 %rd250, %rd251;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r281,%r282,%r283,%r284}, [%rd250];
	// end inline asm
	add.s64 	%rd254, %rd230, 112;
	// begin inline asm
	cvta.to.global.u64 %rd253, %rd254;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r285,%r286,%r287,%r288}, [%rd253];
	// end inline asm
	mov.b32 	%f773, %r260;
	mov.b32 	%f774, %r261;
	and.b32  	%r301, %r259, 65535;
	add.s32 	%r302, %r301, -1;
	cvt.rn.f32.s32 	%f775, %r302;
	sub.f32 	%f776, %f669, %f773;
	mul.f32 	%f777, %f776, %f775;
	sub.f32 	%f778, %f774, %f773;
	div.rn.f32 	%f779, %f777, %f778;
	min.f32 	%f780, %f775, %f779;
	mov.f32 	%f781, 0f00000000;
	max.f32 	%f782, %f781, %f780;
	cvt.rmi.f32.f32 	%f783, %f782;
	sub.f32 	%f258, %f782, %f783;
	cvt.rzi.s32.f32 	%r303, %f783;
	cvt.s64.s32 	%rd16, %r303;
	mul.wide.s32 	%rd265, %r303, 48;
	add.s64 	%rd257, %rd239, %rd265;
	// begin inline asm
	cvta.to.global.u64 %rd256, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r289,%r290,%r291,%r292}, [%rd256];
	// end inline asm
	mov.b32 	%f1191, %r289;
	mov.b32 	%f1192, %r290;
	mov.b32 	%f1193, %r291;
	add.s64 	%rd260, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd259, %rd260;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r293,%r294,%r295,%r296}, [%rd259];
	// end inline asm
	mov.b32 	%f1188, %r293;
	mov.b32 	%f1189, %r294;
	mov.b32 	%f1190, %r295;
	add.s64 	%rd263, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd262, %rd263;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r297,%r298,%r299,%r300}, [%rd262];
	// end inline asm
	mov.b32 	%f1185, %r297;
	mov.b32 	%f1186, %r298;
	mov.b32 	%f1187, %r299;
	setp.leu.f32 	%p22, %f258, 0f00000000;
	@%p22 bra 	$L__BB7_35;

	mov.f32 	%f784, 0f3F800000;
	sub.f32 	%f785, %f784, %f258;
	mul.lo.s64 	%rd275, %rd16, 48;
	add.s64 	%rd276, %rd230, %rd275;
	add.s64 	%rd267, %rd276, 80;
	// begin inline asm
	cvta.to.global.u64 %rd266, %rd267;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r304,%r305,%r306,%r307}, [%rd266];
	// end inline asm
	mov.b32 	%f786, %r304;
	mov.b32 	%f787, %r305;
	mov.b32 	%f788, %r306;
	mul.f32 	%f789, %f258, %f786;
	mul.f32 	%f790, %f258, %f787;
	mul.f32 	%f791, %f258, %f788;
	fma.rn.f32 	%f1191, %f785, %f1191, %f789;
	fma.rn.f32 	%f1192, %f785, %f1192, %f790;
	fma.rn.f32 	%f1193, %f785, %f1193, %f791;
	add.s64 	%rd270, %rd276, 96;
	// begin inline asm
	cvta.to.global.u64 %rd269, %rd270;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r308,%r309,%r310,%r311}, [%rd269];
	// end inline asm
	mov.b32 	%f792, %r308;
	mov.b32 	%f793, %r309;
	mov.b32 	%f794, %r310;
	mul.f32 	%f795, %f258, %f792;
	mul.f32 	%f796, %f258, %f793;
	mul.f32 	%f797, %f258, %f794;
	fma.rn.f32 	%f1188, %f785, %f1188, %f795;
	fma.rn.f32 	%f1189, %f785, %f1189, %f796;
	fma.rn.f32 	%f1190, %f785, %f1190, %f797;
	add.s64 	%rd273, %rd276, 112;
	// begin inline asm
	cvta.to.global.u64 %rd272, %rd273;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r312,%r313,%r314,%r315}, [%rd272];
	// end inline asm
	mov.b32 	%f798, %r312;
	mov.b32 	%f799, %r313;
	mov.b32 	%f800, %r314;
	mul.f32 	%f801, %f258, %f798;
	mul.f32 	%f802, %f258, %f799;
	mul.f32 	%f803, %f258, %f800;
	fma.rn.f32 	%f1185, %f785, %f1185, %f801;
	fma.rn.f32 	%f1186, %f785, %f1186, %f802;
	fma.rn.f32 	%f1187, %f785, %f1187, %f803;
	bra.uni 	$L__BB7_35;

$L__BB7_24:
	mov.f32 	%f1194, 0f00000000;
	mov.f32 	%f1196, 0f3F800000;
	setp.eq.s32 	%p18, %r168, 4;
	@%p18 bra 	$L__BB7_27;

	setp.ne.s32 	%p19, %r168, 1;
	mov.f32 	%f1195, %f1194;
	mov.f32 	%f1197, %f1194;
	mov.f32 	%f1198, %f1196;
	mov.f32 	%f1199, %f1194;
	mov.f32 	%f1200, %f1196;
	mov.f32 	%f1201, %f1194;
	mov.f32 	%f1202, %f1194;
	@%p19 bra 	$L__BB7_36;

	// begin inline asm
	call (%rd160), _optix_get_static_transform_from_handle, (%rd158);
	// end inline asm
	add.s64 	%rd350, %rd160, 64;
	bra.uni 	$L__BB7_28;

$L__BB7_30:
	// begin inline asm
	call (%rd173), _optix_get_srt_motion_transform_from_handle, (%rd158);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd175, %rd173;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r182,%r183,%r184,%r185}, [%rd175];
	// end inline asm
	add.s64 	%rd179, %rd173, 16;
	// begin inline asm
	cvta.to.global.u64 %rd178, %rd179;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r186,%r187,%r188,%r189}, [%rd178];
	// end inline asm
	add.s64 	%rd182, %rd173, 32;
	// begin inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r190,%r191,%r192,%r193}, [%rd181];
	// end inline asm
	add.s64 	%rd185, %rd173, 48;
	// begin inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r194,%r195,%r196,%r197}, [%rd184];
	// end inline asm
	add.s64 	%rd188, %rd173, 64;
	// begin inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r198,%r199,%r200,%r201}, [%rd187];
	// end inline asm
	add.s64 	%rd191, %rd173, 80;
	// begin inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r202,%r203,%r204,%r205}, [%rd190];
	// end inline asm
	add.s64 	%rd194, %rd173, 96;
	// begin inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r206,%r207,%r208,%r209}, [%rd193];
	// end inline asm
	add.s64 	%rd197, %rd173, 112;
	// begin inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r210,%r211,%r212,%r213}, [%rd196];
	// end inline asm
	add.s64 	%rd200, %rd173, 128;
	// begin inline asm
	cvta.to.global.u64 %rd199, %rd200;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r214,%r215,%r216,%r217}, [%rd199];
	// end inline asm
	add.s64 	%rd203, %rd173, 144;
	// begin inline asm
	cvta.to.global.u64 %rd202, %rd203;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r218,%r219,%r220,%r221}, [%rd202];
	// end inline asm
	mov.b32 	%f681, %r185;
	mov.b32 	%f682, %r186;
	and.b32  	%r238, %r184, 65535;
	add.s32 	%r239, %r238, -1;
	cvt.rn.f32.s32 	%f683, %r239;
	sub.f32 	%f684, %f669, %f681;
	mul.f32 	%f685, %f684, %f683;
	sub.f32 	%f686, %f682, %f681;
	div.rn.f32 	%f687, %f685, %f686;
	min.f32 	%f688, %f683, %f687;
	mov.f32 	%f689, 0f00000000;
	max.f32 	%f690, %f689, %f688;
	cvt.rmi.f32.f32 	%f691, %f690;
	sub.f32 	%f218, %f690, %f691;
	cvt.rzi.s32.f32 	%r240, %f691;
	mul.wide.s32 	%rd217, %r240, 64;
	add.s64 	%rd206, %rd182, %rd217;
	// begin inline asm
	cvta.to.global.u64 %rd205, %rd206;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r222,%r223,%r224,%r225}, [%rd205];
	// end inline asm
	mov.b32 	%f1175, %r222;
	mov.b32 	%f1176, %r223;
	mov.b32 	%f1177, %r224;
	add.s64 	%rd209, %rd206, 16;
	// begin inline asm
	cvta.to.global.u64 %rd208, %rd209;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r226,%r227,%r228,%r229}, [%rd208];
	// end inline asm
	mov.b32 	%f1178, %r226;
	mov.b32 	%f1179, %r227;
	mov.b32 	%f1180, %r229;
	add.s64 	%rd212, %rd206, 32;
	// begin inline asm
	cvta.to.global.u64 %rd211, %rd212;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r230,%r231,%r232,%r233}, [%rd211];
	// end inline asm
	mov.b32 	%f1181, %r231;
	mov.b32 	%f1182, %r232;
	mov.b32 	%f1183, %r233;
	add.s64 	%rd215, %rd206, 48;
	// begin inline asm
	cvta.to.global.u64 %rd214, %rd215;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r234,%r235,%r236,%r237}, [%rd214];
	// end inline asm
	mov.b32 	%f1184, %r234;
	setp.leu.f32 	%p21, %f218, 0f00000000;
	@%p21 bra 	$L__BB7_32;

	mov.f32 	%f692, 0f3F800000;
	sub.f32 	%f693, %f692, %f218;
	add.s64 	%rd219, %rd206, 64;
	// begin inline asm
	cvta.to.global.u64 %rd218, %rd219;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r241,%r242,%r243,%r244}, [%rd218];
	// end inline asm
	mov.b32 	%f694, %r241;
	mov.b32 	%f695, %r242;
	mov.b32 	%f696, %r243;
	mul.f32 	%f697, %f218, %f694;
	mul.f32 	%f698, %f218, %f695;
	mul.f32 	%f699, %f218, %f696;
	fma.rn.f32 	%f1175, %f693, %f1175, %f697;
	fma.rn.f32 	%f1176, %f693, %f1176, %f698;
	fma.rn.f32 	%f1177, %f693, %f1177, %f699;
	add.s64 	%rd222, %rd206, 80;
	// begin inline asm
	cvta.to.global.u64 %rd221, %rd222;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r245,%r246,%r247,%r248}, [%rd221];
	// end inline asm
	mov.b32 	%f700, %r245;
	mov.b32 	%f701, %r246;
	mov.b32 	%f702, %r248;
	mul.f32 	%f703, %f218, %f700;
	mul.f32 	%f704, %f218, %f701;
	mul.f32 	%f705, %f218, %f702;
	fma.rn.f32 	%f1178, %f693, %f1178, %f703;
	fma.rn.f32 	%f1179, %f693, %f1179, %f704;
	fma.rn.f32 	%f1180, %f693, %f1180, %f705;
	add.s64 	%rd225, %rd206, 96;
	// begin inline asm
	cvta.to.global.u64 %rd224, %rd225;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r249,%r250,%r251,%r252}, [%rd224];
	// end inline asm
	mov.b32 	%f706, %r250;
	mov.b32 	%f707, %r251;
	mov.b32 	%f708, %r252;
	mul.f32 	%f709, %f218, %f706;
	mul.f32 	%f710, %f218, %f707;
	mul.f32 	%f711, %f218, %f708;
	fma.rn.f32 	%f712, %f693, %f1181, %f709;
	fma.rn.f32 	%f713, %f693, %f1182, %f710;
	fma.rn.f32 	%f714, %f693, %f1183, %f711;
	add.s64 	%rd228, %rd206, 112;
	// begin inline asm
	cvta.to.global.u64 %rd227, %rd228;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r253,%r254,%r255,%r256}, [%rd227];
	// end inline asm
	mov.b32 	%f715, %r253;
	mul.f32 	%f716, %f218, %f715;
	fma.rn.f32 	%f717, %f693, %f1184, %f716;
	mul.f32 	%f718, %f713, %f713;
	fma.rn.f32 	%f719, %f712, %f712, %f718;
	fma.rn.f32 	%f720, %f714, %f714, %f719;
	fma.rn.f32 	%f721, %f717, %f717, %f720;
	sqrt.rn.f32 	%f722, %f721;
	rcp.rn.f32 	%f723, %f722;
	mul.f32 	%f1181, %f712, %f723;
	mul.f32 	%f1182, %f713, %f723;
	mul.f32 	%f1183, %f714, %f723;
	mul.f32 	%f1184, %f723, %f717;

$L__BB7_32:
	mul.f32 	%f724, %f1182, %f1182;
	fma.rn.f32 	%f725, %f1181, %f1181, %f724;
	fma.rn.f32 	%f726, %f1183, %f1183, %f725;
	fma.rn.f32 	%f727, %f1184, %f1184, %f726;
	rcp.rn.f32 	%f728, %f727;
	mul.f32 	%f729, %f1181, %f728;
	mul.f32 	%f730, %f1182, %f728;
	mul.f32 	%f731, %f1183, %f728;
	mul.f32 	%f732, %f1184, %f728;
	mul.f32 	%f733, %f1181, %f729;
	mul.f32 	%f734, %f1182, %f730;
	mul.f32 	%f735, %f1183, %f731;
	mul.f32 	%f736, %f1181, %f730;
	mul.f32 	%f737, %f1183, %f732;
	mul.f32 	%f738, %f1181, %f731;
	mul.f32 	%f739, %f1182, %f732;
	mul.f32 	%f740, %f1182, %f731;
	mul.f32 	%f741, %f1181, %f732;
	sub.f32 	%f742, %f733, %f734;
	sub.f32 	%f743, %f742, %f735;
	fma.rn.f32 	%f744, %f1184, %f732, %f743;
	sub.f32 	%f745, %f736, %f737;
	add.f32 	%f746, %f745, %f745;
	add.f32 	%f747, %f738, %f739;
	add.f32 	%f748, %f747, %f747;
	add.f32 	%f749, %f736, %f737;
	add.f32 	%f750, %f749, %f749;
	sub.f32 	%f751, %f734, %f733;
	sub.f32 	%f752, %f751, %f735;
	fma.rn.f32 	%f753, %f1184, %f732, %f752;
	sub.f32 	%f754, %f740, %f741;
	add.f32 	%f755, %f754, %f754;
	sub.f32 	%f756, %f738, %f739;
	add.f32 	%f757, %f756, %f756;
	add.f32 	%f758, %f740, %f741;
	add.f32 	%f759, %f758, %f758;
	neg.f32 	%f760, %f733;
	sub.f32 	%f761, %f760, %f734;
	add.f32 	%f762, %f735, %f761;
	fma.rn.f32 	%f763, %f1184, %f732, %f762;
	mul.f32 	%f764, %f1177, %f744;
	fma.rn.f32 	%f765, %f1179, %f746, %f764;
	fma.rn.f32 	%f1193, %f1180, %f748, %f765;
	mul.f32 	%f766, %f1179, %f753;
	fma.rn.f32 	%f767, %f1177, %f750, %f766;
	fma.rn.f32 	%f1190, %f1180, %f755, %f767;
	mul.f32 	%f768, %f1179, %f759;
	fma.rn.f32 	%f769, %f1177, %f757, %f768;
	fma.rn.f32 	%f1187, %f1180, %f763, %f769;
	mul.f32 	%f770, %f1176, %f744;
	fma.rn.f32 	%f1192, %f1178, %f746, %f770;
	mul.f32 	%f771, %f1178, %f753;
	fma.rn.f32 	%f1189, %f1176, %f750, %f771;
	mul.f32 	%f772, %f1178, %f759;
	fma.rn.f32 	%f1186, %f1176, %f757, %f772;
	mul.f32 	%f1191, %f1175, %f744;
	mul.f32 	%f1188, %f1175, %f750;
	mul.f32 	%f1185, %f1175, %f757;

$L__BB7_35:
	mul.f32 	%f804, %f1186, %f1190;
	mul.f32 	%f805, %f1187, %f1189;
	sub.f32 	%f806, %f805, %f804;
	mul.f32 	%f807, %f1191, %f806;
	mul.f32 	%f808, %f1185, %f1190;
	mul.f32 	%f809, %f1187, %f1188;
	sub.f32 	%f810, %f809, %f808;
	mul.f32 	%f811, %f810, %f1192;
	sub.f32 	%f812, %f807, %f811;
	mul.f32 	%f813, %f1185, %f1189;
	mul.f32 	%f814, %f1186, %f1188;
	sub.f32 	%f815, %f814, %f813;
	fma.rn.f32 	%f816, %f815, %f1193, %f812;
	rcp.rn.f32 	%f817, %f816;
	mul.f32 	%f1200, %f806, %f817;
	mul.f32 	%f818, %f1187, %f1192;
	mul.f32 	%f819, %f1186, %f1193;
	sub.f32 	%f820, %f819, %f818;
	mul.f32 	%f1201, %f820, %f817;
	mul.f32 	%f821, %f1189, %f1193;
	mul.f32 	%f822, %f1190, %f1192;
	sub.f32 	%f823, %f822, %f821;
	mul.f32 	%f1202, %f823, %f817;
	sub.f32 	%f824, %f808, %f809;
	mul.f32 	%f1197, %f824, %f817;
	mul.f32 	%f825, %f1185, %f1193;
	mul.f32 	%f826, %f1187, %f1191;
	sub.f32 	%f827, %f826, %f825;
	mul.f32 	%f1198, %f827, %f817;
	mul.f32 	%f828, %f1190, %f1191;
	mul.f32 	%f829, %f1188, %f1193;
	sub.f32 	%f830, %f829, %f828;
	mul.f32 	%f1199, %f830, %f817;
	mul.f32 	%f1194, %f815, %f817;
	mul.f32 	%f831, %f1186, %f1191;
	mul.f32 	%f832, %f1185, %f1192;
	sub.f32 	%f833, %f832, %f831;
	mul.f32 	%f1195, %f833, %f817;
	mul.f32 	%f834, %f1188, %f1192;
	mul.f32 	%f835, %f1189, %f1191;
	sub.f32 	%f836, %f835, %f834;
	mul.f32 	%f1196, %f836, %f817;
	bra.uni 	$L__BB7_36;

$L__BB7_27:
	// begin inline asm
	call (%rd350), _optix_get_instance_inverse_transform_from_handle, (%rd158);
	// end inline asm

$L__BB7_28:
	// begin inline asm
	cvta.to.global.u64 %rd164, %rd350;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r170,%r171,%r172,%r173}, [%rd164];
	// end inline asm
	mov.b32 	%f1200, %r170;
	mov.b32 	%f1201, %r171;
	mov.b32 	%f1202, %r172;
	add.s64 	%rd168, %rd350, 16;
	// begin inline asm
	cvta.to.global.u64 %rd167, %rd168;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r174,%r175,%r176,%r177}, [%rd167];
	// end inline asm
	mov.b32 	%f1197, %r174;
	mov.b32 	%f1198, %r175;
	mov.b32 	%f1199, %r176;
	add.s64 	%rd171, %rd350, 32;
	// begin inline asm
	cvta.to.global.u64 %rd170, %rd171;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r178,%r179,%r180,%r181}, [%rd170];
	// end inline asm
	mov.b32 	%f1194, %r178;
	mov.b32 	%f1195, %r179;
	mov.b32 	%f1196, %r180;

$L__BB7_36:
	setp.eq.s32 	%p23, %r353, 0;
	@%p23 bra 	$L__BB7_38;

	mul.f32 	%f837, %f1171, %f1201;
	fma.rn.f32 	%f838, %f1168, %f1200, %f837;
	fma.rn.f32 	%f304, %f1174, %f1202, %f838;
	mul.f32 	%f839, %f1170, %f1201;
	fma.rn.f32 	%f840, %f1167, %f1200, %f839;
	fma.rn.f32 	%f305, %f1173, %f1202, %f840;
	mul.f32 	%f841, %f1169, %f1201;
	fma.rn.f32 	%f842, %f1166, %f1200, %f841;
	fma.rn.f32 	%f1202, %f1172, %f1202, %f842;
	mul.f32 	%f843, %f1171, %f1198;
	fma.rn.f32 	%f844, %f1168, %f1197, %f843;
	fma.rn.f32 	%f307, %f1174, %f1199, %f844;
	mul.f32 	%f845, %f1170, %f1198;
	fma.rn.f32 	%f846, %f1167, %f1197, %f845;
	fma.rn.f32 	%f308, %f1173, %f1199, %f846;
	mul.f32 	%f847, %f1169, %f1198;
	fma.rn.f32 	%f848, %f1166, %f1197, %f847;
	fma.rn.f32 	%f1199, %f1172, %f1199, %f848;
	mul.f32 	%f849, %f1171, %f1195;
	fma.rn.f32 	%f850, %f1168, %f1194, %f849;
	fma.rn.f32 	%f310, %f1174, %f1196, %f850;
	mul.f32 	%f851, %f1170, %f1195;
	fma.rn.f32 	%f852, %f1167, %f1194, %f851;
	fma.rn.f32 	%f311, %f1173, %f1196, %f852;
	mul.f32 	%f853, %f1169, %f1195;
	fma.rn.f32 	%f854, %f1166, %f1194, %f853;
	fma.rn.f32 	%f1196, %f1172, %f1196, %f854;
	mov.f32 	%f1194, %f310;
	mov.f32 	%f1195, %f311;
	mov.f32 	%f1197, %f307;
	mov.f32 	%f1198, %f308;
	mov.f32 	%f1200, %f304;
	mov.f32 	%f1201, %f305;

$L__BB7_38:
	add.s32 	%r353, %r353, 1;
	setp.lt.u32 	%p24, %r353, %r165;
	mov.f32 	%f1166, %f1202;
	mov.f32 	%f1167, %f1201;
	mov.f32 	%f1168, %f1200;
	mov.f32 	%f1169, %f1199;
	mov.f32 	%f1170, %f1198;
	mov.f32 	%f1171, %f1197;
	mov.f32 	%f1172, %f1196;
	mov.f32 	%f1173, %f1195;
	mov.f32 	%f1174, %f1194;
	@%p24 bra 	$L__BB7_23;

$L__BB7_39:
	mul.f32 	%f855, %f1222, %f1201;
	fma.rn.f32 	%f856, %f1221, %f1200, %f855;
	mul.f32 	%f857, %f1222, %f1198;
	fma.rn.f32 	%f858, %f1221, %f1197, %f857;
	mul.f32 	%f859, %f1222, %f1195;
	fma.rn.f32 	%f860, %f1221, %f1194, %f859;
	fma.rn.f32 	%f1223, %f668, %f1196, %f860;
	fma.rn.f32 	%f1222, %f668, %f1199, %f858;
	fma.rn.f32 	%f1221, %f668, %f1202, %f856;
	bra.uni 	$L__BB7_41;

$L__BB7_40:
	mov.f32 	%f1223, %f668;

$L__BB7_41:
	// begin inline asm
	call (%f861), _optix_get_ray_tmin, ();
	// end inline asm
	fma.rn.f32 	%f864, %f1221, %f861, %f1163;
	fma.rn.f32 	%f865, %f1222, %f861, %f1164;
	fma.rn.f32 	%f866, %f1223, %f861, %f1165;
	ld.v4.f32 	{%f867, %f868, %f869, %f870}, [%rd1+112];
	ld.f32 	%f874, [%rd1+64];
	fma.rn.f32 	%f875, %f864, %f874, %f867;
	ld.f32 	%f876, [%rd1+68];
	fma.rn.f32 	%f877, %f864, %f876, %f868;
	ld.f32 	%f878, [%rd1+72];
	fma.rn.f32 	%f879, %f864, %f878, %f869;
	ld.f32 	%f880, [%rd1+80];
	fma.rn.f32 	%f881, %f865, %f880, %f875;
	ld.f32 	%f882, [%rd1+84];
	fma.rn.f32 	%f883, %f865, %f882, %f877;
	ld.f32 	%f884, [%rd1+88];
	fma.rn.f32 	%f885, %f865, %f884, %f879;
	ld.f32 	%f886, [%rd1+96];
	fma.rn.f32 	%f340, %f866, %f886, %f881;
	ld.f32 	%f887, [%rd1+100];
	fma.rn.f32 	%f341, %f866, %f887, %f883;
	ld.f32 	%f888, [%rd1+104];
	fma.rn.f32 	%f342, %f866, %f888, %f885;
	ld.v4.f32 	{%f889, %f890, %f891, %f892}, [%rd1+64];
	mul.f32 	%f896, %f1221, %f889;
	mul.f32 	%f897, %f1221, %f890;
	mul.f32 	%f898, %f1221, %f891;
	fma.rn.f32 	%f899, %f1222, %f880, %f896;
	fma.rn.f32 	%f900, %f1222, %f882, %f897;
	fma.rn.f32 	%f901, %f1222, %f884, %f898;
	fma.rn.f32 	%f343, %f1223, %f886, %f899;
	fma.rn.f32 	%f344, %f1223, %f887, %f900;
	fma.rn.f32 	%f345, %f1223, %f888, %f901;
	ld.u64 	%rd17, [%rd1+16];
	and.b64  	%rd18, %rd2, 4294967295;
	ld.u64 	%rd19, [%rd1+8];
	add.s64 	%rd277, %rd19, -1;
	and.b64  	%rd278, %rd277, -4294967296;
	setp.eq.s64 	%p25, %rd278, 0;
	@%p25 bra 	$L__BB7_43;

	rem.u64 	%rd351, %rd18, %rd277;
	bra.uni 	$L__BB7_44;

$L__BB7_43:
	cvt.u32.u64 	%r316, %rd277;
	cvt.u32.u64 	%r317, %rd18;
	rem.u32 	%r318, %r317, %r316;
	cvt.u64.u32 	%rd351, %r318;

$L__BB7_44:
	sub.s64 	%rd281, %rd2, %rd351;
	and.b64  	%rd23, %rd281, 4294967295;
	add.s64 	%rd282, %rd17, -1;
	and.b64  	%rd283, %rd282, -4294967296;
	setp.eq.s64 	%p26, %rd283, 0;
	@%p26 bra 	$L__BB7_46;

	div.u64 	%rd352, %rd23, %rd282;
	bra.uni 	$L__BB7_47;

$L__BB7_46:
	cvt.u32.u64 	%r319, %rd282;
	cvt.u32.u64 	%r320, %rd23;
	div.u32 	%r321, %r320, %r319;
	cvt.u64.u32 	%rd352, %r321;

$L__BB7_47:
	@%p26 bra 	$L__BB7_49;

	rem.u64 	%rd353, %rd352, %rd282;
	bra.uni 	$L__BB7_50;

$L__BB7_49:
	cvt.u32.u64 	%r322, %rd282;
	cvt.u32.u64 	%r323, %rd352;
	rem.u32 	%r324, %r323, %r322;
	cvt.u64.u32 	%rd353, %r324;

$L__BB7_50:
	mul.lo.s64 	%rd291, %rd353, %rd277;
	sub.s64 	%rd30, %rd23, %rd291;
	mul.lo.s64 	%rd31, %rd282, %rd277;
	or.b64  	%rd293, %rd30, %rd31;
	and.b64  	%rd294, %rd293, -4294967296;
	setp.eq.s64 	%p28, %rd294, 0;
	@%p28 bra 	$L__BB7_52;

	div.u64 	%rd354, %rd30, %rd31;
	bra.uni 	$L__BB7_53;

$L__BB7_52:
	cvt.u32.u64 	%r325, %rd31;
	cvt.u32.u64 	%r326, %rd30;
	div.u32 	%r327, %r326, %r325;
	cvt.u64.u32 	%rd354, %r327;

$L__BB7_53:
	cvt.u32.u64 	%r328, %rd354;
	cvt.rn.f32.u32 	%f346, %r328;
	cvt.u32.u64 	%r329, %rd351;
	cvt.rn.f32.u32 	%f347, %r329;
	cvt.u32.u64 	%r330, %rd353;
	cvt.rn.f32.u32 	%f348, %r330;
	ld.v4.f32 	{%f904, %f905, %f906, %f907}, [%rd1+32];
	setp.eq.f32 	%p29, %f343, 0f00000000;
	mov.u16 	%rs7, 0;
	mov.f32 	%f1228, 0f00000000;
	mov.f32 	%f1229, %f1228;
	@%p29 bra 	$L__BB7_55;

	mul.f32 	%f908, %f904, %f347;
	add.f32 	%f909, %f347, 0f3F800000;
	mul.f32 	%f910, %f904, %f909;
	rcp.rn.f32 	%f911, %f343;
	setp.lt.f32 	%p30, %f911, 0f00000000;
	selp.f32 	%f912, %f910, %f908, %p30;
	sub.f32 	%f913, %f912, %f340;
	mul.f32 	%f1228, %f911, %f913;
	selp.f32 	%f914, %f908, %f910, %p30;
	sub.f32 	%f915, %f914, %f340;
	mul.f32 	%f1229, %f911, %f915;
	mov.u16 	%rs7, 1;

$L__BB7_55:
	setp.eq.f32 	%p31, %f344, 0f00000000;
	mov.f32 	%f1226, %f1228;
	mov.f32 	%f1227, %f1229;
	mov.u16 	%rs8, %rs7;
	@%p31 bra 	$L__BB7_60;

	mul.f32 	%f916, %f905, %f348;
	add.f32 	%f917, %f348, 0f3F800000;
	mul.f32 	%f918, %f905, %f917;
	rcp.rn.f32 	%f919, %f344;
	setp.eq.s16 	%p32, %rs7, 0;
	setp.lt.f32 	%p33, %f919, 0f00000000;
	selp.f32 	%f920, %f918, %f916, %p33;
	sub.f32 	%f921, %f920, %f341;
	mul.f32 	%f1226, %f919, %f921;
	selp.f32 	%f922, %f916, %f918, %p33;
	sub.f32 	%f923, %f922, %f341;
	mul.f32 	%f358, %f919, %f923;
	mov.u16 	%rs8, 1;
	mov.f32 	%f1227, %f358;
	@%p32 bra 	$L__BB7_60;

	setp.gt.f32 	%p35, %f1228, %f358;
	setp.gt.f32 	%p36, %f1226, %f1229;
	or.pred  	%p37, %p35, %p36;
	mov.pred 	%p106, -1;
	@%p37 bra 	$L__BB7_65;

	setp.lt.f32 	%p38, %f1228, %f1226;
	selp.f32 	%f1226, %f1226, %f1228, %p38;
	setp.geu.f32 	%p39, %f358, %f1229;
	mov.f32 	%f1227, %f1229;
	mov.u16 	%rs8, %rs7;
	@%p39 bra 	$L__BB7_60;

	mov.f32 	%f1227, %f358;
	mov.u16 	%rs8, %rs7;

$L__BB7_60:
	setp.eq.f32 	%p41, %f345, 0f00000000;
	mov.pred 	%p40, 0;
	mov.f32 	%f1228, %f1226;
	mov.f32 	%f1229, %f1227;
	mov.pred 	%p106, %p40;
	@%p41 bra 	$L__BB7_65;

	mul.f32 	%f924, %f906, %f346;
	add.f32 	%f925, %f346, 0f3F800000;
	mul.f32 	%f926, %f906, %f925;
	rcp.rn.f32 	%f927, %f345;
	setp.eq.s16 	%p43, %rs8, 0;
	setp.lt.f32 	%p44, %f927, 0f00000000;
	selp.f32 	%f928, %f926, %f924, %p44;
	sub.f32 	%f929, %f928, %f342;
	mul.f32 	%f362, %f927, %f929;
	selp.f32 	%f930, %f924, %f926, %p44;
	sub.f32 	%f931, %f930, %f342;
	mul.f32 	%f363, %f927, %f931;
	mov.f32 	%f1228, %f362;
	mov.f32 	%f1229, %f363;
	@%p43 bra 	$L__BB7_65;

	setp.gt.f32 	%p46, %f1226, %f363;
	setp.gt.f32 	%p47, %f362, %f1227;
	or.pred  	%p48, %p46, %p47;
	mov.pred 	%p106, -1;
	mov.f32 	%f1228, %f1226;
	mov.f32 	%f1229, %f1227;
	@%p48 bra 	$L__BB7_65;

	setp.gt.f32 	%p50, %f362, %f1226;
	selp.f32 	%f1228, %f362, %f1226, %p50;
	setp.geu.f32 	%p51, %f363, %f1227;
	mov.f32 	%f1229, %f1227;
	mov.pred 	%p106, %p40;
	@%p51 bra 	$L__BB7_65;

	mov.f32 	%f1229, %f363;
	mov.pred 	%p106, %p40;

$L__BB7_65:
	@%p106 bra 	$L__BB7_90;

	cvt.rn.f32.u64 	%f932, %rd277;
	cvt.rn.f32.u64 	%f933, %rd282;
	ld.u64 	%rd297, [%rd1+24];
	add.s64 	%rd298, %rd297, -1;
	cvt.rn.f32.u64 	%f934, %rd298;
	neg.f32 	%f935, %f347;
	fma.rn.f32 	%f936, %f340, %f932, %f935;
	neg.f32 	%f937, %f348;
	mov.f32 	%f1232, 0f00000000;
	fma.rn.f32 	%f939, %f340, %f1232, %f937;
	neg.f32 	%f940, %f346;
	fma.rn.f32 	%f941, %f340, %f1232, %f940;
	fma.rn.f32 	%f942, %f341, %f1232, %f936;
	fma.rn.f32 	%f943, %f341, %f933, %f939;
	fma.rn.f32 	%f944, %f341, %f1232, %f941;
	fma.rn.f32 	%f945, %f342, %f1232, %f942;
	fma.rn.f32 	%f946, %f342, %f1232, %f943;
	fma.rn.f32 	%f947, %f342, %f934, %f944;
	mul.f32 	%f948, %f343, %f932;
	fma.rn.f32 	%f949, %f344, %f1232, %f948;
	mul.f32 	%f950, %f343, 0f00000000;
	fma.rn.f32 	%f951, %f344, %f933, %f950;
	fma.rn.f32 	%f952, %f344, %f1232, %f950;
	fma.rn.f32 	%f953, %f345, %f1232, %f949;
	fma.rn.f32 	%f954, %f345, %f1232, %f951;
	fma.rn.f32 	%f955, %f345, %f934, %f952;
	and.b64  	%rd299, %rd354, 4294967295;
	mul.lo.s64 	%rd300, %rd17, %rd299;
	add.s64 	%rd301, %rd300, %rd353;
	mul.lo.s64 	%rd302, %rd301, %rd19;
	add.s64 	%rd303, %rd351, %rd302;
	ld.u64 	%rd304, [%rd1+48];
	shl.b64 	%rd305, %rd303, 2;
	and.b64  	%rd306, %rd305, 17179869180;
	add.s64 	%rd307, %rd304, %rd306;
	add.s64 	%rd308, %rd351, 1;
	add.s64 	%rd309, %rd308, %rd302;
	shl.b64 	%rd310, %rd309, 2;
	and.b64  	%rd311, %rd310, 17179869180;
	add.s64 	%rd312, %rd304, %rd311;
	add.s64 	%rd313, %rd353, 1;
	and.b64  	%rd314, %rd313, 4294967295;
	add.s64 	%rd315, %rd300, %rd314;
	mul.lo.s64 	%rd316, %rd315, %rd19;
	add.s64 	%rd317, %rd351, %rd316;
	shl.b64 	%rd318, %rd317, 2;
	and.b64  	%rd319, %rd318, 17179869180;
	add.s64 	%rd320, %rd304, %rd319;
	add.s64 	%rd321, %rd308, %rd316;
	shl.b64 	%rd322, %rd321, 2;
	and.b64  	%rd323, %rd322, 17179869180;
	add.s64 	%rd324, %rd304, %rd323;
	add.s64 	%rd325, %rd354, 1;
	and.b64  	%rd326, %rd325, 4294967295;
	mul.lo.s64 	%rd327, %rd17, %rd326;
	add.s64 	%rd328, %rd327, %rd353;
	mul.lo.s64 	%rd329, %rd328, %rd19;
	add.s64 	%rd330, %rd351, %rd329;
	shl.b64 	%rd331, %rd330, 2;
	and.b64  	%rd332, %rd331, 17179869180;
	add.s64 	%rd333, %rd304, %rd332;
	add.s64 	%rd334, %rd308, %rd329;
	shl.b64 	%rd335, %rd334, 2;
	and.b64  	%rd336, %rd335, 17179869180;
	add.s64 	%rd337, %rd304, %rd336;
	add.s64 	%rd338, %rd327, %rd314;
	mul.lo.s64 	%rd339, %rd338, %rd19;
	add.s64 	%rd340, %rd351, %rd339;
	shl.b64 	%rd341, %rd340, 2;
	and.b64  	%rd342, %rd341, 17179869180;
	add.s64 	%rd343, %rd304, %rd342;
	add.s64 	%rd344, %rd308, %rd339;
	shl.b64 	%rd345, %rd344, 2;
	and.b64  	%rd346, %rd345, 17179869180;
	add.s64 	%rd347, %rd304, %rd346;
	ld.f32 	%f956, [%rd337];
	ld.f32 	%f957, [%rd333];
	sub.f32 	%f958, %f956, %f957;
	ld.f32 	%f959, [%rd312];
	ld.f32 	%f960, [%rd307];
	sub.f32 	%f961, %f959, %f960;
	ld.f32 	%f962, [%rd320];
	sub.f32 	%f963, %f962, %f960;
	ld.f32 	%f964, [%rd324];
	sub.f32 	%f965, %f964, %f962;
	sub.f32 	%f966, %f965, %f961;
	sub.f32 	%f967, %f960, %f957;
	sub.f32 	%f968, %f961, %f958;
	ld.f32 	%f969, [%rd343];
	sub.f32 	%f970, %f969, %f957;
	sub.f32 	%f971, %f963, %f970;
	ld.f32 	%f972, [%rd347];
	sub.f32 	%f973, %f972, %f969;
	sub.f32 	%f974, %f973, %f958;
	sub.f32 	%f975, %f966, %f974;
	mul.f32 	%f976, %f945, %f946;
	mul.f32 	%f977, %f953, %f954;
	mul.f32 	%f978, %f946, %f953;
	fma.rn.f32 	%f979, %f945, %f954, %f978;
	neg.f32 	%f980, %f961;
	fma.rn.f32 	%f981, %f968, %f947, %f980;
	neg.f32 	%f982, %f963;
	fma.rn.f32 	%f983, %f971, %f947, %f982;
	neg.f32 	%f984, %f966;
	fma.rn.f32 	%f985, %f975, %f947, %f984;
	neg.f32 	%f986, %f960;
	fma.rn.f32 	%f987, %f967, %f947, %f986;
	mul.f32 	%f988, %f976, %f985;
	fma.rn.f32 	%f989, %f946, %f983, %f988;
	fma.rn.f32 	%f990, %f945, %f981, %f989;
	add.f32 	%f367, %f987, %f990;
	mul.f32 	%f991, %f954, %f983;
	fma.rn.f32 	%f992, %f953, %f981, %f991;
	fma.rn.f32 	%f993, %f979, %f985, %f992;
	mul.f32 	%f994, %f975, %f976;
	fma.rn.f32 	%f995, %f971, %f946, %f994;
	fma.rn.f32 	%f996, %f968, %f945, %f995;
	add.f32 	%f997, %f967, %f996;
	fma.rn.f32 	%f368, %f955, %f997, %f993;
	mul.f32 	%f998, %f975, %f979;
	fma.rn.f32 	%f999, %f971, %f954, %f998;
	fma.rn.f32 	%f1000, %f968, %f953, %f999;
	mul.f32 	%f1001, %f955, %f1000;
	fma.rn.f32 	%f369, %f977, %f985, %f1001;
	mul.f32 	%f1002, %f975, %f977;
	mul.f32 	%f370, %f955, %f1002;
	ld.u8 	%rs6, [%rd1+192];
	setp.eq.s16 	%p53, %rs6, 0;
	@%p53 bra 	$L__BB7_69;

	mul.f32 	%f1003, %f1228, %f370;
	mul.f32 	%f1004, %f1228, %f1003;
	mul.f32 	%f1005, %f1228, %f369;
	mul.f32 	%f1006, %f1228, %f1005;
	fma.rn.f32 	%f1007, %f1228, %f1004, %f1006;
	fma.rn.f32 	%f1008, %f1228, %f368, %f1007;
	add.f32 	%f1009, %f367, %f1008;
	setp.leu.f32 	%p54, %f1009, 0f80000000;
	@%p54 bra 	$L__BB7_69;

	mov.u32 	%r332, 254;
	// begin inline asm
	call (%r331), _optix_report_intersection_0, (%f1228, %r332);
	// end inline asm
	bra.uni 	$L__BB7_90;

$L__BB7_69:
	setp.neu.f32 	%p55, %f370, 0f00000000;
	@%p55 bra 	$L__BB7_77;
	bra.uni 	$L__BB7_70;

$L__BB7_77:
	mul.f32 	%f377, %f370, 0f40400000;
	setp.eq.f32 	%p76, %f377, 0f00000000;
	add.f32 	%f378, %f369, %f369;
	setp.eq.f32 	%p77, %f378, 0f00000000;
	and.pred  	%p78, %p76, %p77;
	mov.pred 	%p108, -1;
	mov.f32 	%f1233, %f1232;
	@%p78 bra 	$L__BB7_80;

	neg.f32 	%f1027, %f368;
	div.rn.f32 	%f1232, %f1027, %f378;
	mul.f32 	%f1028, %f377, 0fC0800000;
	mul.f32 	%f1029, %f1028, %f368;
	fma.rn.f32 	%f380, %f378, %f378, %f1029;
	setp.neu.f32 	%p80, %f377, 0f00000000;
	setp.lt.f32 	%p81, %f380, 0f00000000;
	and.pred  	%p82, %p81, %p80;
	mov.f32 	%f1233, %f1232;
	@%p82 bra 	$L__BB7_80;

	mov.b32 	%r342, %f378;
	and.b32  	%r343, %r342, -2147483648;
	sqrt.rn.f32 	%f1030, %f380;
	mov.b32 	%r344, %f1030;
	and.b32  	%r345, %r344, 2147483647;
	or.b32  	%r346, %r345, %r343;
	mov.b32 	%f1031, %r346;
	add.f32 	%f1032, %f378, %f1031;
	mul.f32 	%f1033, %f1032, 0fBF000000;
	div.rn.f32 	%f1034, %f1033, %f377;
	div.rn.f32 	%f1035, %f368, %f1033;
	min.f32 	%f1036, %f1034, %f1035;
	max.f32 	%f1037, %f1034, %f1035;
	selp.f32 	%f1233, %f1232, %f1036, %p76;
	selp.f32 	%f1232, %f1232, %f1037, %p76;
	mov.pred 	%p108, 0;

$L__BB7_80:
	mul.f32 	%f1038, %f1228, %f370;
	mul.f32 	%f1039, %f1228, %f1038;
	mul.f32 	%f1040, %f1228, %f369;
	mul.f32 	%f1041, %f1228, %f1040;
	fma.rn.f32 	%f1042, %f1228, %f1039, %f1041;
	fma.rn.f32 	%f1043, %f1228, %f368, %f1042;
	add.f32 	%f385, %f367, %f1043;
	neg.f32 	%f1239, %f385;
	mul.f32 	%f1044, %f1229, %f370;
	mul.f32 	%f1045, %f1229, %f1044;
	mul.f32 	%f1046, %f1229, %f369;
	mul.f32 	%f1047, %f1229, %f1046;
	fma.rn.f32 	%f1048, %f1229, %f1045, %f1047;
	fma.rn.f32 	%f1049, %f1229, %f368, %f1048;
	add.f32 	%f1050, %f367, %f1049;
	neg.f32 	%f1241, %f1050;
	mov.f32 	%f1238, %f1228;
	mov.f32 	%f1240, %f1229;
	@%p108 bra 	$L__BB7_85;

	setp.ltu.f32 	%p85, %f1233, %f1228;
	setp.gtu.f32 	%p86, %f1233, %f1229;
	or.pred  	%p87, %p85, %p86;
	mov.f32 	%f1238, %f1228;
	mov.f32 	%f1240, %f1229;
	@%p87 bra 	$L__BB7_83;

	mul.f32 	%f1051, %f370, %f1233;
	mul.f32 	%f1052, %f1233, %f1051;
	mul.f32 	%f1053, %f1233, %f1052;
	mul.f32 	%f1054, %f369, %f1233;
	fma.rn.f32 	%f1055, %f1233, %f1054, %f1053;
	fma.rn.f32 	%f1056, %f368, %f1233, %f1055;
	add.f32 	%f1057, %f367, %f1056;
	neg.f32 	%f1058, %f1057;
	mul.f32 	%f1059, %f385, %f1057;
	setp.le.f32 	%p88, %f1059, 0f00000000;
	selp.f32 	%f1238, %f1228, %f1233, %p88;
	selp.f32 	%f1239, %f1239, %f1058, %p88;
	selp.f32 	%f1240, %f1233, %f1229, %p88;
	selp.f32 	%f1241, %f1058, %f1241, %p88;

$L__BB7_83:
	setp.gtu.f32 	%p89, %f1232, %f1240;
	setp.gtu.f32 	%p90, %f1238, %f1232;
	or.pred  	%p91, %p90, %p89;
	@%p91 bra 	$L__BB7_85;

	mul.f32 	%f1060, %f370, %f1232;
	mul.f32 	%f1061, %f1232, %f1060;
	mul.f32 	%f1062, %f1232, %f1061;
	mul.f32 	%f1063, %f369, %f1232;
	fma.rn.f32 	%f1064, %f1232, %f1063, %f1062;
	fma.rn.f32 	%f1065, %f368, %f1232, %f1064;
	add.f32 	%f1066, %f367, %f1065;
	neg.f32 	%f1067, %f1066;
	mul.f32 	%f1068, %f1239, %f1067;
	setp.le.f32 	%p92, %f1068, 0f00000000;
	selp.f32 	%f1238, %f1238, %f1232, %p92;
	selp.f32 	%f1239, %f1239, %f1067, %p92;
	selp.f32 	%f1240, %f1232, %f1240, %p92;
	selp.f32 	%f1241, %f1067, %f1241, %p92;

$L__BB7_85:
	mul.f32 	%f1070, %f1239, %f1241;
	setp.gt.f32 	%p94, %f1070, 0f00000000;
	mov.pred 	%p109, 0;
	mov.f32 	%f1246, 0f00000000;
	@%p94 bra 	$L__BB7_88;

	mov.u32 	%r354, 0;
	mov.pred 	%p109, -1;

$L__BB7_87:
	sub.f32 	%f1071, %f1241, %f1239;
	div.rn.f32 	%f1072, %f1239, %f1071;
	sub.f32 	%f1073, %f1240, %f1238;
	mul.f32 	%f1074, %f1072, %f1073;
	sub.f32 	%f1246, %f1238, %f1074;
	mul.f32 	%f1075, %f370, %f1246;
	mul.f32 	%f1076, %f1246, %f1075;
	mul.f32 	%f1077, %f1246, %f1076;
	mul.f32 	%f1078, %f369, %f1246;
	fma.rn.f32 	%f1079, %f1246, %f1078, %f1077;
	fma.rn.f32 	%f1080, %f368, %f1246, %f1079;
	add.f32 	%f1081, %f367, %f1080;
	neg.f32 	%f1082, %f1081;
	mul.f32 	%f1083, %f1239, %f1082;
	setp.le.f32 	%p96, %f1083, 0f00000000;
	selp.f32 	%f1241, %f1082, %f1241, %p96;
	selp.f32 	%f1239, %f1239, %f1082, %p96;
	selp.f32 	%f1240, %f1246, %f1240, %p96;
	selp.f32 	%f1238, %f1238, %f1246, %p96;
	abs.f32 	%f1084, %f1082;
	cvt.f64.f32 	%fd1, %f1084;
	setp.geu.f64 	%p97, %fd1, 0d3F70624DD2F1A9FC;
	setp.lt.f64 	%p98, %fd1, 0d3F70624DD2F1A9FC;
	add.s32 	%r348, %r354, 1;
	setp.lt.u32 	%p99, %r348, 51;
	selp.b32 	%r354, %r354, %r348, %p98;
	and.pred  	%p100, %p99, %p97;
	@%p100 bra 	$L__BB7_87;

$L__BB7_88:
	setp.gtu.f32 	%p101, %f1228, %f1246;
	not.pred 	%p102, %p109;
	or.pred  	%p103, %p101, %p102;
	setp.gtu.f32 	%p104, %f1246, %f1229;
	or.pred  	%p105, %p104, %p103;
	@%p105 bra 	$L__BB7_90;

	mov.u32 	%r350, 254;
	// begin inline asm
	call (%r349), _optix_report_intersection_0, (%f1246, %r350);
	// end inline asm
	bra.uni 	$L__BB7_90;

$L__BB7_70:
	setp.eq.f32 	%p57, %f369, 0f00000000;
	setp.eq.f32 	%p58, %f368, 0f00000000;
	and.pred  	%p59, %p57, %p58;
	mov.pred 	%p107, 0;
	@%p59 bra 	$L__BB7_73;

	neg.f32 	%f1012, %f367;
	div.rn.f32 	%f1230, %f1012, %f368;
	mul.f32 	%f1013, %f369, 0fC0800000;
	mul.f32 	%f1014, %f367, %f1013;
	fma.rn.f32 	%f372, %f368, %f368, %f1014;
	setp.neu.f32 	%p61, %f369, 0f00000000;
	setp.lt.f32 	%p62, %f372, 0f00000000;
	and.pred  	%p63, %p62, %p61;
	mov.f32 	%f1231, %f1230;
	@%p63 bra 	$L__BB7_73;

	mov.b32 	%r333, %f368;
	and.b32  	%r334, %r333, -2147483648;
	sqrt.rn.f32 	%f1015, %f372;
	mov.b32 	%r335, %f1015;
	and.b32  	%r336, %r335, 2147483647;
	or.b32  	%r337, %r336, %r334;
	mov.b32 	%f1016, %r337;
	add.f32 	%f1017, %f368, %f1016;
	mul.f32 	%f1018, %f1017, 0fBF000000;
	div.rn.f32 	%f1019, %f1018, %f369;
	div.rn.f32 	%f1020, %f367, %f1018;
	min.f32 	%f1021, %f1019, %f1020;
	max.f32 	%f1022, %f1019, %f1020;
	selp.f32 	%f373, %f1230, %f1021, %p57;
	selp.f32 	%f1231, %f1230, %f1022, %p57;
	mov.pred 	%p107, -1;
	mov.f32 	%f1230, %f373;

$L__BB7_73:
	setp.le.f32 	%p66, %f1228, %f1230;
	and.pred  	%p67, %p66, %p107;
	setp.le.f32 	%p68, %f1230, %f1229;
	and.pred  	%p69, %p68, %p67;
	@%p69 bra 	$L__BB7_76;
	bra.uni 	$L__BB7_74;

$L__BB7_76:
	mov.u32 	%r341, 254;
	// begin inline asm
	call (%r340), _optix_report_intersection_0, (%f1230, %r341);
	// end inline asm
	bra.uni 	$L__BB7_90;

$L__BB7_74:
	setp.gtu.f32 	%p70, %f1228, %f1231;
	not.pred 	%p71, %p107;
	or.pred  	%p72, %p70, %p71;
	setp.gtu.f32 	%p73, %f1231, %f1229;
	or.pred  	%p74, %p73, %p72;
	@%p74 bra 	$L__BB7_90;

	mov.u32 	%r339, 254;
	// begin inline asm
	call (%r338), _optix_report_intersection_0, (%f1231, %r339);
	// end inline asm

$L__BB7_90:
	ret;

}
	// .globl	__closesthit__sdfgrid
.visible .entry __closesthit__sdfgrid()
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<2>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// end inline asm
	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	ld.u32 	%r11, [%rd1];
	mov.b32 	%r3, %f1;
	mov.u32 	%r2, 0;
	// begin inline asm
	call _optix_set_payload, (%r2, %r3);
	// end inline asm
	mov.u32 	%r4, 1;
	// begin inline asm
	call _optix_set_payload, (%r4, %r14);
	// end inline asm
	mov.u32 	%r6, 2;
	// begin inline asm
	call _optix_set_payload, (%r6, %r15);
	// end inline asm
	mov.u32 	%r8, 3;
	// begin inline asm
	call _optix_set_payload, (%r8, %r1);
	// end inline asm
	mov.u32 	%r10, 4;
	// begin inline asm
	call _optix_set_payload, (%r10, %r11);
	// end inline asm
	mov.u32 	%r13, 5;
	// begin inline asm
	call (%r12), _optix_get_payload, (%r13);
	// end inline asm
	setp.eq.s32 	%p1, %r12, 0;
	@%p1 bra 	$L__BB8_2;

	// begin inline asm
	call (%r16), _optix_read_instance_id, ();
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r13, %r16);
	// end inline asm

$L__BB8_2:
	ret;

}
	// .globl	__intersection__sphere
.visible .entry __intersection__sphere()
{
	.reg .pred 	%p<50>;
	.reg .f32 	%f<993>;
	.reg .b32 	%r<323>;
	.reg .b64 	%rd<259>;


	// begin inline asm
	call (%rd17), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd17+8];
	// begin inline asm
	call (%f930), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f931), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f932), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p2, %r9, 0;
	@%p2 bra 	$L__BB9_21;

	// begin inline asm
	call (%r10), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f369), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p3, %r10, 0;
	@%p3 bra 	$L__BB9_19;

	mov.u32 	%r321, 0;

$L__BB9_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd18), _optix_get_transform_list_handle, (%r321);
	// end inline asm
	// begin inline asm
	call (%r13), _optix_get_transform_type_from_handle, (%rd18);
	// end inline asm
	or.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p4, %r14, 3;
	@%p4 bra 	$L__BB9_9;
	bra.uni 	$L__BB9_4;

$L__BB9_9:
	setp.eq.s32 	%p7, %r13, 2;
	@%p7 bra 	$L__BB9_13;
	bra.uni 	$L__BB9_10;

$L__BB9_13:
	// begin inline asm
	call (%rd90), _optix_get_matrix_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd92, %rd90;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd92];
	// end inline asm
	add.s64 	%rd96, %rd90, 16;
	// begin inline asm
	cvta.to.global.u64 %rd95, %rd96;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd95];
	// end inline asm
	add.s64 	%rd99, %rd90, 32;
	// begin inline asm
	cvta.to.global.u64 %rd98, %rd99;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd98];
	// end inline asm
	add.s64 	%rd102, %rd90, 48;
	// begin inline asm
	cvta.to.global.u64 %rd101, %rd102;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd101];
	// end inline asm
	add.s64 	%rd105, %rd90, 64;
	// begin inline asm
	cvta.to.global.u64 %rd104, %rd105;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd104];
	// end inline asm
	add.s64 	%rd108, %rd90, 80;
	// begin inline asm
	cvta.to.global.u64 %rd107, %rd108;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd107];
	// end inline asm
	add.s64 	%rd111, %rd90, 96;
	// begin inline asm
	cvta.to.global.u64 %rd110, %rd111;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd110];
	// end inline asm
	add.s64 	%rd114, %rd90, 112;
	// begin inline asm
	cvta.to.global.u64 %rd113, %rd114;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd113];
	// end inline asm
	mov.b32 	%f497, %r105;
	mov.b32 	%f498, %r106;
	and.b32  	%r146, %r104, 65535;
	add.s32 	%r147, %r146, -1;
	cvt.rn.f32.s32 	%f499, %r147;
	sub.f32 	%f500, %f369, %f497;
	mul.f32 	%f501, %f500, %f499;
	sub.f32 	%f502, %f498, %f497;
	div.rn.f32 	%f503, %f501, %f502;
	min.f32 	%f504, %f499, %f503;
	mov.f32 	%f505, 0f00000000;
	max.f32 	%f506, %f505, %f504;
	cvt.rmi.f32.f32 	%f507, %f506;
	sub.f32 	%f90, %f506, %f507;
	cvt.rzi.s32.f32 	%r148, %f507;
	mul.wide.s32 	%rd125, %r148, 48;
	add.s64 	%rd117, %rd99, %rd125;
	// begin inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd116];
	// end inline asm
	mov.b32 	%f885, %r134;
	mov.b32 	%f884, %r135;
	mov.b32 	%f883, %r136;
	mov.b32 	%f882, %r137;
	add.s64 	%rd120, %rd117, 16;
	// begin inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd119];
	// end inline asm
	mov.b32 	%f889, %r138;
	mov.b32 	%f888, %r139;
	mov.b32 	%f887, %r140;
	mov.b32 	%f886, %r141;
	add.s64 	%rd123, %rd117, 32;
	// begin inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd122];
	// end inline asm
	mov.b32 	%f893, %r142;
	mov.b32 	%f892, %r143;
	mov.b32 	%f891, %r144;
	mov.b32 	%f890, %r145;
	setp.leu.f32 	%p9, %f90, 0f00000000;
	@%p9 bra 	$L__BB9_15;

	cvt.rmi.f32.f32 	%f853, %f506;
	cvt.rzi.s32.f32 	%r320, %f853;
	cvt.s64.s32 	%rd256, %r320;
	mov.f32 	%f508, 0f3F800000;
	sub.f32 	%f509, %f508, %f90;
	mul.lo.s64 	%rd135, %rd256, 48;
	add.s64 	%rd136, %rd90, %rd135;
	add.s64 	%rd127, %rd136, 80;
	// begin inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r149,%r150,%r151,%r152}, [%rd126];
	// end inline asm
	mov.b32 	%f510, %r149;
	mov.b32 	%f511, %r150;
	mov.b32 	%f512, %r151;
	mov.b32 	%f513, %r152;
	mul.f32 	%f514, %f90, %f510;
	mul.f32 	%f515, %f90, %f511;
	mul.f32 	%f516, %f90, %f512;
	mul.f32 	%f517, %f90, %f513;
	fma.rn.f32 	%f885, %f509, %f885, %f514;
	fma.rn.f32 	%f884, %f509, %f884, %f515;
	fma.rn.f32 	%f883, %f509, %f883, %f516;
	fma.rn.f32 	%f882, %f509, %f882, %f517;
	add.s64 	%rd130, %rd136, 96;
	// begin inline asm
	cvta.to.global.u64 %rd129, %rd130;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r153,%r154,%r155,%r156}, [%rd129];
	// end inline asm
	mov.b32 	%f518, %r153;
	mov.b32 	%f519, %r154;
	mov.b32 	%f520, %r155;
	mov.b32 	%f521, %r156;
	mul.f32 	%f522, %f90, %f518;
	mul.f32 	%f523, %f90, %f519;
	mul.f32 	%f524, %f90, %f520;
	mul.f32 	%f525, %f90, %f521;
	fma.rn.f32 	%f889, %f509, %f889, %f522;
	fma.rn.f32 	%f888, %f509, %f888, %f523;
	fma.rn.f32 	%f887, %f509, %f887, %f524;
	fma.rn.f32 	%f886, %f509, %f886, %f525;
	add.s64 	%rd133, %rd136, 112;
	// begin inline asm
	cvta.to.global.u64 %rd132, %rd133;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r157,%r158,%r159,%r160}, [%rd132];
	// end inline asm
	mov.b32 	%f526, %r157;
	mov.b32 	%f527, %r158;
	mov.b32 	%f528, %r159;
	mov.b32 	%f529, %r160;
	mul.f32 	%f530, %f90, %f526;
	mul.f32 	%f531, %f90, %f527;
	mul.f32 	%f532, %f90, %f528;
	mul.f32 	%f533, %f90, %f529;
	fma.rn.f32 	%f893, %f509, %f893, %f530;
	fma.rn.f32 	%f892, %f509, %f892, %f531;
	fma.rn.f32 	%f891, %f509, %f891, %f532;
	fma.rn.f32 	%f890, %f509, %f890, %f533;
	bra.uni 	$L__BB9_15;

$L__BB9_4:
	mov.f32 	%f894, 0f00000000;
	mov.f32 	%f897, 0f3F800000;
	setp.eq.s32 	%p5, %r13, 4;
	@%p5 bra 	$L__BB9_7;

	setp.ne.s32 	%p6, %r13, 1;
	mov.f32 	%f895, %f894;
	mov.f32 	%f896, %f894;
	mov.f32 	%f898, %f894;
	mov.f32 	%f899, %f894;
	mov.f32 	%f900, %f897;
	mov.f32 	%f901, %f894;
	mov.f32 	%f902, %f894;
	mov.f32 	%f903, %f897;
	mov.f32 	%f904, %f894;
	mov.f32 	%f905, %f894;
	@%p6 bra 	$L__BB9_16;

	// begin inline asm
	call (%rd20), _optix_get_static_transform_from_handle, (%rd18);
	// end inline asm
	add.s64 	%rd257, %rd20, 64;
	bra.uni 	$L__BB9_8;

$L__BB9_10:
	// begin inline asm
	call (%rd33), _optix_get_srt_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd35, %rd33;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r27,%r28,%r29,%r30}, [%rd35];
	// end inline asm
	add.s64 	%rd39, %rd33, 16;
	// begin inline asm
	cvta.to.global.u64 %rd38, %rd39;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r31,%r32,%r33,%r34}, [%rd38];
	// end inline asm
	add.s64 	%rd42, %rd33, 32;
	// begin inline asm
	cvta.to.global.u64 %rd41, %rd42;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r35,%r36,%r37,%r38}, [%rd41];
	// end inline asm
	add.s64 	%rd45, %rd33, 48;
	// begin inline asm
	cvta.to.global.u64 %rd44, %rd45;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r39,%r40,%r41,%r42}, [%rd44];
	// end inline asm
	add.s64 	%rd48, %rd33, 64;
	// begin inline asm
	cvta.to.global.u64 %rd47, %rd48;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r43,%r44,%r45,%r46}, [%rd47];
	// end inline asm
	add.s64 	%rd51, %rd33, 80;
	// begin inline asm
	cvta.to.global.u64 %rd50, %rd51;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd50];
	// end inline asm
	add.s64 	%rd54, %rd33, 96;
	// begin inline asm
	cvta.to.global.u64 %rd53, %rd54;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd53];
	// end inline asm
	add.s64 	%rd57, %rd33, 112;
	// begin inline asm
	cvta.to.global.u64 %rd56, %rd57;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd56];
	// end inline asm
	add.s64 	%rd60, %rd33, 128;
	// begin inline asm
	cvta.to.global.u64 %rd59, %rd60;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd59];
	// end inline asm
	add.s64 	%rd63, %rd33, 144;
	// begin inline asm
	cvta.to.global.u64 %rd62, %rd63;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd62];
	// end inline asm
	mov.b32 	%f384, %r30;
	mov.b32 	%f385, %r31;
	and.b32  	%r83, %r29, 65535;
	add.s32 	%r84, %r83, -1;
	cvt.rn.f32.s32 	%f386, %r84;
	sub.f32 	%f387, %f369, %f384;
	mul.f32 	%f388, %f387, %f386;
	sub.f32 	%f389, %f385, %f384;
	div.rn.f32 	%f390, %f388, %f389;
	min.f32 	%f391, %f386, %f390;
	mov.f32 	%f392, 0f00000000;
	max.f32 	%f393, %f392, %f391;
	cvt.rmi.f32.f32 	%f394, %f393;
	sub.f32 	%f29, %f393, %f394;
	cvt.rzi.s32.f32 	%r85, %f394;
	mul.wide.s32 	%rd77, %r85, 64;
	add.s64 	%rd66, %rd42, %rd77;
	// begin inline asm
	cvta.to.global.u64 %rd65, %rd66;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd65];
	// end inline asm
	mov.b32 	%f866, %r67;
	mov.b32 	%f867, %r68;
	mov.b32 	%f868, %r69;
	mov.b32 	%f869, %r70;
	add.s64 	%rd69, %rd66, 16;
	// begin inline asm
	cvta.to.global.u64 %rd68, %rd69;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd68];
	// end inline asm
	mov.b32 	%f870, %r71;
	mov.b32 	%f871, %r72;
	mov.b32 	%f872, %r73;
	mov.b32 	%f873, %r74;
	add.s64 	%rd72, %rd66, 32;
	// begin inline asm
	cvta.to.global.u64 %rd71, %rd72;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd71];
	// end inline asm
	mov.b32 	%f874, %r75;
	mov.b32 	%f875, %r76;
	mov.b32 	%f876, %r77;
	mov.b32 	%f877, %r78;
	add.s64 	%rd75, %rd66, 48;
	// begin inline asm
	cvta.to.global.u64 %rd74, %rd75;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd74];
	// end inline asm
	mov.b32 	%f878, %r79;
	mov.b32 	%f879, %r80;
	mov.b32 	%f880, %r81;
	mov.b32 	%f881, %r82;
	setp.leu.f32 	%p8, %f29, 0f00000000;
	@%p8 bra 	$L__BB9_12;

	mov.f32 	%f395, 0f3F800000;
	sub.f32 	%f396, %f395, %f29;
	add.s64 	%rd79, %rd66, 64;
	// begin inline asm
	cvta.to.global.u64 %rd78, %rd79;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r86,%r87,%r88,%r89}, [%rd78];
	// end inline asm
	mov.b32 	%f397, %r86;
	mov.b32 	%f398, %r87;
	mov.b32 	%f399, %r88;
	mov.b32 	%f400, %r89;
	mul.f32 	%f401, %f29, %f397;
	mul.f32 	%f402, %f29, %f398;
	mul.f32 	%f403, %f29, %f399;
	mul.f32 	%f404, %f29, %f400;
	fma.rn.f32 	%f866, %f396, %f866, %f401;
	fma.rn.f32 	%f867, %f396, %f867, %f402;
	fma.rn.f32 	%f868, %f396, %f868, %f403;
	fma.rn.f32 	%f869, %f396, %f869, %f404;
	add.s64 	%rd82, %rd66, 80;
	// begin inline asm
	cvta.to.global.u64 %rd81, %rd82;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd81];
	// end inline asm
	mov.b32 	%f405, %r90;
	mov.b32 	%f406, %r91;
	mov.b32 	%f407, %r92;
	mov.b32 	%f408, %r93;
	mul.f32 	%f409, %f29, %f405;
	mul.f32 	%f410, %f29, %f406;
	mul.f32 	%f411, %f29, %f407;
	mul.f32 	%f412, %f29, %f408;
	fma.rn.f32 	%f870, %f396, %f870, %f409;
	fma.rn.f32 	%f871, %f396, %f871, %f410;
	fma.rn.f32 	%f872, %f396, %f872, %f411;
	fma.rn.f32 	%f873, %f396, %f873, %f412;
	add.s64 	%rd85, %rd66, 96;
	// begin inline asm
	cvta.to.global.u64 %rd84, %rd85;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd84];
	// end inline asm
	mov.b32 	%f413, %r94;
	mov.b32 	%f414, %r95;
	mov.b32 	%f415, %r96;
	mov.b32 	%f416, %r97;
	mul.f32 	%f417, %f29, %f413;
	mul.f32 	%f418, %f29, %f414;
	mul.f32 	%f419, %f29, %f415;
	mul.f32 	%f420, %f29, %f416;
	fma.rn.f32 	%f874, %f396, %f874, %f417;
	fma.rn.f32 	%f421, %f396, %f875, %f418;
	fma.rn.f32 	%f422, %f396, %f876, %f419;
	fma.rn.f32 	%f423, %f396, %f877, %f420;
	add.s64 	%rd88, %rd66, 112;
	// begin inline asm
	cvta.to.global.u64 %rd87, %rd88;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd87];
	// end inline asm
	mov.b32 	%f424, %r98;
	mov.b32 	%f425, %r99;
	mov.b32 	%f426, %r100;
	mov.b32 	%f427, %r101;
	mul.f32 	%f428, %f29, %f424;
	mul.f32 	%f429, %f29, %f425;
	mul.f32 	%f430, %f29, %f426;
	mul.f32 	%f431, %f29, %f427;
	fma.rn.f32 	%f432, %f396, %f878, %f428;
	fma.rn.f32 	%f879, %f396, %f879, %f429;
	fma.rn.f32 	%f880, %f396, %f880, %f430;
	fma.rn.f32 	%f881, %f396, %f881, %f431;
	mul.f32 	%f433, %f422, %f422;
	fma.rn.f32 	%f434, %f421, %f421, %f433;
	fma.rn.f32 	%f435, %f423, %f423, %f434;
	fma.rn.f32 	%f436, %f432, %f432, %f435;
	sqrt.rn.f32 	%f437, %f436;
	rcp.rn.f32 	%f438, %f437;
	mul.f32 	%f875, %f421, %f438;
	mul.f32 	%f876, %f422, %f438;
	mul.f32 	%f877, %f423, %f438;
	mul.f32 	%f878, %f438, %f432;

$L__BB9_12:
	mul.f32 	%f439, %f876, %f876;
	fma.rn.f32 	%f440, %f875, %f875, %f439;
	fma.rn.f32 	%f441, %f877, %f877, %f440;
	fma.rn.f32 	%f442, %f878, %f878, %f441;
	rcp.rn.f32 	%f443, %f442;
	mul.f32 	%f444, %f875, %f443;
	mul.f32 	%f445, %f876, %f443;
	mul.f32 	%f446, %f877, %f443;
	mul.f32 	%f447, %f878, %f443;
	mul.f32 	%f448, %f875, %f444;
	mul.f32 	%f449, %f876, %f445;
	mul.f32 	%f450, %f877, %f446;
	mul.f32 	%f451, %f875, %f445;
	mul.f32 	%f452, %f877, %f447;
	mul.f32 	%f453, %f875, %f446;
	mul.f32 	%f454, %f876, %f447;
	mul.f32 	%f455, %f876, %f446;
	mul.f32 	%f456, %f875, %f447;
	sub.f32 	%f457, %f448, %f449;
	sub.f32 	%f458, %f457, %f450;
	fma.rn.f32 	%f459, %f878, %f447, %f458;
	sub.f32 	%f460, %f451, %f452;
	add.f32 	%f461, %f460, %f460;
	add.f32 	%f462, %f453, %f454;
	add.f32 	%f463, %f462, %f462;
	add.f32 	%f464, %f451, %f452;
	add.f32 	%f465, %f464, %f464;
	sub.f32 	%f466, %f449, %f448;
	sub.f32 	%f467, %f466, %f450;
	fma.rn.f32 	%f468, %f878, %f447, %f467;
	sub.f32 	%f469, %f455, %f456;
	add.f32 	%f470, %f469, %f469;
	sub.f32 	%f471, %f453, %f454;
	add.f32 	%f472, %f471, %f471;
	add.f32 	%f473, %f455, %f456;
	add.f32 	%f474, %f473, %f473;
	neg.f32 	%f475, %f448;
	sub.f32 	%f476, %f475, %f449;
	add.f32 	%f477, %f450, %f476;
	fma.rn.f32 	%f478, %f878, %f447, %f477;
	mul.f32 	%f479, %f869, %f459;
	fma.rn.f32 	%f480, %f872, %f461, %f479;
	fma.rn.f32 	%f481, %f874, %f463, %f480;
	add.f32 	%f882, %f879, %f481;
	mul.f32 	%f482, %f872, %f468;
	fma.rn.f32 	%f483, %f869, %f465, %f482;
	fma.rn.f32 	%f484, %f874, %f470, %f483;
	add.f32 	%f886, %f880, %f484;
	mul.f32 	%f485, %f872, %f474;
	fma.rn.f32 	%f486, %f869, %f472, %f485;
	fma.rn.f32 	%f487, %f874, %f478, %f486;
	add.f32 	%f890, %f881, %f487;
	mul.f32 	%f488, %f868, %f459;
	fma.rn.f32 	%f489, %f871, %f461, %f488;
	fma.rn.f32 	%f883, %f873, %f463, %f489;
	mul.f32 	%f490, %f871, %f468;
	fma.rn.f32 	%f491, %f868, %f465, %f490;
	fma.rn.f32 	%f887, %f873, %f470, %f491;
	mul.f32 	%f492, %f871, %f474;
	fma.rn.f32 	%f493, %f868, %f472, %f492;
	fma.rn.f32 	%f891, %f873, %f478, %f493;
	mul.f32 	%f494, %f867, %f459;
	fma.rn.f32 	%f884, %f870, %f461, %f494;
	mul.f32 	%f495, %f870, %f468;
	fma.rn.f32 	%f888, %f867, %f465, %f495;
	mul.f32 	%f496, %f870, %f474;
	fma.rn.f32 	%f892, %f867, %f472, %f496;
	mul.f32 	%f885, %f866, %f459;
	mul.f32 	%f889, %f866, %f465;
	mul.f32 	%f893, %f866, %f472;

$L__BB9_15:
	mul.f32 	%f534, %f887, %f892;
	mul.f32 	%f535, %f888, %f891;
	sub.f32 	%f536, %f535, %f534;
	mul.f32 	%f537, %f885, %f536;
	mul.f32 	%f538, %f887, %f893;
	mul.f32 	%f539, %f889, %f891;
	sub.f32 	%f540, %f539, %f538;
	mul.f32 	%f541, %f884, %f540;
	sub.f32 	%f542, %f537, %f541;
	mul.f32 	%f543, %f888, %f893;
	mul.f32 	%f544, %f889, %f892;
	sub.f32 	%f545, %f544, %f543;
	fma.rn.f32 	%f546, %f883, %f545, %f542;
	rcp.rn.f32 	%f547, %f546;
	mul.f32 	%f897, %f536, %f547;
	mul.f32 	%f548, %f884, %f891;
	mul.f32 	%f549, %f883, %f892;
	sub.f32 	%f550, %f549, %f548;
	mul.f32 	%f896, %f550, %f547;
	mul.f32 	%f551, %f883, %f888;
	mul.f32 	%f552, %f884, %f887;
	sub.f32 	%f553, %f552, %f551;
	mul.f32 	%f895, %f553, %f547;
	sub.f32 	%f554, %f538, %f539;
	mul.f32 	%f901, %f554, %f547;
	mul.f32 	%f555, %f883, %f893;
	mul.f32 	%f556, %f885, %f891;
	sub.f32 	%f557, %f556, %f555;
	mul.f32 	%f900, %f557, %f547;
	mul.f32 	%f558, %f885, %f887;
	mul.f32 	%f559, %f883, %f889;
	sub.f32 	%f560, %f559, %f558;
	mul.f32 	%f899, %f560, %f547;
	mul.f32 	%f905, %f545, %f547;
	mul.f32 	%f561, %f885, %f892;
	mul.f32 	%f562, %f884, %f893;
	sub.f32 	%f563, %f562, %f561;
	mul.f32 	%f904, %f563, %f547;
	mul.f32 	%f564, %f884, %f889;
	mul.f32 	%f565, %f885, %f888;
	sub.f32 	%f566, %f565, %f564;
	mul.f32 	%f903, %f566, %f547;
	mul.f32 	%f567, %f882, %f897;
	neg.f32 	%f568, %f567;
	mul.f32 	%f569, %f886, %f896;
	sub.f32 	%f570, %f568, %f569;
	mul.f32 	%f571, %f890, %f895;
	sub.f32 	%f894, %f570, %f571;
	mul.f32 	%f572, %f882, %f901;
	neg.f32 	%f573, %f572;
	mul.f32 	%f574, %f886, %f900;
	sub.f32 	%f575, %f573, %f574;
	mul.f32 	%f576, %f890, %f899;
	sub.f32 	%f898, %f575, %f576;
	mul.f32 	%f577, %f882, %f905;
	neg.f32 	%f578, %f577;
	mul.f32 	%f579, %f886, %f904;
	sub.f32 	%f580, %f578, %f579;
	mul.f32 	%f581, %f890, %f903;
	sub.f32 	%f902, %f580, %f581;
	bra.uni 	$L__BB9_16;

$L__BB9_7:
	// begin inline asm
	call (%rd257), _optix_get_instance_inverse_transform_from_handle, (%rd18);
	// end inline asm

$L__BB9_8:
	// begin inline asm
	cvta.to.global.u64 %rd24, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r15,%r16,%r17,%r18}, [%rd24];
	// end inline asm
	mov.b32 	%f897, %r15;
	mov.b32 	%f896, %r16;
	mov.b32 	%f895, %r17;
	mov.b32 	%f894, %r18;
	add.s64 	%rd28, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd27, %rd28;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r19,%r20,%r21,%r22}, [%rd27];
	// end inline asm
	mov.b32 	%f901, %r19;
	mov.b32 	%f900, %r20;
	mov.b32 	%f899, %r21;
	mov.b32 	%f898, %r22;
	add.s64 	%rd31, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd30, %rd31;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r23,%r24,%r25,%r26}, [%rd30];
	// end inline asm
	mov.b32 	%f905, %r23;
	mov.b32 	%f904, %r24;
	mov.b32 	%f903, %r25;
	mov.b32 	%f902, %r26;

$L__BB9_16:
	setp.eq.s32 	%p10, %r321, 0;
	@%p10 bra 	$L__BB9_18;

	mul.f32 	%f582, %f862, %f897;
	fma.rn.f32 	%f583, %f858, %f896, %f582;
	fma.rn.f32 	%f151, %f854, %f895, %f583;
	mul.f32 	%f584, %f863, %f897;
	fma.rn.f32 	%f585, %f859, %f896, %f584;
	fma.rn.f32 	%f152, %f855, %f895, %f585;
	mul.f32 	%f586, %f864, %f897;
	fma.rn.f32 	%f587, %f860, %f896, %f586;
	fma.rn.f32 	%f153, %f856, %f895, %f587;
	mul.f32 	%f588, %f865, %f897;
	fma.rn.f32 	%f589, %f861, %f896, %f588;
	fma.rn.f32 	%f590, %f857, %f895, %f589;
	add.f32 	%f894, %f894, %f590;
	mul.f32 	%f591, %f862, %f901;
	fma.rn.f32 	%f592, %f858, %f900, %f591;
	fma.rn.f32 	%f155, %f854, %f899, %f592;
	mul.f32 	%f593, %f863, %f901;
	fma.rn.f32 	%f594, %f859, %f900, %f593;
	fma.rn.f32 	%f156, %f855, %f899, %f594;
	mul.f32 	%f595, %f864, %f901;
	fma.rn.f32 	%f596, %f860, %f900, %f595;
	fma.rn.f32 	%f157, %f856, %f899, %f596;
	mul.f32 	%f597, %f865, %f901;
	fma.rn.f32 	%f598, %f861, %f900, %f597;
	fma.rn.f32 	%f599, %f857, %f899, %f598;
	add.f32 	%f898, %f898, %f599;
	mul.f32 	%f600, %f862, %f905;
	fma.rn.f32 	%f601, %f858, %f904, %f600;
	fma.rn.f32 	%f159, %f854, %f903, %f601;
	mul.f32 	%f602, %f863, %f905;
	fma.rn.f32 	%f603, %f859, %f904, %f602;
	fma.rn.f32 	%f160, %f855, %f903, %f603;
	mul.f32 	%f604, %f864, %f905;
	fma.rn.f32 	%f605, %f860, %f904, %f604;
	fma.rn.f32 	%f161, %f856, %f903, %f605;
	mul.f32 	%f606, %f865, %f905;
	fma.rn.f32 	%f607, %f861, %f904, %f606;
	fma.rn.f32 	%f608, %f857, %f903, %f607;
	add.f32 	%f902, %f902, %f608;
	mov.f32 	%f895, %f153;
	mov.f32 	%f896, %f152;
	mov.f32 	%f897, %f151;
	mov.f32 	%f899, %f157;
	mov.f32 	%f900, %f156;
	mov.f32 	%f901, %f155;
	mov.f32 	%f903, %f161;
	mov.f32 	%f904, %f160;
	mov.f32 	%f905, %f159;

$L__BB9_18:
	add.s32 	%r321, %r321, 1;
	setp.lt.u32 	%p11, %r321, %r10;
	mov.f32 	%f854, %f905;
	mov.f32 	%f855, %f904;
	mov.f32 	%f856, %f903;
	mov.f32 	%f857, %f902;
	mov.f32 	%f858, %f901;
	mov.f32 	%f859, %f900;
	mov.f32 	%f860, %f899;
	mov.f32 	%f861, %f898;
	mov.f32 	%f862, %f897;
	mov.f32 	%f863, %f896;
	mov.f32 	%f864, %f895;
	mov.f32 	%f865, %f894;
	@%p11 bra 	$L__BB9_3;

$L__BB9_19:
	mul.f32 	%f609, %f930, %f897;
	fma.rn.f32 	%f610, %f931, %f896, %f609;
	fma.rn.f32 	%f611, %f932, %f895, %f610;
	mul.f32 	%f612, %f930, %f901;
	fma.rn.f32 	%f613, %f931, %f900, %f612;
	fma.rn.f32 	%f614, %f932, %f899, %f613;
	mul.f32 	%f615, %f930, %f905;
	fma.rn.f32 	%f616, %f931, %f904, %f615;
	fma.rn.f32 	%f617, %f932, %f903, %f616;
	add.f32 	%f932, %f902, %f617;
	add.f32 	%f931, %f898, %f614;
	add.f32 	%f930, %f894, %f611;

$L__BB9_21:
	// begin inline asm
	call (%f988), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f989), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f620), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r161), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p12, %r161, 0;
	@%p12 bra 	$L__BB9_41;

	// begin inline asm
	call (%r162), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f621), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p13, %r162, 0;
	@%p13 bra 	$L__BB9_40;

	mov.u32 	%r322, 0;

$L__BB9_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd137), _optix_get_transform_list_handle, (%r322);
	// end inline asm
	// begin inline asm
	call (%r165), _optix_get_transform_type_from_handle, (%rd137);
	// end inline asm
	or.b32  	%r166, %r165, 1;
	setp.eq.s32 	%p14, %r166, 3;
	@%p14 bra 	$L__BB9_30;
	bra.uni 	$L__BB9_25;

$L__BB9_30:
	setp.eq.s32 	%p17, %r165, 2;
	@%p17 bra 	$L__BB9_34;
	bra.uni 	$L__BB9_31;

$L__BB9_34:
	// begin inline asm
	call (%rd209), _optix_get_matrix_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd211, %rd209;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd211];
	// end inline asm
	add.s64 	%rd215, %rd209, 16;
	// begin inline asm
	cvta.to.global.u64 %rd214, %rd215;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd214];
	// end inline asm
	add.s64 	%rd218, %rd209, 32;
	// begin inline asm
	cvta.to.global.u64 %rd217, %rd218;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd217];
	// end inline asm
	add.s64 	%rd221, %rd209, 48;
	// begin inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd220];
	// end inline asm
	add.s64 	%rd224, %rd209, 64;
	// begin inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd223];
	// end inline asm
	add.s64 	%rd227, %rd209, 80;
	// begin inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd226];
	// end inline asm
	add.s64 	%rd230, %rd209, 96;
	// begin inline asm
	cvta.to.global.u64 %rd229, %rd230;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd229];
	// end inline asm
	add.s64 	%rd233, %rd209, 112;
	// begin inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd232];
	// end inline asm
	mov.b32 	%f725, %r257;
	mov.b32 	%f726, %r258;
	and.b32  	%r298, %r256, 65535;
	add.s32 	%r299, %r298, -1;
	cvt.rn.f32.s32 	%f727, %r299;
	sub.f32 	%f728, %f621, %f725;
	mul.f32 	%f729, %f728, %f727;
	sub.f32 	%f730, %f726, %f725;
	div.rn.f32 	%f731, %f729, %f730;
	min.f32 	%f732, %f727, %f731;
	mov.f32 	%f733, 0f00000000;
	max.f32 	%f734, %f733, %f732;
	cvt.rmi.f32.f32 	%f735, %f734;
	sub.f32 	%f258, %f734, %f735;
	cvt.rzi.s32.f32 	%r300, %f735;
	cvt.s64.s32 	%rd15, %r300;
	mul.wide.s32 	%rd244, %r300, 48;
	add.s64 	%rd236, %rd218, %rd244;
	// begin inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd235];
	// end inline asm
	mov.b32 	%f958, %r286;
	mov.b32 	%f959, %r287;
	mov.b32 	%f960, %r288;
	add.s64 	%rd239, %rd236, 16;
	// begin inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd238];
	// end inline asm
	mov.b32 	%f955, %r290;
	mov.b32 	%f956, %r291;
	mov.b32 	%f957, %r292;
	add.s64 	%rd242, %rd236, 32;
	// begin inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd241];
	// end inline asm
	mov.b32 	%f952, %r294;
	mov.b32 	%f953, %r295;
	mov.b32 	%f954, %r296;
	setp.leu.f32 	%p19, %f258, 0f00000000;
	@%p19 bra 	$L__BB9_36;

	mov.f32 	%f736, 0f3F800000;
	sub.f32 	%f737, %f736, %f258;
	mul.lo.s64 	%rd254, %rd15, 48;
	add.s64 	%rd255, %rd209, %rd254;
	add.s64 	%rd246, %rd255, 80;
	// begin inline asm
	cvta.to.global.u64 %rd245, %rd246;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd245];
	// end inline asm
	mov.b32 	%f738, %r301;
	mov.b32 	%f739, %r302;
	mov.b32 	%f740, %r303;
	mul.f32 	%f741, %f258, %f738;
	mul.f32 	%f742, %f258, %f739;
	mul.f32 	%f743, %f258, %f740;
	fma.rn.f32 	%f958, %f737, %f958, %f741;
	fma.rn.f32 	%f959, %f737, %f959, %f742;
	fma.rn.f32 	%f960, %f737, %f960, %f743;
	add.s64 	%rd249, %rd255, 96;
	// begin inline asm
	cvta.to.global.u64 %rd248, %rd249;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd248];
	// end inline asm
	mov.b32 	%f744, %r305;
	mov.b32 	%f745, %r306;
	mov.b32 	%f746, %r307;
	mul.f32 	%f747, %f258, %f744;
	mul.f32 	%f748, %f258, %f745;
	mul.f32 	%f749, %f258, %f746;
	fma.rn.f32 	%f955, %f737, %f955, %f747;
	fma.rn.f32 	%f956, %f737, %f956, %f748;
	fma.rn.f32 	%f957, %f737, %f957, %f749;
	add.s64 	%rd252, %rd255, 112;
	// begin inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd251];
	// end inline asm
	mov.b32 	%f750, %r309;
	mov.b32 	%f751, %r310;
	mov.b32 	%f752, %r311;
	mul.f32 	%f753, %f258, %f750;
	mul.f32 	%f754, %f258, %f751;
	mul.f32 	%f755, %f258, %f752;
	fma.rn.f32 	%f952, %f737, %f952, %f753;
	fma.rn.f32 	%f953, %f737, %f953, %f754;
	fma.rn.f32 	%f954, %f737, %f954, %f755;
	bra.uni 	$L__BB9_36;

$L__BB9_25:
	mov.f32 	%f961, 0f00000000;
	mov.f32 	%f963, 0f3F800000;
	setp.eq.s32 	%p15, %r165, 4;
	@%p15 bra 	$L__BB9_28;

	setp.ne.s32 	%p16, %r165, 1;
	mov.f32 	%f962, %f961;
	mov.f32 	%f964, %f961;
	mov.f32 	%f965, %f963;
	mov.f32 	%f966, %f961;
	mov.f32 	%f967, %f963;
	mov.f32 	%f968, %f961;
	mov.f32 	%f969, %f961;
	@%p16 bra 	$L__BB9_37;

	// begin inline asm
	call (%rd139), _optix_get_static_transform_from_handle, (%rd137);
	// end inline asm
	add.s64 	%rd258, %rd139, 64;
	bra.uni 	$L__BB9_29;

$L__BB9_31:
	// begin inline asm
	call (%rd152), _optix_get_srt_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd154, %rd152;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd154];
	// end inline asm
	add.s64 	%rd158, %rd152, 16;
	// begin inline asm
	cvta.to.global.u64 %rd157, %rd158;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd157];
	// end inline asm
	add.s64 	%rd161, %rd152, 32;
	// begin inline asm
	cvta.to.global.u64 %rd160, %rd161;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd160];
	// end inline asm
	add.s64 	%rd164, %rd152, 48;
	// begin inline asm
	cvta.to.global.u64 %rd163, %rd164;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd163];
	// end inline asm
	add.s64 	%rd167, %rd152, 64;
	// begin inline asm
	cvta.to.global.u64 %rd166, %rd167;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd166];
	// end inline asm
	add.s64 	%rd170, %rd152, 80;
	// begin inline asm
	cvta.to.global.u64 %rd169, %rd170;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd169];
	// end inline asm
	add.s64 	%rd173, %rd152, 96;
	// begin inline asm
	cvta.to.global.u64 %rd172, %rd173;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd172];
	// end inline asm
	add.s64 	%rd176, %rd152, 112;
	// begin inline asm
	cvta.to.global.u64 %rd175, %rd176;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd175];
	// end inline asm
	add.s64 	%rd179, %rd152, 128;
	// begin inline asm
	cvta.to.global.u64 %rd178, %rd179;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd178];
	// end inline asm
	add.s64 	%rd182, %rd152, 144;
	// begin inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd181];
	// end inline asm
	mov.b32 	%f633, %r182;
	mov.b32 	%f634, %r183;
	and.b32  	%r235, %r181, 65535;
	add.s32 	%r236, %r235, -1;
	cvt.rn.f32.s32 	%f635, %r236;
	sub.f32 	%f636, %f621, %f633;
	mul.f32 	%f637, %f636, %f635;
	sub.f32 	%f638, %f634, %f633;
	div.rn.f32 	%f639, %f637, %f638;
	min.f32 	%f640, %f635, %f639;
	mov.f32 	%f641, 0f00000000;
	max.f32 	%f642, %f641, %f640;
	cvt.rmi.f32.f32 	%f643, %f642;
	sub.f32 	%f218, %f642, %f643;
	cvt.rzi.s32.f32 	%r237, %f643;
	mul.wide.s32 	%rd196, %r237, 64;
	add.s64 	%rd185, %rd161, %rd196;
	// begin inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd184];
	// end inline asm
	mov.b32 	%f942, %r219;
	mov.b32 	%f943, %r220;
	mov.b32 	%f944, %r221;
	add.s64 	%rd188, %rd185, 16;
	// begin inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd187];
	// end inline asm
	mov.b32 	%f945, %r223;
	mov.b32 	%f946, %r224;
	mov.b32 	%f947, %r226;
	add.s64 	%rd191, %rd185, 32;
	// begin inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd190];
	// end inline asm
	mov.b32 	%f948, %r228;
	mov.b32 	%f949, %r229;
	mov.b32 	%f950, %r230;
	add.s64 	%rd194, %rd185, 48;
	// begin inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd193];
	// end inline asm
	mov.b32 	%f951, %r231;
	setp.leu.f32 	%p18, %f218, 0f00000000;
	@%p18 bra 	$L__BB9_33;

	mov.f32 	%f644, 0f3F800000;
	sub.f32 	%f645, %f644, %f218;
	add.s64 	%rd198, %rd185, 64;
	// begin inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd197];
	// end inline asm
	mov.b32 	%f646, %r238;
	mov.b32 	%f647, %r239;
	mov.b32 	%f648, %r240;
	mul.f32 	%f649, %f218, %f646;
	mul.f32 	%f650, %f218, %f647;
	mul.f32 	%f651, %f218, %f648;
	fma.rn.f32 	%f942, %f645, %f942, %f649;
	fma.rn.f32 	%f943, %f645, %f943, %f650;
	fma.rn.f32 	%f944, %f645, %f944, %f651;
	add.s64 	%rd201, %rd185, 80;
	// begin inline asm
	cvta.to.global.u64 %rd200, %rd201;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd200];
	// end inline asm
	mov.b32 	%f652, %r242;
	mov.b32 	%f653, %r243;
	mov.b32 	%f654, %r245;
	mul.f32 	%f655, %f218, %f652;
	mul.f32 	%f656, %f218, %f653;
	mul.f32 	%f657, %f218, %f654;
	fma.rn.f32 	%f945, %f645, %f945, %f655;
	fma.rn.f32 	%f946, %f645, %f946, %f656;
	fma.rn.f32 	%f947, %f645, %f947, %f657;
	add.s64 	%rd204, %rd185, 96;
	// begin inline asm
	cvta.to.global.u64 %rd203, %rd204;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd203];
	// end inline asm
	mov.b32 	%f658, %r247;
	mov.b32 	%f659, %r248;
	mov.b32 	%f660, %r249;
	mul.f32 	%f661, %f218, %f658;
	mul.f32 	%f662, %f218, %f659;
	mul.f32 	%f663, %f218, %f660;
	fma.rn.f32 	%f664, %f645, %f948, %f661;
	fma.rn.f32 	%f665, %f645, %f949, %f662;
	fma.rn.f32 	%f666, %f645, %f950, %f663;
	add.s64 	%rd207, %rd185, 112;
	// begin inline asm
	cvta.to.global.u64 %rd206, %rd207;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd206];
	// end inline asm
	mov.b32 	%f667, %r250;
	mul.f32 	%f668, %f218, %f667;
	fma.rn.f32 	%f669, %f645, %f951, %f668;
	mul.f32 	%f670, %f665, %f665;
	fma.rn.f32 	%f671, %f664, %f664, %f670;
	fma.rn.f32 	%f672, %f666, %f666, %f671;
	fma.rn.f32 	%f673, %f669, %f669, %f672;
	sqrt.rn.f32 	%f674, %f673;
	rcp.rn.f32 	%f675, %f674;
	mul.f32 	%f948, %f664, %f675;
	mul.f32 	%f949, %f665, %f675;
	mul.f32 	%f950, %f666, %f675;
	mul.f32 	%f951, %f675, %f669;

$L__BB9_33:
	mul.f32 	%f676, %f949, %f949;
	fma.rn.f32 	%f677, %f948, %f948, %f676;
	fma.rn.f32 	%f678, %f950, %f950, %f677;
	fma.rn.f32 	%f679, %f951, %f951, %f678;
	rcp.rn.f32 	%f680, %f679;
	mul.f32 	%f681, %f948, %f680;
	mul.f32 	%f682, %f949, %f680;
	mul.f32 	%f683, %f950, %f680;
	mul.f32 	%f684, %f951, %f680;
	mul.f32 	%f685, %f948, %f681;
	mul.f32 	%f686, %f949, %f682;
	mul.f32 	%f687, %f950, %f683;
	mul.f32 	%f688, %f948, %f682;
	mul.f32 	%f689, %f950, %f684;
	mul.f32 	%f690, %f948, %f683;
	mul.f32 	%f691, %f949, %f684;
	mul.f32 	%f692, %f949, %f683;
	mul.f32 	%f693, %f948, %f684;
	sub.f32 	%f694, %f685, %f686;
	sub.f32 	%f695, %f694, %f687;
	fma.rn.f32 	%f696, %f951, %f684, %f695;
	sub.f32 	%f697, %f688, %f689;
	add.f32 	%f698, %f697, %f697;
	add.f32 	%f699, %f690, %f691;
	add.f32 	%f700, %f699, %f699;
	add.f32 	%f701, %f688, %f689;
	add.f32 	%f702, %f701, %f701;
	sub.f32 	%f703, %f686, %f685;
	sub.f32 	%f704, %f703, %f687;
	fma.rn.f32 	%f705, %f951, %f684, %f704;
	sub.f32 	%f706, %f692, %f693;
	add.f32 	%f707, %f706, %f706;
	sub.f32 	%f708, %f690, %f691;
	add.f32 	%f709, %f708, %f708;
	add.f32 	%f710, %f692, %f693;
	add.f32 	%f711, %f710, %f710;
	neg.f32 	%f712, %f685;
	sub.f32 	%f713, %f712, %f686;
	add.f32 	%f714, %f687, %f713;
	fma.rn.f32 	%f715, %f951, %f684, %f714;
	mul.f32 	%f716, %f944, %f696;
	fma.rn.f32 	%f717, %f946, %f698, %f716;
	fma.rn.f32 	%f960, %f947, %f700, %f717;
	mul.f32 	%f718, %f946, %f705;
	fma.rn.f32 	%f719, %f944, %f702, %f718;
	fma.rn.f32 	%f957, %f947, %f707, %f719;
	mul.f32 	%f720, %f946, %f711;
	fma.rn.f32 	%f721, %f944, %f709, %f720;
	fma.rn.f32 	%f954, %f947, %f715, %f721;
	mul.f32 	%f722, %f943, %f696;
	fma.rn.f32 	%f959, %f945, %f698, %f722;
	mul.f32 	%f723, %f945, %f705;
	fma.rn.f32 	%f956, %f943, %f702, %f723;
	mul.f32 	%f724, %f945, %f711;
	fma.rn.f32 	%f953, %f943, %f709, %f724;
	mul.f32 	%f958, %f942, %f696;
	mul.f32 	%f955, %f942, %f702;
	mul.f32 	%f952, %f942, %f709;

$L__BB9_36:
	mul.f32 	%f756, %f953, %f957;
	mul.f32 	%f757, %f954, %f956;
	sub.f32 	%f758, %f757, %f756;
	mul.f32 	%f759, %f958, %f758;
	mul.f32 	%f760, %f952, %f957;
	mul.f32 	%f761, %f954, %f955;
	sub.f32 	%f762, %f761, %f760;
	mul.f32 	%f763, %f762, %f959;
	sub.f32 	%f764, %f759, %f763;
	mul.f32 	%f765, %f952, %f956;
	mul.f32 	%f766, %f953, %f955;
	sub.f32 	%f767, %f766, %f765;
	fma.rn.f32 	%f768, %f767, %f960, %f764;
	rcp.rn.f32 	%f769, %f768;
	mul.f32 	%f967, %f758, %f769;
	mul.f32 	%f770, %f954, %f959;
	mul.f32 	%f771, %f953, %f960;
	sub.f32 	%f772, %f771, %f770;
	mul.f32 	%f968, %f772, %f769;
	mul.f32 	%f773, %f956, %f960;
	mul.f32 	%f774, %f957, %f959;
	sub.f32 	%f775, %f774, %f773;
	mul.f32 	%f969, %f775, %f769;
	sub.f32 	%f776, %f760, %f761;
	mul.f32 	%f964, %f776, %f769;
	mul.f32 	%f777, %f952, %f960;
	mul.f32 	%f778, %f954, %f958;
	sub.f32 	%f779, %f778, %f777;
	mul.f32 	%f965, %f779, %f769;
	mul.f32 	%f780, %f957, %f958;
	mul.f32 	%f781, %f955, %f960;
	sub.f32 	%f782, %f781, %f780;
	mul.f32 	%f966, %f782, %f769;
	mul.f32 	%f961, %f767, %f769;
	mul.f32 	%f783, %f953, %f958;
	mul.f32 	%f784, %f952, %f959;
	sub.f32 	%f785, %f784, %f783;
	mul.f32 	%f962, %f785, %f769;
	mul.f32 	%f786, %f955, %f959;
	mul.f32 	%f787, %f956, %f958;
	sub.f32 	%f788, %f787, %f786;
	mul.f32 	%f963, %f788, %f769;
	bra.uni 	$L__BB9_37;

$L__BB9_28:
	// begin inline asm
	call (%rd258), _optix_get_instance_inverse_transform_from_handle, (%rd137);
	// end inline asm

$L__BB9_29:
	// begin inline asm
	cvta.to.global.u64 %rd143, %rd258;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd143];
	// end inline asm
	mov.b32 	%f967, %r167;
	mov.b32 	%f968, %r168;
	mov.b32 	%f969, %r169;
	add.s64 	%rd147, %rd258, 16;
	// begin inline asm
	cvta.to.global.u64 %rd146, %rd147;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd146];
	// end inline asm
	mov.b32 	%f964, %r171;
	mov.b32 	%f965, %r172;
	mov.b32 	%f966, %r173;
	add.s64 	%rd150, %rd258, 32;
	// begin inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd149];
	// end inline asm
	mov.b32 	%f961, %r175;
	mov.b32 	%f962, %r176;
	mov.b32 	%f963, %r177;

$L__BB9_37:
	setp.eq.s32 	%p20, %r322, 0;
	@%p20 bra 	$L__BB9_39;

	mul.f32 	%f789, %f938, %f968;
	fma.rn.f32 	%f790, %f935, %f967, %f789;
	fma.rn.f32 	%f304, %f941, %f969, %f790;
	mul.f32 	%f791, %f937, %f968;
	fma.rn.f32 	%f792, %f934, %f967, %f791;
	fma.rn.f32 	%f305, %f940, %f969, %f792;
	mul.f32 	%f793, %f936, %f968;
	fma.rn.f32 	%f794, %f933, %f967, %f793;
	fma.rn.f32 	%f969, %f939, %f969, %f794;
	mul.f32 	%f795, %f938, %f965;
	fma.rn.f32 	%f796, %f935, %f964, %f795;
	fma.rn.f32 	%f307, %f941, %f966, %f796;
	mul.f32 	%f797, %f937, %f965;
	fma.rn.f32 	%f798, %f934, %f964, %f797;
	fma.rn.f32 	%f308, %f940, %f966, %f798;
	mul.f32 	%f799, %f936, %f965;
	fma.rn.f32 	%f800, %f933, %f964, %f799;
	fma.rn.f32 	%f966, %f939, %f966, %f800;
	mul.f32 	%f801, %f938, %f962;
	fma.rn.f32 	%f802, %f935, %f961, %f801;
	fma.rn.f32 	%f310, %f941, %f963, %f802;
	mul.f32 	%f803, %f937, %f962;
	fma.rn.f32 	%f804, %f934, %f961, %f803;
	fma.rn.f32 	%f311, %f940, %f963, %f804;
	mul.f32 	%f805, %f936, %f962;
	fma.rn.f32 	%f806, %f933, %f961, %f805;
	fma.rn.f32 	%f963, %f939, %f963, %f806;
	mov.f32 	%f961, %f310;
	mov.f32 	%f962, %f311;
	mov.f32 	%f964, %f307;
	mov.f32 	%f965, %f308;
	mov.f32 	%f967, %f304;
	mov.f32 	%f968, %f305;

$L__BB9_39:
	add.s32 	%r322, %r322, 1;
	setp.lt.u32 	%p21, %r322, %r162;
	mov.f32 	%f933, %f969;
	mov.f32 	%f934, %f968;
	mov.f32 	%f935, %f967;
	mov.f32 	%f936, %f966;
	mov.f32 	%f937, %f965;
	mov.f32 	%f938, %f964;
	mov.f32 	%f939, %f963;
	mov.f32 	%f940, %f962;
	mov.f32 	%f941, %f961;
	@%p21 bra 	$L__BB9_24;

$L__BB9_40:
	mul.f32 	%f807, %f989, %f968;
	fma.rn.f32 	%f808, %f988, %f967, %f807;
	mul.f32 	%f809, %f989, %f965;
	fma.rn.f32 	%f810, %f988, %f964, %f809;
	mul.f32 	%f811, %f989, %f962;
	fma.rn.f32 	%f812, %f988, %f961, %f811;
	fma.rn.f32 	%f990, %f620, %f963, %f812;
	fma.rn.f32 	%f989, %f620, %f966, %f810;
	fma.rn.f32 	%f988, %f620, %f969, %f808;
	bra.uni 	$L__BB9_42;

$L__BB9_41:
	mov.f32 	%f990, %f620;

$L__BB9_42:
	// begin inline asm
	call (%f813), _optix_get_ray_tmin, ();
	// end inline asm
	// begin inline asm
	call (%f814), _optix_get_ray_tmax, ();
	// end inline asm
	sub.f32 	%f343, %f814, %f813;
	fma.rn.f32 	%f344, %f988, %f813, %f930;
	fma.rn.f32 	%f345, %f989, %f813, %f931;
	fma.rn.f32 	%f346, %f990, %f813, %f932;
	add.s64 	%rd16, %rd1, 32;
	ld.f32 	%f347, [%rd1+32];
	sub.f32 	%f816, %f344, %f347;
	ld.f32 	%f348, [%rd1+36];
	sub.f32 	%f817, %f345, %f348;
	ld.f32 	%f349, [%rd1+40];
	sub.f32 	%f818, %f346, %f349;
	neg.f32 	%f819, %f817;
	neg.f32 	%f820, %f818;
	mul.f32 	%f821, %f816, %f988;
	neg.f32 	%f822, %f821;
	fma.rn.f32 	%f823, %f819, %f989, %f822;
	fma.rn.f32 	%f824, %f820, %f990, %f823;
	mul.f32 	%f825, %f988, %f988;
	fma.rn.f32 	%f826, %f989, %f989, %f825;
	fma.rn.f32 	%f350, %f990, %f990, %f826;
	sqrt.rn.f32 	%f827, %f350;
	div.rn.f32 	%f351, %f824, %f827;
	setp.neu.f32 	%p22, %f351, 0f00000000;
	@%p22 bra 	$L__BB9_44;

	setp.neu.f32 	%p23, %f344, %f347;
	setp.neu.f32 	%p24, %f345, %f348;
	or.pred  	%p25, %p23, %p24;
	setp.neu.f32 	%p26, %f346, %f349;
	or.pred  	%p27, %p25, %p26;
	@%p27 bra 	$L__BB9_50;

$L__BB9_44:
	fma.rn.f32 	%f828, %f351, %f988, %f344;
	sub.f32 	%f352, %f828, %f347;
	fma.rn.f32 	%f829, %f351, %f989, %f345;
	sub.f32 	%f353, %f829, %f348;
	fma.rn.f32 	%f830, %f351, %f990, %f346;
	sub.f32 	%f354, %f830, %f349;
	mul.f32 	%f831, %f352, %f352;
	fma.rn.f32 	%f832, %f353, %f353, %f831;
	fma.rn.f32 	%f355, %f354, %f354, %f832;
	sqrt.rn.f32 	%f833, %f355;
	ld.f32 	%f356, [%rd16+16];
	setp.gt.f32 	%p28, %f833, %f356;
	@%p28 bra 	$L__BB9_50;

	mul.f32 	%f835, %f352, %f988;
	fma.rn.f32 	%f836, %f353, %f989, %f835;
	fma.rn.f32 	%f837, %f354, %f990, %f836;
	add.f32 	%f357, %f837, %f837;
	mul.f32 	%f838, %f356, %f356;
	sub.f32 	%f358, %f355, %f838;
	setp.eq.f32 	%p30, %f357, 0f00000000;
	setp.eq.f32 	%p31, %f350, 0f00000000;
	and.pred  	%p32, %p31, %p30;
	mov.pred 	%p49, 0;
	@%p32 bra 	$L__BB9_48;

	neg.f32 	%f839, %f358;
	div.rn.f32 	%f991, %f839, %f357;
	mul.f32 	%f840, %f350, 0fC0800000;
	mul.f32 	%f841, %f840, %f358;
	fma.rn.f32 	%f360, %f357, %f357, %f841;
	setp.neu.f32 	%p34, %f350, 0f00000000;
	setp.lt.f32 	%p35, %f360, 0f00000000;
	and.pred  	%p36, %p35, %p34;
	mov.f32 	%f992, %f991;
	@%p36 bra 	$L__BB9_48;

	mov.b32 	%r313, %f357;
	and.b32  	%r314, %r313, -2147483648;
	sqrt.rn.f32 	%f842, %f360;
	mov.b32 	%r315, %f842;
	and.b32  	%r316, %r315, 2147483647;
	or.b32  	%r317, %r316, %r314;
	mov.b32 	%f843, %r317;
	add.f32 	%f844, %f357, %f843;
	mul.f32 	%f845, %f844, 0fBF000000;
	div.rn.f32 	%f846, %f845, %f350;
	div.rn.f32 	%f847, %f358, %f845;
	min.f32 	%f848, %f846, %f847;
	max.f32 	%f849, %f846, %f847;
	selp.f32 	%f361, %f991, %f848, %p31;
	selp.f32 	%f992, %f991, %f849, %p31;
	mov.pred 	%p49, -1;
	mov.f32 	%f991, %f361;

$L__BB9_48:
	add.f32 	%f850, %f351, %f991;
	setp.le.f32 	%p39, %f850, %f343;
	add.f32 	%f851, %f351, %f992;
	setp.ge.f32 	%p40, %f851, 0f00000000;
	setp.geu.f32 	%p41, %f850, 0f00000000;
	setp.leu.f32 	%p42, %f851, %f343;
	setp.lt.f32 	%p43, %f850, 0f00000000;
	selp.f32 	%f365, %f851, %f850, %p43;
	and.pred  	%p44, %p40, %p39;
	and.pred  	%p45, %p49, %p44;
	or.pred  	%p46, %p41, %p42;
	and.pred  	%p47, %p46, %p45;
	not.pred 	%p48, %p47;
	@%p48 bra 	$L__BB9_50;

	mov.u32 	%r319, 254;
	// begin inline asm
	call (%r318), _optix_report_intersection_0, (%f365, %r319);
	// end inline asm

$L__BB9_50:
	ret;

}
	// .globl	__closesthit__sphere
.visible .entry __closesthit__sphere()
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<2>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	ld.u32 	%r10, [%rd1];
	mov.b32 	%r2, %f1;
	mov.u32 	%r8, 0;
	// begin inline asm
	call _optix_set_payload, (%r8, %r2);
	// end inline asm
	mov.u32 	%r3, 1;
	// begin inline asm
	call _optix_set_payload, (%r3, %r13);
	// end inline asm
	mov.u32 	%r5, 2;
	// begin inline asm
	call _optix_set_payload, (%r5, %r14);
	// end inline asm
	mov.u32 	%r7, 3;
	// begin inline asm
	call _optix_set_payload, (%r7, %r8);
	// end inline asm
	mov.u32 	%r9, 4;
	// begin inline asm
	call _optix_set_payload, (%r9, %r10);
	// end inline asm
	mov.u32 	%r12, 5;
	// begin inline asm
	call (%r11), _optix_get_payload, (%r12);
	// end inline asm
	setp.eq.s32 	%p1, %r11, 0;
	@%p1 bra 	$L__BB10_2;

	// begin inline asm
	call (%r15), _optix_read_instance_id, ();
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r12, %r15);
	// end inline asm

$L__BB10_2:
	ret;

}
	// .globl	__closesthit__bsplinecurve
.visible .entry __closesthit__bsplinecurve()
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<2>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// end inline asm
	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%r2), _optix_get_attribute_0, ();
	// end inline asm
	ld.u32 	%r12, [%rd1];
	mov.b32 	%r4, %f1;
	mov.u32 	%r8, 0;
	// begin inline asm
	call _optix_set_payload, (%r8, %r4);
	// end inline asm
	mov.u32 	%r5, 1;
	// begin inline asm
	call _optix_set_payload, (%r5, %r2);
	// end inline asm
	mov.u32 	%r7, 2;
	// begin inline asm
	call _optix_set_payload, (%r7, %r8);
	// end inline asm
	mov.u32 	%r9, 3;
	// begin inline asm
	call _optix_set_payload, (%r9, %r1);
	// end inline asm
	mov.u32 	%r11, 4;
	// begin inline asm
	call _optix_set_payload, (%r11, %r12);
	// end inline asm
	mov.u32 	%r14, 5;
	// begin inline asm
	call (%r13), _optix_get_payload, (%r14);
	// end inline asm
	setp.eq.s32 	%p1, %r13, 0;
	@%p1 bra 	$L__BB11_2;

	// begin inline asm
	call (%r15), _optix_read_instance_id, ();
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r14, %r15);
	// end inline asm

$L__BB11_2:
	ret;

}
	// .globl	__closesthit__linearcurve
.visible .entry __closesthit__linearcurve()
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<2>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	// begin inline asm
	call (%r1), _optix_read_primitive_idx, ();
	// end inline asm
	// begin inline asm
	call (%f1), _optix_get_ray_tmax, ();
	// end inline asm
	// begin inline asm
	call (%r2), _optix_get_attribute_0, ();
	// end inline asm
	ld.u32 	%r12, [%rd1];
	mov.b32 	%r4, %f1;
	mov.u32 	%r8, 0;
	// begin inline asm
	call _optix_set_payload, (%r8, %r4);
	// end inline asm
	mov.u32 	%r5, 1;
	// begin inline asm
	call _optix_set_payload, (%r5, %r2);
	// end inline asm
	mov.u32 	%r7, 2;
	// begin inline asm
	call _optix_set_payload, (%r7, %r8);
	// end inline asm
	mov.u32 	%r9, 3;
	// begin inline asm
	call _optix_set_payload, (%r9, %r1);
	// end inline asm
	mov.u32 	%r11, 4;
	// begin inline asm
	call _optix_set_payload, (%r11, %r12);
	// end inline asm
	mov.u32 	%r14, 5;
	// begin inline asm
	call (%r13), _optix_get_payload, (%r14);
	// end inline asm
	setp.eq.s32 	%p1, %r13, 0;
	@%p1 bra 	$L__BB12_2;

	// begin inline asm
	call (%r15), _optix_read_instance_id, ();
	// end inline asm
	// begin inline asm
	call _optix_set_payload, (%r14, %r15);
	// end inline asm

$L__BB12_2:
	ret;

}
	// .globl	__miss__ms
.visible .entry __miss__ms()
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;


	// begin inline asm
	call (%r1), _optix_get_ray_flags, ();
	// end inline asm
	setp.eq.s32 	%p1, %r1, 12;
	@%p1 bra 	$L__BB13_2;
	bra.uni 	$L__BB13_1;

$L__BB13_2:
	mov.u32 	%r7, 0;
	// begin inline asm
	call _optix_set_payload, (%r7, %r7);
	// end inline asm
	bra.uni 	$L__BB13_3;

$L__BB13_1:
	mov.u32 	%r5, 0;
	mov.u32 	%r3, 2139095040;
	// begin inline asm
	call _optix_set_payload, (%r5, %r3);
	// end inline asm
	mov.u32 	%r4, 4;
	// begin inline asm
	call _optix_set_payload, (%r4, %r5);
	// end inline asm

$L__BB13_3:
	ret;

}

