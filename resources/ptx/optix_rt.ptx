//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31442593
// Cuda compilation tools, release 11.7, V11.7.99
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_50
.address_size 64

	// .globl	__intersection__cylinder

.visible .entry __intersection__cylinder()
{
	.reg .pred 	%p<34>;
	.reg .b16 	%rs<8>;
	.reg .f32 	%f<98>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<4>;


	// begin inline asm
	call (%rd2), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd3, [%rd2+8];
	// begin inline asm
	call (%f16), _optix_get_object_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f17), _optix_get_object_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f18), _optix_get_object_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f19), _optix_get_object_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f20), _optix_get_object_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f21), _optix_get_object_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%f22), _optix_get_ray_tmax, ();
	// end inline asm
	add.s64 	%rd1, %rd3, 32;
	ld.v4.f32 	{%f25, %f26, %f27, %f28}, [%rd3+32];
	mul.f32 	%f33, %f25, %f16;
	fma.rn.f32 	%f34, %f26, %f17, %f33;
	fma.rn.f32 	%f35, %f27, %f18, %f34;
	mov.f32 	%f36, 0f3F800000;
	fma.rn.f32 	%f37, %f28, %f36, %f35;
	ld.v4.f32 	{%f38, %f39, %f40, %f41}, [%rd3+48];
	mul.f32 	%f46, %f38, %f16;
	fma.rn.f32 	%f47, %f39, %f17, %f46;
	fma.rn.f32 	%f48, %f40, %f18, %f47;
	fma.rn.f32 	%f49, %f41, %f36, %f48;
	ld.v4.f32 	{%f50, %f51, %f52, %f53}, [%rd3+64];
	mul.f32 	%f58, %f50, %f16;
	fma.rn.f32 	%f59, %f51, %f17, %f58;
	fma.rn.f32 	%f60, %f52, %f18, %f59;
	fma.rn.f32 	%f2, %f53, %f36, %f60;
	mul.f32 	%f61, %f25, %f19;
	fma.rn.f32 	%f62, %f26, %f20, %f61;
	fma.rn.f32 	%f63, %f27, %f21, %f62;
	mov.f32 	%f64, 0f00000000;
	fma.rn.f32 	%f65, %f28, %f64, %f63;
	mul.f32 	%f66, %f38, %f19;
	fma.rn.f32 	%f67, %f39, %f20, %f66;
	fma.rn.f32 	%f68, %f40, %f21, %f67;
	fma.rn.f32 	%f69, %f41, %f64, %f68;
	mul.f32 	%f70, %f50, %f19;
	fma.rn.f32 	%f71, %f51, %f20, %f70;
	fma.rn.f32 	%f72, %f52, %f21, %f71;
	fma.rn.f32 	%f3, %f53, %f64, %f72;
	mul.f32 	%f73, %f69, %f69;
	fma.rn.f32 	%f4, %f65, %f65, %f73;
	mul.f32 	%f74, %f49, %f69;
	fma.rn.f32 	%f75, %f37, %f65, %f74;
	add.f32 	%f5, %f75, %f75;
	mul.f32 	%f76, %f49, %f49;
	fma.rn.f32 	%f77, %f37, %f37, %f76;
	ld.f32 	%f78, [%rd3+164];
	mul.f32 	%f79, %f78, %f78;
	sub.f32 	%f6, %f77, %f79;
	setp.eq.f32 	%p3, %f4, 0f00000000;
	setp.eq.f32 	%p4, %f5, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	mov.pred 	%p33, 0;
	@%p5 bra 	$L__BB0_3;

	neg.f32 	%f80, %f6;
	div.rn.f32 	%f95, %f80, %f5;
	mul.f32 	%f81, %f4, 0fC0800000;
	mul.f32 	%f82, %f81, %f6;
	fma.rn.f32 	%f8, %f5, %f5, %f82;
	setp.neu.f32 	%p7, %f4, 0f00000000;
	setp.lt.f32 	%p8, %f8, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	mov.f32 	%f96, %f95;
	@%p9 bra 	$L__BB0_3;

	mov.b32 	%r1, %f5;
	and.b32  	%r2, %r1, -2147483648;
	sqrt.rn.f32 	%f83, %f8;
	mov.b32 	%r3, %f83;
	and.b32  	%r4, %r3, 2147483647;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	%f84, %r5;
	add.f32 	%f85, %f5, %f84;
	mul.f32 	%f86, %f85, 0fBF000000;
	div.rn.f32 	%f87, %f86, %f4;
	div.rn.f32 	%f88, %f6, %f86;
	min.f32 	%f89, %f87, %f88;
	max.f32 	%f90, %f87, %f88;
	selp.f32 	%f9, %f95, %f89, %p3;
	selp.f32 	%f96, %f95, %f90, %p3;
	mov.pred 	%p33, -1;
	mov.f32 	%f95, %f9;

$L__BB0_3:
	fma.rn.f32 	%f13, %f3, %f95, %f2;
	fma.rn.f32 	%f14, %f3, %f96, %f2;
	setp.ge.f32 	%p12, %f96, 0f00000000;
	setp.le.f32 	%p13, %f95, %f22;
	and.pred  	%p14, %p13, %p12;
	and.pred  	%p15, %p33, %p14;
	setp.leu.f32 	%p16, %f96, %f22;
	setp.geu.f32 	%p17, %f95, 0f00000000;
	or.pred  	%p18, %p17, %p16;
	and.pred  	%p19, %p18, %p15;
	mov.u16 	%rs3, 0;
	not.pred 	%p20, %p19;
	mov.u16 	%rs7, %rs3;
	@%p20 bra 	$L__BB0_9;

	setp.ltu.f32 	%p21, %f13, 0f00000000;
	@%p21 bra 	$L__BB0_6;

	ld.f32 	%f91, [%rd1+128];
	setp.le.f32 	%p22, %f13, %f91;
	setp.gt.f32 	%p23, %f95, 0f00000000;
	and.pred  	%p24, %p23, %p22;
	mov.u16 	%rs7, 1;
	@%p24 bra 	$L__BB0_9;

$L__BB0_6:
	setp.ltu.f32 	%p25, %f14, 0f00000000;
	mov.u16 	%rs7, %rs3;
	@%p25 bra 	$L__BB0_9;

	ld.f32 	%f92, [%rd1+128];
	setp.gtu.f32 	%p26, %f14, %f92;
	mov.u16 	%rs7, %rs3;
	@%p26 bra 	$L__BB0_9;

	setp.lt.f32 	%p27, %f96, %f22;
	selp.u16 	%rs7, 1, 0, %p27;

$L__BB0_9:
	setp.ltu.f32 	%p28, %f13, 0f00000000;
	@%p28 bra 	$L__BB0_11;

	ld.f32 	%f93, [%rd1+128];
	setp.le.f32 	%p29, %f13, %f93;
	setp.ge.f32 	%p30, %f95, 0f00000000;
	and.pred  	%p31, %p30, %p29;
	@%p31 bra 	$L__BB0_12;

$L__BB0_11:
	mov.f32 	%f95, %f96;

$L__BB0_12:
	setp.eq.s16 	%p32, %rs7, 0;
	@%p32 bra 	$L__BB0_14;

	mov.u32 	%r7, 254;
	// begin inline asm
	call (%r6), _optix_report_intersection_0, (%f95, %r7);
	// end inline asm

$L__BB0_14:
	ret;

}
	// .globl	__intersection__disk
.visible .entry __intersection__disk()
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<66>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<3>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd2, [%rd1+8];
	// begin inline asm
	call (%f4), _optix_get_object_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f5), _optix_get_object_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f6), _optix_get_object_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f7), _optix_get_object_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f8), _optix_get_object_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f9), _optix_get_object_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%f10), _optix_get_ray_tmax, ();
	// end inline asm
	ld.v4.f32 	{%f12, %f13, %f14, %f15}, [%rd2+32];
	mul.f32 	%f20, %f12, %f4;
	fma.rn.f32 	%f21, %f13, %f5, %f20;
	fma.rn.f32 	%f22, %f14, %f6, %f21;
	mov.f32 	%f23, 0f3F800000;
	fma.rn.f32 	%f24, %f15, %f23, %f22;
	ld.v4.f32 	{%f25, %f26, %f27, %f28}, [%rd2+48];
	mul.f32 	%f33, %f25, %f4;
	fma.rn.f32 	%f34, %f26, %f5, %f33;
	fma.rn.f32 	%f35, %f27, %f6, %f34;
	fma.rn.f32 	%f36, %f28, %f23, %f35;
	ld.v4.f32 	{%f37, %f38, %f39, %f40}, [%rd2+64];
	mul.f32 	%f45, %f37, %f4;
	fma.rn.f32 	%f46, %f38, %f5, %f45;
	fma.rn.f32 	%f47, %f39, %f6, %f46;
	fma.rn.f32 	%f48, %f40, %f23, %f47;
	mul.f32 	%f49, %f12, %f7;
	fma.rn.f32 	%f50, %f13, %f8, %f49;
	fma.rn.f32 	%f51, %f14, %f9, %f50;
	mov.f32 	%f52, 0f00000000;
	fma.rn.f32 	%f53, %f15, %f52, %f51;
	mul.f32 	%f54, %f25, %f7;
	fma.rn.f32 	%f55, %f26, %f8, %f54;
	fma.rn.f32 	%f56, %f27, %f9, %f55;
	fma.rn.f32 	%f57, %f28, %f52, %f56;
	mul.f32 	%f58, %f37, %f7;
	fma.rn.f32 	%f59, %f38, %f8, %f58;
	fma.rn.f32 	%f60, %f39, %f9, %f59;
	fma.rn.f32 	%f61, %f40, %f52, %f60;
	neg.f32 	%f62, %f48;
	div.rn.f32 	%f1, %f62, %f61;
	fma.rn.f32 	%f2, %f1, %f53, %f24;
	fma.rn.f32 	%f3, %f1, %f57, %f36;
	mul.f32 	%f63, %f3, %f3;
	fma.rn.f32 	%f64, %f2, %f2, %f63;
	setp.gtu.f32 	%p1, %f64, 0f3F800000;
	setp.leu.f32 	%p2, %f1, 0f00000000;
	or.pred  	%p3, %p2, %p1;
	setp.geu.f32 	%p4, %f1, %f10;
	or.pred  	%p5, %p4, %p3;
	@%p5 bra 	$L__BB1_2;

	mov.b32 	%r3, %f2;
	mov.b32 	%r4, %f3;
	mov.u32 	%r2, 254;
	// begin inline asm
	call (%r1), _optix_report_intersection_2, (%f1, %r2, %r3, %r4);
	// end inline asm

$L__BB1_2:
	ret;

}
	// .globl	__intersection__rectangle
.visible .entry __intersection__rectangle()
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<67>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<3>;


	// begin inline asm
	call (%rd1), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd2, [%rd1+8];
	// begin inline asm
	call (%f5), _optix_get_object_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f6), _optix_get_object_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f7), _optix_get_object_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f8), _optix_get_object_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f9), _optix_get_object_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f10), _optix_get_object_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%f11), _optix_get_ray_tmax, ();
	// end inline asm
	ld.v4.f32 	{%f13, %f14, %f15, %f16}, [%rd2+32];
	mul.f32 	%f21, %f13, %f5;
	fma.rn.f32 	%f22, %f14, %f6, %f21;
	fma.rn.f32 	%f23, %f15, %f7, %f22;
	mov.f32 	%f24, 0f3F800000;
	fma.rn.f32 	%f25, %f16, %f24, %f23;
	ld.v4.f32 	{%f26, %f27, %f28, %f29}, [%rd2+48];
	mul.f32 	%f34, %f26, %f5;
	fma.rn.f32 	%f35, %f27, %f6, %f34;
	fma.rn.f32 	%f36, %f28, %f7, %f35;
	fma.rn.f32 	%f37, %f29, %f24, %f36;
	ld.v4.f32 	{%f38, %f39, %f40, %f41}, [%rd2+64];
	mul.f32 	%f46, %f38, %f5;
	fma.rn.f32 	%f47, %f39, %f6, %f46;
	fma.rn.f32 	%f48, %f40, %f7, %f47;
	fma.rn.f32 	%f49, %f41, %f24, %f48;
	mul.f32 	%f50, %f13, %f8;
	fma.rn.f32 	%f51, %f14, %f9, %f50;
	fma.rn.f32 	%f52, %f15, %f10, %f51;
	mov.f32 	%f53, 0f00000000;
	fma.rn.f32 	%f54, %f16, %f53, %f52;
	mul.f32 	%f55, %f26, %f8;
	fma.rn.f32 	%f56, %f27, %f9, %f55;
	fma.rn.f32 	%f57, %f28, %f10, %f56;
	fma.rn.f32 	%f58, %f29, %f53, %f57;
	mul.f32 	%f59, %f38, %f8;
	fma.rn.f32 	%f60, %f39, %f9, %f59;
	fma.rn.f32 	%f61, %f40, %f10, %f60;
	fma.rn.f32 	%f62, %f41, %f53, %f61;
	neg.f32 	%f63, %f49;
	div.rn.f32 	%f2, %f63, %f62;
	fma.rn.f32 	%f3, %f2, %f54, %f25;
	fma.rn.f32 	%f4, %f2, %f58, %f37;
	abs.f32 	%f64, %f3;
	setp.gtu.f32 	%p1, %f64, 0f3F800000;
	@%p1 bra 	$L__BB2_3;

	abs.f32 	%f65, %f4;
	setp.gtu.f32 	%p2, %f65, 0f3F800000;
	setp.leu.f32 	%p3, %f2, 0f00000000;
	or.pred  	%p4, %p2, %p3;
	setp.geu.f32 	%p5, %f2, %f11;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB2_3;

	mov.b32 	%r3, %f3;
	mov.b32 	%r4, %f4;
	mov.u32 	%r2, 254;
	// begin inline asm
	call (%r1), _optix_report_intersection_2, (%f2, %r2, %r3, %r4);
	// end inline asm

$L__BB2_3:
	ret;

}
	// .globl	__intersection__sdfgrid
.visible .entry __intersection__sdfgrid()
{
	.reg .pred 	%p<88>;
	.reg .f32 	%f<315>;
	.reg .b32 	%r<62>;
	.reg .b64 	%rd<23>;


	// begin inline asm
	call (%rd2), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd2+8];
	ld.u64 	%rd3, [%rd1];
	// begin inline asm
	call (%r8), _optix_read_primitive_idx, ();
	// end inline asm
	mul.wide.u32 	%rd4, %r8, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.u32 	%r9, [%rd5];
	// begin inline asm
	call (%f75), _optix_get_object_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f76), _optix_get_object_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f77), _optix_get_object_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f78), _optix_get_object_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f79), _optix_get_object_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f80), _optix_get_object_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%f81), _optix_get_ray_tmax, ();
	// end inline asm
	ld.v4.f32 	{%f83, %f84, %f85, %f86}, [%rd1+48];
	mul.f32 	%f91, %f83, %f75;
	fma.rn.f32 	%f92, %f84, %f76, %f91;
	fma.rn.f32 	%f93, %f85, %f77, %f92;
	mov.f32 	%f94, 0f3F800000;
	fma.rn.f32 	%f2, %f86, %f94, %f93;
	ld.v4.f32 	{%f95, %f96, %f97, %f98}, [%rd1+64];
	mul.f32 	%f103, %f95, %f75;
	fma.rn.f32 	%f104, %f96, %f76, %f103;
	fma.rn.f32 	%f105, %f97, %f77, %f104;
	fma.rn.f32 	%f3, %f98, %f94, %f105;
	ld.v4.f32 	{%f106, %f107, %f108, %f109}, [%rd1+80];
	mul.f32 	%f114, %f106, %f75;
	fma.rn.f32 	%f115, %f107, %f76, %f114;
	fma.rn.f32 	%f116, %f108, %f77, %f115;
	fma.rn.f32 	%f4, %f109, %f94, %f116;
	mul.f32 	%f117, %f83, %f78;
	fma.rn.f32 	%f118, %f84, %f79, %f117;
	fma.rn.f32 	%f119, %f85, %f80, %f118;
	mov.f32 	%f314, 0f00000000;
	fma.rn.f32 	%f5, %f86, %f314, %f119;
	mul.f32 	%f121, %f95, %f78;
	fma.rn.f32 	%f122, %f96, %f79, %f121;
	fma.rn.f32 	%f123, %f97, %f80, %f122;
	fma.rn.f32 	%f6, %f98, %f314, %f123;
	mul.f32 	%f124, %f106, %f78;
	fma.rn.f32 	%f125, %f107, %f79, %f124;
	fma.rn.f32 	%f126, %f108, %f80, %f125;
	fma.rn.f32 	%f7, %f109, %f314, %f126;
	ld.v2.u32 	{%r10, %r11}, [%rd1+8];
	add.s32 	%r12, %r10, -1;
	rem.u32 	%r3, %r9, %r12;
	sub.s32 	%r13, %r9, %r3;
	add.s32 	%r14, %r11, -1;
	div.u32 	%r15, %r13, %r14;
	rem.u32 	%r4, %r15, %r14;
	mul.lo.s32 	%r16, %r4, %r12;
	sub.s32 	%r17, %r13, %r16;
	mul.lo.s32 	%r18, %r14, %r12;
	div.u32 	%r5, %r17, %r18;
	cvt.rn.f32.u32 	%f8, %r3;
	cvt.rn.f32.u32 	%f9, %r4;
	cvt.rn.f32.u32 	%f10, %r5;
	add.f32 	%f127, %f8, 0f3F800000;
	add.f32 	%f128, %f9, 0f3F800000;
	ld.v2.f32 	{%f129, %f130}, [%rd1+24];
	ld.f32 	%f131, [%rd1+20];
	mul.f32 	%f132, %f131, %f8;
	mul.f32 	%f133, %f129, %f9;
	mul.f32 	%f134, %f131, %f127;
	mul.f32 	%f135, %f129, %f128;
	rcp.rn.f32 	%f136, %f5;
	rcp.rn.f32 	%f137, %f6;
	setp.ltu.f32 	%p6, %f136, 0f00000000;
	selp.f32 	%f138, %f134, %f132, %p6;
	sub.f32 	%f139, %f138, %f2;
	mul.f32 	%f297, %f136, %f139;
	selp.f32 	%f140, %f132, %f134, %p6;
	sub.f32 	%f141, %f140, %f2;
	mul.f32 	%f296, %f136, %f141;
	setp.ltu.f32 	%p7, %f137, 0f00000000;
	selp.f32 	%f142, %f135, %f133, %p7;
	sub.f32 	%f143, %f142, %f3;
	mul.f32 	%f15, %f137, %f143;
	selp.f32 	%f144, %f133, %f135, %p7;
	sub.f32 	%f145, %f144, %f3;
	mul.f32 	%f16, %f137, %f145;
	setp.gt.f32 	%p8, %f297, %f16;
	setp.gt.f32 	%p9, %f15, %f296;
	or.pred  	%p10, %p8, %p9;
	mov.pred 	%p84, -1;
	@%p10 bra 	$L__BB3_14;

	setp.gt.f32 	%p11, %f15, %f297;
	@%p11 bra 	$L__BB3_3;

	abs.f32 	%f146, %f297;
	setp.lt.f32 	%p12, %f146, 0f7F800000;
	@%p12 bra 	$L__BB3_4;

$L__BB3_3:
	mov.f32 	%f297, %f15;

$L__BB3_4:
	setp.lt.f32 	%p13, %f16, %f296;
	@%p13 bra 	$L__BB3_6;

	abs.f32 	%f147, %f296;
	setp.lt.f32 	%p14, %f147, 0f7F800000;
	@%p14 bra 	$L__BB3_7;

$L__BB3_6:
	mov.f32 	%f296, %f16;

$L__BB3_7:
	mul.f32 	%f148, %f130, %f10;
	add.f32 	%f149, %f10, 0f3F800000;
	mul.f32 	%f150, %f130, %f149;
	rcp.rn.f32 	%f151, %f7;
	setp.ltu.f32 	%p16, %f151, 0f00000000;
	selp.f32 	%f152, %f150, %f148, %p16;
	sub.f32 	%f153, %f152, %f4;
	mul.f32 	%f19, %f151, %f153;
	selp.f32 	%f154, %f148, %f150, %p16;
	sub.f32 	%f155, %f154, %f4;
	mul.f32 	%f20, %f151, %f155;
	setp.gt.f32 	%p17, %f297, %f20;
	setp.gt.f32 	%p18, %f19, %f296;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	$L__BB3_14;

	setp.gt.f32 	%p20, %f19, %f297;
	@%p20 bra 	$L__BB3_10;

	abs.f32 	%f156, %f297;
	setp.lt.f32 	%p21, %f156, 0f7F800000;
	@%p21 bra 	$L__BB3_11;

$L__BB3_10:
	mov.f32 	%f297, %f19;

$L__BB3_11:
	setp.lt.f32 	%p22, %f20, %f296;
	@%p22 bra 	$L__BB3_13;

	abs.f32 	%f157, %f296;
	setp.lt.f32 	%p24, %f157, 0f7F800000;
	mov.pred 	%p84, 0;
	@%p24 bra 	$L__BB3_14;

$L__BB3_13:
	mov.pred 	%p84, 0;
	mov.f32 	%f296, %f20;

$L__BB3_14:
	@%p84 bra 	$L__BB3_37;

	max.f32 	%f24, %f297, %f314;
	setp.lt.f32 	%p26, %f296, %f24;
	@%p26 bra 	$L__BB3_37;

	cvt.rn.f32.u32 	%f159, %r12;
	cvt.rn.f32.u32 	%f160, %r14;
	ld.u32 	%r21, [%rd1+16];
	add.s32 	%r22, %r21, -1;
	cvt.rn.f32.u32 	%f161, %r22;
	mul.f32 	%f162, %f2, %f159;
	fma.rn.f32 	%f164, %f314, %f3, %f162;
	fma.rn.f32 	%f165, %f314, %f4, %f164;
	neg.f32 	%f166, %f8;
	fma.rn.f32 	%f168, %f166, %f94, %f165;
	mul.f32 	%f169, %f2, 0f00000000;
	fma.rn.f32 	%f170, %f160, %f3, %f169;
	fma.rn.f32 	%f171, %f314, %f4, %f170;
	neg.f32 	%f172, %f9;
	fma.rn.f32 	%f173, %f172, %f94, %f171;
	fma.rn.f32 	%f174, %f314, %f3, %f169;
	fma.rn.f32 	%f175, %f161, %f4, %f174;
	neg.f32 	%f176, %f10;
	fma.rn.f32 	%f177, %f176, %f94, %f175;
	mul.f32 	%f178, %f5, %f159;
	fma.rn.f32 	%f179, %f314, %f6, %f178;
	fma.rn.f32 	%f180, %f314, %f7, %f179;
	fma.rn.f32 	%f181, %f166, %f314, %f180;
	mul.f32 	%f182, %f5, 0f00000000;
	fma.rn.f32 	%f183, %f160, %f6, %f182;
	fma.rn.f32 	%f184, %f314, %f7, %f183;
	fma.rn.f32 	%f185, %f172, %f314, %f184;
	fma.rn.f32 	%f186, %f314, %f6, %f182;
	fma.rn.f32 	%f187, %f161, %f7, %f186;
	fma.rn.f32 	%f188, %f176, %f314, %f187;
	mul.lo.s32 	%r23, %r11, %r5;
	add.s32 	%r24, %r4, %r23;
	mul.lo.s32 	%r25, %r24, %r10;
	add.s32 	%r26, %r25, %r3;
	ld.u64 	%rd6, [%rd1+32];
	mul.wide.u32 	%rd7, %r26, 4;
	add.s64 	%rd8, %rd6, %rd7;
	add.s32 	%r27, %r3, 1;
	add.s32 	%r28, %r25, %r27;
	mul.wide.u32 	%rd9, %r28, 4;
	add.s64 	%rd10, %rd6, %rd9;
	add.s32 	%r29, %r4, 1;
	add.s32 	%r30, %r23, %r29;
	mul.lo.s32 	%r31, %r30, %r10;
	add.s32 	%r32, %r31, %r3;
	mul.wide.u32 	%rd11, %r32, 4;
	add.s64 	%rd12, %rd6, %rd11;
	add.s32 	%r33, %r31, %r27;
	mul.wide.u32 	%rd13, %r33, 4;
	add.s64 	%rd14, %rd6, %rd13;
	add.s32 	%r34, %r23, %r11;
	add.s32 	%r35, %r34, %r4;
	mul.lo.s32 	%r36, %r35, %r10;
	add.s32 	%r37, %r36, %r3;
	mul.wide.u32 	%rd15, %r37, 4;
	add.s64 	%rd16, %rd6, %rd15;
	add.s32 	%r38, %r36, %r27;
	mul.wide.u32 	%rd17, %r38, 4;
	add.s64 	%rd18, %rd6, %rd17;
	add.s32 	%r39, %r34, %r29;
	mul.lo.s32 	%r40, %r39, %r10;
	add.s32 	%r41, %r40, %r3;
	mul.wide.u32 	%rd19, %r41, 4;
	add.s64 	%rd20, %rd6, %rd19;
	add.s32 	%r42, %r40, %r27;
	mul.wide.u32 	%rd21, %r42, 4;
	add.s64 	%rd22, %rd6, %rd21;
	fma.rn.f32 	%f189, %f24, %f181, %f168;
	fma.rn.f32 	%f190, %f24, %f185, %f173;
	fma.rn.f32 	%f191, %f24, %f188, %f177;
	ld.f32 	%f192, [%rd18];
	ld.f32 	%f193, [%rd16];
	sub.f32 	%f194, %f192, %f193;
	ld.f32 	%f195, [%rd10];
	ld.f32 	%f196, [%rd8];
	sub.f32 	%f197, %f195, %f196;
	ld.f32 	%f198, [%rd12];
	sub.f32 	%f199, %f198, %f196;
	ld.f32 	%f200, [%rd14];
	sub.f32 	%f201, %f200, %f198;
	sub.f32 	%f202, %f201, %f197;
	sub.f32 	%f203, %f196, %f193;
	sub.f32 	%f204, %f197, %f194;
	ld.f32 	%f205, [%rd20];
	sub.f32 	%f206, %f205, %f193;
	sub.f32 	%f207, %f199, %f206;
	ld.f32 	%f208, [%rd22];
	sub.f32 	%f209, %f208, %f205;
	sub.f32 	%f210, %f209, %f194;
	sub.f32 	%f211, %f202, %f210;
	mul.f32 	%f212, %f189, %f190;
	mul.f32 	%f213, %f181, %f185;
	mul.f32 	%f214, %f190, %f181;
	fma.rn.f32 	%f215, %f189, %f185, %f214;
	neg.f32 	%f216, %f197;
	fma.rn.f32 	%f217, %f204, %f191, %f216;
	neg.f32 	%f218, %f199;
	fma.rn.f32 	%f219, %f207, %f191, %f218;
	neg.f32 	%f220, %f202;
	fma.rn.f32 	%f221, %f211, %f191, %f220;
	neg.f32 	%f222, %f196;
	fma.rn.f32 	%f223, %f203, %f191, %f222;
	mul.f32 	%f224, %f212, %f221;
	fma.rn.f32 	%f225, %f190, %f219, %f224;
	fma.rn.f32 	%f226, %f189, %f217, %f225;
	add.f32 	%f25, %f223, %f226;
	mul.f32 	%f227, %f185, %f219;
	fma.rn.f32 	%f228, %f181, %f217, %f227;
	fma.rn.f32 	%f229, %f215, %f221, %f228;
	mul.f32 	%f230, %f211, %f212;
	fma.rn.f32 	%f231, %f207, %f190, %f230;
	fma.rn.f32 	%f232, %f204, %f189, %f231;
	add.f32 	%f233, %f203, %f232;
	fma.rn.f32 	%f26, %f188, %f233, %f229;
	mul.f32 	%f234, %f211, %f215;
	fma.rn.f32 	%f235, %f207, %f185, %f234;
	fma.rn.f32 	%f236, %f204, %f181, %f235;
	mul.f32 	%f237, %f188, %f236;
	fma.rn.f32 	%f27, %f213, %f221, %f237;
	mul.f32 	%f238, %f211, %f213;
	mul.f32 	%f28, %f188, %f238;
	sub.f32 	%f29, %f296, %f24;
	setp.neu.f32 	%p27, %f28, 0f00000000;
	@%p27 bra 	$L__BB3_24;
	bra.uni 	$L__BB3_17;

$L__BB3_24:
	mul.f32 	%f38, %f28, 0f40400000;
	setp.eq.f32 	%p52, %f38, 0f00000000;
	add.f32 	%f39, %f27, %f27;
	setp.eq.f32 	%p53, %f39, 0f00000000;
	and.pred  	%p54, %p52, %p53;
	mov.pred 	%p86, -1;
	mov.f32 	%f300, %f314;
	mov.f32 	%f301, %f314;
	@%p54 bra 	$L__BB3_27;

	neg.f32 	%f255, %f26;
	div.rn.f32 	%f300, %f255, %f39;
	mul.f32 	%f256, %f38, 0fC0800000;
	mul.f32 	%f257, %f256, %f26;
	fma.rn.f32 	%f41, %f39, %f39, %f257;
	setp.neu.f32 	%p56, %f38, 0f00000000;
	setp.lt.f32 	%p57, %f41, 0f00000000;
	and.pred  	%p58, %p57, %p56;
	mov.f32 	%f301, %f300;
	@%p58 bra 	$L__BB3_27;

	mov.b32 	%r52, %f39;
	and.b32  	%r53, %r52, -2147483648;
	sqrt.rn.f32 	%f258, %f41;
	mov.b32 	%r54, %f258;
	and.b32  	%r55, %r54, 2147483647;
	or.b32  	%r56, %r55, %r53;
	mov.b32 	%f259, %r56;
	add.f32 	%f260, %f39, %f259;
	mul.f32 	%f261, %f260, 0fBF000000;
	div.rn.f32 	%f262, %f261, %f38;
	div.rn.f32 	%f263, %f26, %f261;
	min.f32 	%f264, %f262, %f263;
	max.f32 	%f265, %f262, %f263;
	selp.f32 	%f301, %f300, %f264, %p52;
	selp.f32 	%f300, %f300, %f265, %p52;
	mov.pred 	%p86, 0;

$L__BB3_27:
	fma.rn.f32 	%f267, %f28, %f314, %f27;
	fma.rn.f32 	%f268, %f267, %f314, %f26;
	fma.rn.f32 	%f307, %f268, %f314, %f25;
	fma.rn.f32 	%f269, %f28, %f29, %f27;
	fma.rn.f32 	%f270, %f269, %f29, %f26;
	fma.rn.f32 	%f309, %f270, %f29, %f25;
	mov.f32 	%f306, %f314;
	mov.f32 	%f308, %f29;
	@%p86 bra 	$L__BB3_32;

	setp.ltu.f32 	%p61, %f301, 0f00000000;
	mov.f32 	%f306, 0f00000000;
	setp.gtu.f32 	%p62, %f301, %f29;
	or.pred  	%p63, %p61, %p62;
	mov.f32 	%f308, %f29;
	@%p63 bra 	$L__BB3_30;

	fma.rn.f32 	%f272, %f28, %f301, %f27;
	fma.rn.f32 	%f273, %f272, %f301, %f26;
	fma.rn.f32 	%f274, %f273, %f301, %f25;
	mul.f32 	%f275, %f307, %f274;
	setp.le.f32 	%p64, %f275, 0f00000000;
	selp.f32 	%f306, 0f00000000, %f301, %p64;
	selp.f32 	%f307, %f307, %f274, %p64;
	selp.f32 	%f308, %f301, %f29, %p64;
	selp.f32 	%f309, %f274, %f309, %p64;

$L__BB3_30:
	setp.gtu.f32 	%p65, %f300, %f308;
	setp.gtu.f32 	%p66, %f306, %f300;
	or.pred  	%p67, %p66, %p65;
	@%p67 bra 	$L__BB3_32;

	fma.rn.f32 	%f276, %f28, %f300, %f27;
	fma.rn.f32 	%f277, %f276, %f300, %f26;
	fma.rn.f32 	%f278, %f277, %f300, %f25;
	mul.f32 	%f279, %f307, %f278;
	setp.le.f32 	%p68, %f279, 0f00000000;
	selp.f32 	%f306, %f306, %f300, %p68;
	selp.f32 	%f307, %f307, %f278, %p68;
	selp.f32 	%f308, %f300, %f308, %p68;
	selp.f32 	%f309, %f278, %f309, %p68;

$L__BB3_32:
	mul.f32 	%f281, %f307, %f309;
	setp.gt.f32 	%p70, %f281, 0f00000000;
	mov.pred 	%p87, 0;
	@%p70 bra 	$L__BB3_35;

	mov.u32 	%r61, 0;
	mov.pred 	%p87, -1;

$L__BB3_34:
	sub.f32 	%f282, %f309, %f307;
	div.rn.f32 	%f283, %f307, %f282;
	sub.f32 	%f284, %f308, %f306;
	mul.f32 	%f285, %f283, %f284;
	sub.f32 	%f314, %f306, %f285;
	fma.rn.f32 	%f286, %f28, %f314, %f27;
	fma.rn.f32 	%f287, %f286, %f314, %f26;
	fma.rn.f32 	%f288, %f287, %f314, %f25;
	mul.f32 	%f289, %f307, %f288;
	setp.le.f32 	%p72, %f289, 0f00000000;
	selp.f32 	%f309, %f288, %f309, %p72;
	selp.f32 	%f307, %f307, %f288, %p72;
	selp.f32 	%f308, %f314, %f308, %p72;
	selp.f32 	%f306, %f306, %f314, %p72;
	sub.f32 	%f290, %f308, %f306;
	abs.f32 	%f291, %f290;
	setp.geu.f32 	%p73, %f291, 0f3727C5AC;
	setp.lt.f32 	%p74, %f291, 0f3727C5AC;
	add.s32 	%r58, %r61, 1;
	setp.lt.u32 	%p75, %r58, 51;
	selp.b32 	%r61, %r61, %r58, %p74;
	and.pred  	%p76, %p75, %p73;
	@%p76 bra 	$L__BB3_34;

$L__BB3_35:
	setp.ltu.f32 	%p77, %f314, 0f00000000;
	not.pred 	%p78, %p87;
	or.pred  	%p79, %p77, %p78;
	setp.gtu.f32 	%p80, %f314, %f29;
	or.pred  	%p81, %p80, %p79;
	add.f32 	%f74, %f24, %f314;
	setp.geu.f32 	%p82, %f74, %f81;
	or.pred  	%p83, %p81, %p82;
	@%p83 bra 	$L__BB3_37;

	mov.u32 	%r60, 254;
	// begin inline asm
	call (%r59), _optix_report_intersection_0, (%f74, %r60);
	// end inline asm
	bra.uni 	$L__BB3_37;

$L__BB3_17:
	setp.eq.f32 	%p29, %f27, 0f00000000;
	setp.eq.f32 	%p30, %f26, 0f00000000;
	and.pred  	%p31, %p29, %p30;
	mov.pred 	%p85, 0;
	@%p31 bra 	$L__BB3_20;

	neg.f32 	%f240, %f25;
	div.rn.f32 	%f298, %f240, %f26;
	mul.f32 	%f241, %f27, 0fC0800000;
	mul.f32 	%f242, %f25, %f241;
	fma.rn.f32 	%f31, %f26, %f26, %f242;
	setp.neu.f32 	%p33, %f27, 0f00000000;
	setp.lt.f32 	%p34, %f31, 0f00000000;
	and.pred  	%p35, %p34, %p33;
	mov.f32 	%f299, %f298;
	@%p35 bra 	$L__BB3_20;

	mov.b32 	%r43, %f26;
	and.b32  	%r44, %r43, -2147483648;
	sqrt.rn.f32 	%f243, %f31;
	mov.b32 	%r45, %f243;
	and.b32  	%r46, %r45, 2147483647;
	or.b32  	%r47, %r46, %r44;
	mov.b32 	%f244, %r47;
	add.f32 	%f245, %f26, %f244;
	mul.f32 	%f246, %f245, 0fBF000000;
	div.rn.f32 	%f247, %f246, %f27;
	div.rn.f32 	%f248, %f25, %f246;
	min.f32 	%f249, %f247, %f248;
	max.f32 	%f250, %f247, %f248;
	selp.f32 	%f32, %f298, %f249, %p29;
	selp.f32 	%f299, %f298, %f250, %p29;
	mov.pred 	%p85, -1;
	mov.f32 	%f298, %f32;

$L__BB3_20:
	setp.ge.f32 	%p38, %f298, 0f00000000;
	and.pred  	%p39, %p38, %p85;
	setp.le.f32 	%p40, %f298, %f29;
	and.pred  	%p41, %p40, %p39;
	add.f32 	%f36, %f24, %f298;
	setp.lt.f32 	%p42, %f36, %f81;
	and.pred  	%p43, %p41, %p42;
	@%p43 bra 	$L__BB3_23;
	bra.uni 	$L__BB3_21;

$L__BB3_23:
	mov.u32 	%r51, 254;
	// begin inline asm
	call (%r50), _optix_report_intersection_0, (%f36, %r51);
	// end inline asm
	bra.uni 	$L__BB3_37;

$L__BB3_21:
	setp.ltu.f32 	%p44, %f299, 0f00000000;
	not.pred 	%p45, %p85;
	or.pred  	%p46, %p44, %p45;
	setp.gtu.f32 	%p47, %f299, %f29;
	or.pred  	%p48, %p47, %p46;
	add.f32 	%f37, %f24, %f299;
	setp.geu.f32 	%p49, %f37, %f81;
	or.pred  	%p50, %p48, %p49;
	@%p50 bra 	$L__BB3_37;

	mov.u32 	%r49, 254;
	// begin inline asm
	call (%r48), _optix_report_intersection_0, (%f37, %r49);
	// end inline asm

$L__BB3_37:
	ret;

}
	// .globl	__intersection__sphere
.visible .entry __intersection__sphere()
{
	.reg .pred 	%p<30>;
	.reg .f32 	%f<74>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<4>;


	// begin inline asm
	call (%rd2), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd3, [%rd2+8];
	// begin inline asm
	call (%f27), _optix_get_object_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f28), _optix_get_object_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f29), _optix_get_object_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%f30), _optix_get_object_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f31), _optix_get_object_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f32), _optix_get_object_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%f33), _optix_get_ray_tmax, ();
	// end inline asm
	add.s64 	%rd1, %rd3, 32;
	ld.f32 	%f8, [%rd3+32];
	sub.f32 	%f35, %f27, %f8;
	ld.f32 	%f9, [%rd3+36];
	sub.f32 	%f36, %f28, %f9;
	ld.f32 	%f10, [%rd3+40];
	sub.f32 	%f37, %f29, %f10;
	neg.f32 	%f38, %f36;
	neg.f32 	%f39, %f37;
	mul.f32 	%f40, %f35, %f30;
	neg.f32 	%f41, %f40;
	fma.rn.f32 	%f42, %f38, %f31, %f41;
	fma.rn.f32 	%f43, %f39, %f32, %f42;
	mul.f32 	%f44, %f30, %f30;
	fma.rn.f32 	%f45, %f31, %f31, %f44;
	fma.rn.f32 	%f11, %f32, %f32, %f45;
	sqrt.rn.f32 	%f46, %f11;
	div.rn.f32 	%f12, %f43, %f46;
	setp.neu.f32 	%p2, %f12, 0f00000000;
	@%p2 bra 	$L__BB4_2;

	setp.neu.f32 	%p3, %f27, %f8;
	setp.neu.f32 	%p4, %f28, %f9;
	or.pred  	%p5, %p3, %p4;
	setp.neu.f32 	%p6, %f29, %f10;
	or.pred  	%p7, %p5, %p6;
	@%p7 bra 	$L__BB4_8;

$L__BB4_2:
	fma.rn.f32 	%f47, %f12, %f30, %f27;
	sub.f32 	%f13, %f47, %f8;
	fma.rn.f32 	%f48, %f12, %f31, %f28;
	sub.f32 	%f14, %f48, %f9;
	fma.rn.f32 	%f49, %f12, %f32, %f29;
	sub.f32 	%f15, %f49, %f10;
	mul.f32 	%f50, %f13, %f13;
	fma.rn.f32 	%f51, %f14, %f14, %f50;
	fma.rn.f32 	%f16, %f15, %f15, %f51;
	sqrt.rn.f32 	%f52, %f16;
	ld.f32 	%f17, [%rd1+16];
	setp.gt.f32 	%p8, %f52, %f17;
	@%p8 bra 	$L__BB4_8;

	mul.f32 	%f54, %f13, %f30;
	fma.rn.f32 	%f55, %f14, %f31, %f54;
	fma.rn.f32 	%f56, %f15, %f32, %f55;
	add.f32 	%f18, %f56, %f56;
	mul.f32 	%f57, %f17, %f17;
	sub.f32 	%f19, %f16, %f57;
	setp.eq.f32 	%p10, %f18, 0f00000000;
	setp.eq.f32 	%p11, %f11, 0f00000000;
	and.pred  	%p12, %p11, %p10;
	mov.pred 	%p29, 0;
	@%p12 bra 	$L__BB4_6;

	neg.f32 	%f58, %f19;
	div.rn.f32 	%f72, %f58, %f18;
	mul.f32 	%f59, %f11, 0fC0800000;
	mul.f32 	%f60, %f59, %f19;
	fma.rn.f32 	%f21, %f18, %f18, %f60;
	setp.neu.f32 	%p14, %f11, 0f00000000;
	setp.lt.f32 	%p15, %f21, 0f00000000;
	and.pred  	%p16, %p15, %p14;
	mov.f32 	%f73, %f72;
	@%p16 bra 	$L__BB4_6;

	mov.b32 	%r1, %f18;
	and.b32  	%r2, %r1, -2147483648;
	sqrt.rn.f32 	%f61, %f21;
	mov.b32 	%r3, %f61;
	and.b32  	%r4, %r3, 2147483647;
	or.b32  	%r5, %r4, %r2;
	mov.b32 	%f62, %r5;
	add.f32 	%f63, %f18, %f62;
	mul.f32 	%f64, %f63, 0fBF000000;
	div.rn.f32 	%f65, %f64, %f11;
	div.rn.f32 	%f66, %f19, %f64;
	min.f32 	%f67, %f65, %f66;
	max.f32 	%f68, %f65, %f66;
	selp.f32 	%f22, %f72, %f67, %p11;
	selp.f32 	%f73, %f72, %f68, %p11;
	mov.pred 	%p29, -1;
	mov.f32 	%f72, %f22;

$L__BB4_6:
	add.f32 	%f69, %f12, %f72;
	setp.le.f32 	%p19, %f69, %f33;
	add.f32 	%f70, %f12, %f73;
	setp.ge.f32 	%p20, %f70, 0f00000000;
	setp.geu.f32 	%p21, %f69, 0f00000000;
	setp.leu.f32 	%p22, %f70, %f33;
	setp.lt.f32 	%p23, %f69, 0f00000000;
	selp.f32 	%f26, %f70, %f69, %p23;
	and.pred  	%p24, %p20, %p19;
	and.pred  	%p25, %p29, %p24;
	or.pred  	%p26, %p22, %p21;
	and.pred  	%p27, %p25, %p26;
	not.pred 	%p28, %p27;
	@%p28 bra 	$L__BB4_8;

	mov.u32 	%r7, 254;
	// begin inline asm
	call (%r6), _optix_report_intersection_0, (%f26, %r7);
	// end inline asm

$L__BB4_8:
	ret;

}

