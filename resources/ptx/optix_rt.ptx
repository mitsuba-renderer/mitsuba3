//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31057947
// Cuda compilation tools, release 11.6, V11.6.124
// Based on NVVM 7.0.1
//

.version 7.6
.target sm_50
.address_size 64

	// .globl	__intersection__cylinder

.visible .entry __intersection__cylinder()
{
	.reg .pred 	%p<54>;
	.reg .b16 	%rs<8>;
	.reg .f32 	%f<1020>;
	.reg .b32 	%r<323>;
	.reg .b64 	%rd<259>;


	// begin inline asm
	call (%rd17), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd17+8];
	// begin inline asm
	call (%f956), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f957), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f958), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p2, %r9, 0;
	@%p2 bra 	$L__BB0_21;

	// begin inline asm
	call (%r10), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f358), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p3, %r10, 0;
	@%p3 bra 	$L__BB0_19;

	mov.u32 	%r321, 0;

$L__BB0_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd18), _optix_get_transform_list_handle, (%r321);
	// end inline asm
	// begin inline asm
	call (%r13), _optix_get_transform_type_from_handle, (%rd18);
	// end inline asm
	or.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p4, %r14, 3;
	@%p4 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_4;

$L__BB0_9:
	setp.eq.s32 	%p7, %r13, 2;
	@%p7 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_10;

$L__BB0_13:
	// begin inline asm
	call (%rd90), _optix_get_matrix_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd92, %rd90;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd92];
	// end inline asm
	add.s64 	%rd96, %rd90, 16;
	// begin inline asm
	cvta.to.global.u64 %rd95, %rd96;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd95];
	// end inline asm
	add.s64 	%rd99, %rd90, 32;
	// begin inline asm
	cvta.to.global.u64 %rd98, %rd99;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd98];
	// end inline asm
	add.s64 	%rd102, %rd90, 48;
	// begin inline asm
	cvta.to.global.u64 %rd101, %rd102;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd101];
	// end inline asm
	add.s64 	%rd105, %rd90, 64;
	// begin inline asm
	cvta.to.global.u64 %rd104, %rd105;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd104];
	// end inline asm
	add.s64 	%rd108, %rd90, 80;
	// begin inline asm
	cvta.to.global.u64 %rd107, %rd108;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd107];
	// end inline asm
	add.s64 	%rd111, %rd90, 96;
	// begin inline asm
	cvta.to.global.u64 %rd110, %rd111;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd110];
	// end inline asm
	add.s64 	%rd114, %rd90, 112;
	// begin inline asm
	cvta.to.global.u64 %rd113, %rd114;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd113];
	// end inline asm
	mov.b32 	%f486, %r105;
	mov.b32 	%f487, %r106;
	and.b32  	%r146, %r104, 65535;
	add.s32 	%r147, %r146, -1;
	cvt.rn.f32.s32 	%f488, %r147;
	sub.f32 	%f489, %f358, %f486;
	mul.f32 	%f490, %f489, %f488;
	sub.f32 	%f491, %f487, %f486;
	div.rn.f32 	%f492, %f490, %f491;
	min.f32 	%f493, %f488, %f492;
	mov.f32 	%f494, 0f00000000;
	max.f32 	%f495, %f494, %f493;
	cvt.rmi.f32.f32 	%f496, %f495;
	sub.f32 	%f90, %f495, %f496;
	cvt.rzi.s32.f32 	%r148, %f496;
	mul.wide.s32 	%rd125, %r148, 48;
	add.s64 	%rd117, %rd99, %rd125;
	// begin inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd116];
	// end inline asm
	mov.b32 	%f911, %r134;
	mov.b32 	%f910, %r135;
	mov.b32 	%f909, %r136;
	mov.b32 	%f908, %r137;
	add.s64 	%rd120, %rd117, 16;
	// begin inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd119];
	// end inline asm
	mov.b32 	%f915, %r138;
	mov.b32 	%f914, %r139;
	mov.b32 	%f913, %r140;
	mov.b32 	%f912, %r141;
	add.s64 	%rd123, %rd117, 32;
	// begin inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd122];
	// end inline asm
	mov.b32 	%f919, %r142;
	mov.b32 	%f918, %r143;
	mov.b32 	%f917, %r144;
	mov.b32 	%f916, %r145;
	setp.leu.f32 	%p9, %f90, 0f00000000;
	@%p9 bra 	$L__BB0_15;

	cvt.rmi.f32.f32 	%f879, %f495;
	cvt.rzi.s32.f32 	%r320, %f879;
	cvt.s64.s32 	%rd256, %r320;
	mov.f32 	%f497, 0f3F800000;
	sub.f32 	%f498, %f497, %f90;
	mul.lo.s64 	%rd135, %rd256, 48;
	add.s64 	%rd136, %rd90, %rd135;
	add.s64 	%rd127, %rd136, 80;
	// begin inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r149,%r150,%r151,%r152}, [%rd126];
	// end inline asm
	mov.b32 	%f499, %r149;
	mov.b32 	%f500, %r150;
	mov.b32 	%f501, %r151;
	mov.b32 	%f502, %r152;
	mul.f32 	%f503, %f90, %f499;
	mul.f32 	%f504, %f90, %f500;
	mul.f32 	%f505, %f90, %f501;
	mul.f32 	%f506, %f90, %f502;
	fma.rn.f32 	%f911, %f498, %f911, %f503;
	fma.rn.f32 	%f910, %f498, %f910, %f504;
	fma.rn.f32 	%f909, %f498, %f909, %f505;
	fma.rn.f32 	%f908, %f498, %f908, %f506;
	add.s64 	%rd130, %rd136, 96;
	// begin inline asm
	cvta.to.global.u64 %rd129, %rd130;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r153,%r154,%r155,%r156}, [%rd129];
	// end inline asm
	mov.b32 	%f507, %r153;
	mov.b32 	%f508, %r154;
	mov.b32 	%f509, %r155;
	mov.b32 	%f510, %r156;
	mul.f32 	%f511, %f90, %f507;
	mul.f32 	%f512, %f90, %f508;
	mul.f32 	%f513, %f90, %f509;
	mul.f32 	%f514, %f90, %f510;
	fma.rn.f32 	%f915, %f498, %f915, %f511;
	fma.rn.f32 	%f914, %f498, %f914, %f512;
	fma.rn.f32 	%f913, %f498, %f913, %f513;
	fma.rn.f32 	%f912, %f498, %f912, %f514;
	add.s64 	%rd133, %rd136, 112;
	// begin inline asm
	cvta.to.global.u64 %rd132, %rd133;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r157,%r158,%r159,%r160}, [%rd132];
	// end inline asm
	mov.b32 	%f515, %r157;
	mov.b32 	%f516, %r158;
	mov.b32 	%f517, %r159;
	mov.b32 	%f518, %r160;
	mul.f32 	%f519, %f90, %f515;
	mul.f32 	%f520, %f90, %f516;
	mul.f32 	%f521, %f90, %f517;
	mul.f32 	%f522, %f90, %f518;
	fma.rn.f32 	%f919, %f498, %f919, %f519;
	fma.rn.f32 	%f918, %f498, %f918, %f520;
	fma.rn.f32 	%f917, %f498, %f917, %f521;
	fma.rn.f32 	%f916, %f498, %f916, %f522;
	bra.uni 	$L__BB0_15;

$L__BB0_4:
	mov.f32 	%f920, 0f00000000;
	mov.f32 	%f923, 0f3F800000;
	setp.eq.s32 	%p5, %r13, 4;
	@%p5 bra 	$L__BB0_7;

	setp.ne.s32 	%p6, %r13, 1;
	mov.f32 	%f921, %f920;
	mov.f32 	%f922, %f920;
	mov.f32 	%f924, %f920;
	mov.f32 	%f925, %f920;
	mov.f32 	%f926, %f923;
	mov.f32 	%f927, %f920;
	mov.f32 	%f928, %f920;
	mov.f32 	%f929, %f923;
	mov.f32 	%f930, %f920;
	mov.f32 	%f931, %f920;
	@%p6 bra 	$L__BB0_16;

	// begin inline asm
	call (%rd20), _optix_get_static_transform_from_handle, (%rd18);
	// end inline asm
	add.s64 	%rd257, %rd20, 64;
	bra.uni 	$L__BB0_8;

$L__BB0_10:
	// begin inline asm
	call (%rd33), _optix_get_srt_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd35, %rd33;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r27,%r28,%r29,%r30}, [%rd35];
	// end inline asm
	add.s64 	%rd39, %rd33, 16;
	// begin inline asm
	cvta.to.global.u64 %rd38, %rd39;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r31,%r32,%r33,%r34}, [%rd38];
	// end inline asm
	add.s64 	%rd42, %rd33, 32;
	// begin inline asm
	cvta.to.global.u64 %rd41, %rd42;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r35,%r36,%r37,%r38}, [%rd41];
	// end inline asm
	add.s64 	%rd45, %rd33, 48;
	// begin inline asm
	cvta.to.global.u64 %rd44, %rd45;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r39,%r40,%r41,%r42}, [%rd44];
	// end inline asm
	add.s64 	%rd48, %rd33, 64;
	// begin inline asm
	cvta.to.global.u64 %rd47, %rd48;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r43,%r44,%r45,%r46}, [%rd47];
	// end inline asm
	add.s64 	%rd51, %rd33, 80;
	// begin inline asm
	cvta.to.global.u64 %rd50, %rd51;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd50];
	// end inline asm
	add.s64 	%rd54, %rd33, 96;
	// begin inline asm
	cvta.to.global.u64 %rd53, %rd54;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd53];
	// end inline asm
	add.s64 	%rd57, %rd33, 112;
	// begin inline asm
	cvta.to.global.u64 %rd56, %rd57;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd56];
	// end inline asm
	add.s64 	%rd60, %rd33, 128;
	// begin inline asm
	cvta.to.global.u64 %rd59, %rd60;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd59];
	// end inline asm
	add.s64 	%rd63, %rd33, 144;
	// begin inline asm
	cvta.to.global.u64 %rd62, %rd63;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd62];
	// end inline asm
	mov.b32 	%f373, %r30;
	mov.b32 	%f374, %r31;
	and.b32  	%r83, %r29, 65535;
	add.s32 	%r84, %r83, -1;
	cvt.rn.f32.s32 	%f375, %r84;
	sub.f32 	%f376, %f358, %f373;
	mul.f32 	%f377, %f376, %f375;
	sub.f32 	%f378, %f374, %f373;
	div.rn.f32 	%f379, %f377, %f378;
	min.f32 	%f380, %f375, %f379;
	mov.f32 	%f381, 0f00000000;
	max.f32 	%f382, %f381, %f380;
	cvt.rmi.f32.f32 	%f383, %f382;
	sub.f32 	%f29, %f382, %f383;
	cvt.rzi.s32.f32 	%r85, %f383;
	mul.wide.s32 	%rd77, %r85, 64;
	add.s64 	%rd66, %rd42, %rd77;
	// begin inline asm
	cvta.to.global.u64 %rd65, %rd66;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd65];
	// end inline asm
	mov.b32 	%f892, %r67;
	mov.b32 	%f893, %r68;
	mov.b32 	%f894, %r69;
	mov.b32 	%f895, %r70;
	add.s64 	%rd69, %rd66, 16;
	// begin inline asm
	cvta.to.global.u64 %rd68, %rd69;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd68];
	// end inline asm
	mov.b32 	%f896, %r71;
	mov.b32 	%f897, %r72;
	mov.b32 	%f898, %r73;
	mov.b32 	%f899, %r74;
	add.s64 	%rd72, %rd66, 32;
	// begin inline asm
	cvta.to.global.u64 %rd71, %rd72;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd71];
	// end inline asm
	mov.b32 	%f900, %r75;
	mov.b32 	%f901, %r76;
	mov.b32 	%f902, %r77;
	mov.b32 	%f903, %r78;
	add.s64 	%rd75, %rd66, 48;
	// begin inline asm
	cvta.to.global.u64 %rd74, %rd75;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd74];
	// end inline asm
	mov.b32 	%f904, %r79;
	mov.b32 	%f905, %r80;
	mov.b32 	%f906, %r81;
	mov.b32 	%f907, %r82;
	setp.leu.f32 	%p8, %f29, 0f00000000;
	@%p8 bra 	$L__BB0_12;

	mov.f32 	%f384, 0f3F800000;
	sub.f32 	%f385, %f384, %f29;
	add.s64 	%rd79, %rd66, 64;
	// begin inline asm
	cvta.to.global.u64 %rd78, %rd79;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r86,%r87,%r88,%r89}, [%rd78];
	// end inline asm
	mov.b32 	%f386, %r86;
	mov.b32 	%f387, %r87;
	mov.b32 	%f388, %r88;
	mov.b32 	%f389, %r89;
	mul.f32 	%f390, %f29, %f386;
	mul.f32 	%f391, %f29, %f387;
	mul.f32 	%f392, %f29, %f388;
	mul.f32 	%f393, %f29, %f389;
	fma.rn.f32 	%f892, %f385, %f892, %f390;
	fma.rn.f32 	%f893, %f385, %f893, %f391;
	fma.rn.f32 	%f894, %f385, %f894, %f392;
	fma.rn.f32 	%f895, %f385, %f895, %f393;
	add.s64 	%rd82, %rd66, 80;
	// begin inline asm
	cvta.to.global.u64 %rd81, %rd82;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd81];
	// end inline asm
	mov.b32 	%f394, %r90;
	mov.b32 	%f395, %r91;
	mov.b32 	%f396, %r92;
	mov.b32 	%f397, %r93;
	mul.f32 	%f398, %f29, %f394;
	mul.f32 	%f399, %f29, %f395;
	mul.f32 	%f400, %f29, %f396;
	mul.f32 	%f401, %f29, %f397;
	fma.rn.f32 	%f896, %f385, %f896, %f398;
	fma.rn.f32 	%f897, %f385, %f897, %f399;
	fma.rn.f32 	%f898, %f385, %f898, %f400;
	fma.rn.f32 	%f899, %f385, %f899, %f401;
	add.s64 	%rd85, %rd66, 96;
	// begin inline asm
	cvta.to.global.u64 %rd84, %rd85;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd84];
	// end inline asm
	mov.b32 	%f402, %r94;
	mov.b32 	%f403, %r95;
	mov.b32 	%f404, %r96;
	mov.b32 	%f405, %r97;
	mul.f32 	%f406, %f29, %f402;
	mul.f32 	%f407, %f29, %f403;
	mul.f32 	%f408, %f29, %f404;
	mul.f32 	%f409, %f29, %f405;
	fma.rn.f32 	%f900, %f385, %f900, %f406;
	fma.rn.f32 	%f410, %f385, %f901, %f407;
	fma.rn.f32 	%f411, %f385, %f902, %f408;
	fma.rn.f32 	%f412, %f385, %f903, %f409;
	add.s64 	%rd88, %rd66, 112;
	// begin inline asm
	cvta.to.global.u64 %rd87, %rd88;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd87];
	// end inline asm
	mov.b32 	%f413, %r98;
	mov.b32 	%f414, %r99;
	mov.b32 	%f415, %r100;
	mov.b32 	%f416, %r101;
	mul.f32 	%f417, %f29, %f413;
	mul.f32 	%f418, %f29, %f414;
	mul.f32 	%f419, %f29, %f415;
	mul.f32 	%f420, %f29, %f416;
	fma.rn.f32 	%f421, %f385, %f904, %f417;
	fma.rn.f32 	%f905, %f385, %f905, %f418;
	fma.rn.f32 	%f906, %f385, %f906, %f419;
	fma.rn.f32 	%f907, %f385, %f907, %f420;
	mul.f32 	%f422, %f411, %f411;
	fma.rn.f32 	%f423, %f410, %f410, %f422;
	fma.rn.f32 	%f424, %f412, %f412, %f423;
	fma.rn.f32 	%f425, %f421, %f421, %f424;
	sqrt.rn.f32 	%f426, %f425;
	rcp.rn.f32 	%f427, %f426;
	mul.f32 	%f901, %f410, %f427;
	mul.f32 	%f902, %f411, %f427;
	mul.f32 	%f903, %f412, %f427;
	mul.f32 	%f904, %f427, %f421;

$L__BB0_12:
	mul.f32 	%f428, %f902, %f902;
	fma.rn.f32 	%f429, %f901, %f901, %f428;
	fma.rn.f32 	%f430, %f903, %f903, %f429;
	fma.rn.f32 	%f431, %f904, %f904, %f430;
	rcp.rn.f32 	%f432, %f431;
	mul.f32 	%f433, %f901, %f432;
	mul.f32 	%f434, %f902, %f432;
	mul.f32 	%f435, %f903, %f432;
	mul.f32 	%f436, %f904, %f432;
	mul.f32 	%f437, %f901, %f433;
	mul.f32 	%f438, %f902, %f434;
	mul.f32 	%f439, %f903, %f435;
	mul.f32 	%f440, %f901, %f434;
	mul.f32 	%f441, %f903, %f436;
	mul.f32 	%f442, %f901, %f435;
	mul.f32 	%f443, %f902, %f436;
	mul.f32 	%f444, %f902, %f435;
	mul.f32 	%f445, %f901, %f436;
	sub.f32 	%f446, %f437, %f438;
	sub.f32 	%f447, %f446, %f439;
	fma.rn.f32 	%f448, %f904, %f436, %f447;
	sub.f32 	%f449, %f440, %f441;
	add.f32 	%f450, %f449, %f449;
	add.f32 	%f451, %f442, %f443;
	add.f32 	%f452, %f451, %f451;
	add.f32 	%f453, %f440, %f441;
	add.f32 	%f454, %f453, %f453;
	sub.f32 	%f455, %f438, %f437;
	sub.f32 	%f456, %f455, %f439;
	fma.rn.f32 	%f457, %f904, %f436, %f456;
	sub.f32 	%f458, %f444, %f445;
	add.f32 	%f459, %f458, %f458;
	sub.f32 	%f460, %f442, %f443;
	add.f32 	%f461, %f460, %f460;
	add.f32 	%f462, %f444, %f445;
	add.f32 	%f463, %f462, %f462;
	neg.f32 	%f464, %f437;
	sub.f32 	%f465, %f464, %f438;
	add.f32 	%f466, %f439, %f465;
	fma.rn.f32 	%f467, %f904, %f436, %f466;
	mul.f32 	%f468, %f895, %f448;
	fma.rn.f32 	%f469, %f898, %f450, %f468;
	fma.rn.f32 	%f470, %f900, %f452, %f469;
	add.f32 	%f908, %f905, %f470;
	mul.f32 	%f471, %f898, %f457;
	fma.rn.f32 	%f472, %f895, %f454, %f471;
	fma.rn.f32 	%f473, %f900, %f459, %f472;
	add.f32 	%f912, %f906, %f473;
	mul.f32 	%f474, %f898, %f463;
	fma.rn.f32 	%f475, %f895, %f461, %f474;
	fma.rn.f32 	%f476, %f900, %f467, %f475;
	add.f32 	%f916, %f907, %f476;
	mul.f32 	%f477, %f894, %f448;
	fma.rn.f32 	%f478, %f897, %f450, %f477;
	fma.rn.f32 	%f909, %f899, %f452, %f478;
	mul.f32 	%f479, %f897, %f457;
	fma.rn.f32 	%f480, %f894, %f454, %f479;
	fma.rn.f32 	%f913, %f899, %f459, %f480;
	mul.f32 	%f481, %f897, %f463;
	fma.rn.f32 	%f482, %f894, %f461, %f481;
	fma.rn.f32 	%f917, %f899, %f467, %f482;
	mul.f32 	%f483, %f893, %f448;
	fma.rn.f32 	%f910, %f896, %f450, %f483;
	mul.f32 	%f484, %f896, %f457;
	fma.rn.f32 	%f914, %f893, %f454, %f484;
	mul.f32 	%f485, %f896, %f463;
	fma.rn.f32 	%f918, %f893, %f461, %f485;
	mul.f32 	%f911, %f892, %f448;
	mul.f32 	%f915, %f892, %f454;
	mul.f32 	%f919, %f892, %f461;

$L__BB0_15:
	mul.f32 	%f523, %f913, %f918;
	mul.f32 	%f524, %f914, %f917;
	sub.f32 	%f525, %f524, %f523;
	mul.f32 	%f526, %f911, %f525;
	mul.f32 	%f527, %f913, %f919;
	mul.f32 	%f528, %f915, %f917;
	sub.f32 	%f529, %f528, %f527;
	mul.f32 	%f530, %f910, %f529;
	sub.f32 	%f531, %f526, %f530;
	mul.f32 	%f532, %f914, %f919;
	mul.f32 	%f533, %f915, %f918;
	sub.f32 	%f534, %f533, %f532;
	fma.rn.f32 	%f535, %f909, %f534, %f531;
	rcp.rn.f32 	%f536, %f535;
	mul.f32 	%f923, %f525, %f536;
	mul.f32 	%f537, %f910, %f917;
	mul.f32 	%f538, %f909, %f918;
	sub.f32 	%f539, %f538, %f537;
	mul.f32 	%f922, %f539, %f536;
	mul.f32 	%f540, %f909, %f914;
	mul.f32 	%f541, %f910, %f913;
	sub.f32 	%f542, %f541, %f540;
	mul.f32 	%f921, %f542, %f536;
	sub.f32 	%f543, %f527, %f528;
	mul.f32 	%f927, %f543, %f536;
	mul.f32 	%f544, %f909, %f919;
	mul.f32 	%f545, %f911, %f917;
	sub.f32 	%f546, %f545, %f544;
	mul.f32 	%f926, %f546, %f536;
	mul.f32 	%f547, %f911, %f913;
	mul.f32 	%f548, %f909, %f915;
	sub.f32 	%f549, %f548, %f547;
	mul.f32 	%f925, %f549, %f536;
	mul.f32 	%f931, %f534, %f536;
	mul.f32 	%f550, %f911, %f918;
	mul.f32 	%f551, %f910, %f919;
	sub.f32 	%f552, %f551, %f550;
	mul.f32 	%f930, %f552, %f536;
	mul.f32 	%f553, %f910, %f915;
	mul.f32 	%f554, %f911, %f914;
	sub.f32 	%f555, %f554, %f553;
	mul.f32 	%f929, %f555, %f536;
	mul.f32 	%f556, %f908, %f923;
	neg.f32 	%f557, %f556;
	mul.f32 	%f558, %f912, %f922;
	sub.f32 	%f559, %f557, %f558;
	mul.f32 	%f560, %f916, %f921;
	sub.f32 	%f920, %f559, %f560;
	mul.f32 	%f561, %f908, %f927;
	neg.f32 	%f562, %f561;
	mul.f32 	%f563, %f912, %f926;
	sub.f32 	%f564, %f562, %f563;
	mul.f32 	%f565, %f916, %f925;
	sub.f32 	%f924, %f564, %f565;
	mul.f32 	%f566, %f908, %f931;
	neg.f32 	%f567, %f566;
	mul.f32 	%f568, %f912, %f930;
	sub.f32 	%f569, %f567, %f568;
	mul.f32 	%f570, %f916, %f929;
	sub.f32 	%f928, %f569, %f570;
	bra.uni 	$L__BB0_16;

$L__BB0_7:
	// begin inline asm
	call (%rd257), _optix_get_instance_inverse_transform_from_handle, (%rd18);
	// end inline asm

$L__BB0_8:
	// begin inline asm
	cvta.to.global.u64 %rd24, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r15,%r16,%r17,%r18}, [%rd24];
	// end inline asm
	mov.b32 	%f923, %r15;
	mov.b32 	%f922, %r16;
	mov.b32 	%f921, %r17;
	mov.b32 	%f920, %r18;
	add.s64 	%rd28, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd27, %rd28;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r19,%r20,%r21,%r22}, [%rd27];
	// end inline asm
	mov.b32 	%f927, %r19;
	mov.b32 	%f926, %r20;
	mov.b32 	%f925, %r21;
	mov.b32 	%f924, %r22;
	add.s64 	%rd31, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd30, %rd31;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r23,%r24,%r25,%r26}, [%rd30];
	// end inline asm
	mov.b32 	%f931, %r23;
	mov.b32 	%f930, %r24;
	mov.b32 	%f929, %r25;
	mov.b32 	%f928, %r26;

$L__BB0_16:
	setp.eq.s32 	%p10, %r321, 0;
	@%p10 bra 	$L__BB0_18;

	mul.f32 	%f571, %f888, %f923;
	fma.rn.f32 	%f572, %f884, %f922, %f571;
	fma.rn.f32 	%f151, %f880, %f921, %f572;
	mul.f32 	%f573, %f889, %f923;
	fma.rn.f32 	%f574, %f885, %f922, %f573;
	fma.rn.f32 	%f152, %f881, %f921, %f574;
	mul.f32 	%f575, %f890, %f923;
	fma.rn.f32 	%f576, %f886, %f922, %f575;
	fma.rn.f32 	%f153, %f882, %f921, %f576;
	mul.f32 	%f577, %f891, %f923;
	fma.rn.f32 	%f578, %f887, %f922, %f577;
	fma.rn.f32 	%f579, %f883, %f921, %f578;
	add.f32 	%f920, %f920, %f579;
	mul.f32 	%f580, %f888, %f927;
	fma.rn.f32 	%f581, %f884, %f926, %f580;
	fma.rn.f32 	%f155, %f880, %f925, %f581;
	mul.f32 	%f582, %f889, %f927;
	fma.rn.f32 	%f583, %f885, %f926, %f582;
	fma.rn.f32 	%f156, %f881, %f925, %f583;
	mul.f32 	%f584, %f890, %f927;
	fma.rn.f32 	%f585, %f886, %f926, %f584;
	fma.rn.f32 	%f157, %f882, %f925, %f585;
	mul.f32 	%f586, %f891, %f927;
	fma.rn.f32 	%f587, %f887, %f926, %f586;
	fma.rn.f32 	%f588, %f883, %f925, %f587;
	add.f32 	%f924, %f924, %f588;
	mul.f32 	%f589, %f888, %f931;
	fma.rn.f32 	%f590, %f884, %f930, %f589;
	fma.rn.f32 	%f159, %f880, %f929, %f590;
	mul.f32 	%f591, %f889, %f931;
	fma.rn.f32 	%f592, %f885, %f930, %f591;
	fma.rn.f32 	%f160, %f881, %f929, %f592;
	mul.f32 	%f593, %f890, %f931;
	fma.rn.f32 	%f594, %f886, %f930, %f593;
	fma.rn.f32 	%f161, %f882, %f929, %f594;
	mul.f32 	%f595, %f891, %f931;
	fma.rn.f32 	%f596, %f887, %f930, %f595;
	fma.rn.f32 	%f597, %f883, %f929, %f596;
	add.f32 	%f928, %f928, %f597;
	mov.f32 	%f921, %f153;
	mov.f32 	%f922, %f152;
	mov.f32 	%f923, %f151;
	mov.f32 	%f925, %f157;
	mov.f32 	%f926, %f156;
	mov.f32 	%f927, %f155;
	mov.f32 	%f929, %f161;
	mov.f32 	%f930, %f160;
	mov.f32 	%f931, %f159;

$L__BB0_18:
	add.s32 	%r321, %r321, 1;
	setp.lt.u32 	%p11, %r321, %r10;
	mov.f32 	%f880, %f931;
	mov.f32 	%f881, %f930;
	mov.f32 	%f882, %f929;
	mov.f32 	%f883, %f928;
	mov.f32 	%f884, %f927;
	mov.f32 	%f885, %f926;
	mov.f32 	%f886, %f925;
	mov.f32 	%f887, %f924;
	mov.f32 	%f888, %f923;
	mov.f32 	%f889, %f922;
	mov.f32 	%f890, %f921;
	mov.f32 	%f891, %f920;
	@%p11 bra 	$L__BB0_3;

$L__BB0_19:
	mul.f32 	%f598, %f956, %f923;
	fma.rn.f32 	%f599, %f957, %f922, %f598;
	fma.rn.f32 	%f600, %f958, %f921, %f599;
	mul.f32 	%f601, %f956, %f927;
	fma.rn.f32 	%f602, %f957, %f926, %f601;
	fma.rn.f32 	%f603, %f958, %f925, %f602;
	mul.f32 	%f604, %f956, %f931;
	fma.rn.f32 	%f605, %f957, %f930, %f604;
	fma.rn.f32 	%f606, %f958, %f929, %f605;
	add.f32 	%f958, %f928, %f606;
	add.f32 	%f957, %f924, %f603;
	add.f32 	%f956, %f920, %f600;

$L__BB0_21:
	// begin inline asm
	call (%f1014), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f1015), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f609), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r161), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p12, %r161, 0;
	@%p12 bra 	$L__BB0_41;

	// begin inline asm
	call (%r162), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f610), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p13, %r162, 0;
	@%p13 bra 	$L__BB0_40;

	mov.u32 	%r322, 0;

$L__BB0_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd137), _optix_get_transform_list_handle, (%r322);
	// end inline asm
	// begin inline asm
	call (%r165), _optix_get_transform_type_from_handle, (%rd137);
	// end inline asm
	or.b32  	%r166, %r165, 1;
	setp.eq.s32 	%p14, %r166, 3;
	@%p14 bra 	$L__BB0_30;
	bra.uni 	$L__BB0_25;

$L__BB0_30:
	setp.eq.s32 	%p17, %r165, 2;
	@%p17 bra 	$L__BB0_34;
	bra.uni 	$L__BB0_31;

$L__BB0_34:
	// begin inline asm
	call (%rd209), _optix_get_matrix_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd211, %rd209;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd211];
	// end inline asm
	add.s64 	%rd215, %rd209, 16;
	// begin inline asm
	cvta.to.global.u64 %rd214, %rd215;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd214];
	// end inline asm
	add.s64 	%rd218, %rd209, 32;
	// begin inline asm
	cvta.to.global.u64 %rd217, %rd218;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd217];
	// end inline asm
	add.s64 	%rd221, %rd209, 48;
	// begin inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd220];
	// end inline asm
	add.s64 	%rd224, %rd209, 64;
	// begin inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd223];
	// end inline asm
	add.s64 	%rd227, %rd209, 80;
	// begin inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd226];
	// end inline asm
	add.s64 	%rd230, %rd209, 96;
	// begin inline asm
	cvta.to.global.u64 %rd229, %rd230;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd229];
	// end inline asm
	add.s64 	%rd233, %rd209, 112;
	// begin inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd232];
	// end inline asm
	mov.b32 	%f714, %r257;
	mov.b32 	%f715, %r258;
	and.b32  	%r298, %r256, 65535;
	add.s32 	%r299, %r298, -1;
	cvt.rn.f32.s32 	%f716, %r299;
	sub.f32 	%f717, %f610, %f714;
	mul.f32 	%f718, %f717, %f716;
	sub.f32 	%f719, %f715, %f714;
	div.rn.f32 	%f720, %f718, %f719;
	min.f32 	%f721, %f716, %f720;
	mov.f32 	%f722, 0f00000000;
	max.f32 	%f723, %f722, %f721;
	cvt.rmi.f32.f32 	%f724, %f723;
	sub.f32 	%f258, %f723, %f724;
	cvt.rzi.s32.f32 	%r300, %f724;
	cvt.s64.s32 	%rd15, %r300;
	mul.wide.s32 	%rd244, %r300, 48;
	add.s64 	%rd236, %rd218, %rd244;
	// begin inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd235];
	// end inline asm
	mov.b32 	%f984, %r286;
	mov.b32 	%f985, %r287;
	mov.b32 	%f986, %r288;
	add.s64 	%rd239, %rd236, 16;
	// begin inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd238];
	// end inline asm
	mov.b32 	%f981, %r290;
	mov.b32 	%f982, %r291;
	mov.b32 	%f983, %r292;
	add.s64 	%rd242, %rd236, 32;
	// begin inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd241];
	// end inline asm
	mov.b32 	%f978, %r294;
	mov.b32 	%f979, %r295;
	mov.b32 	%f980, %r296;
	setp.leu.f32 	%p19, %f258, 0f00000000;
	@%p19 bra 	$L__BB0_36;

	mov.f32 	%f725, 0f3F800000;
	sub.f32 	%f726, %f725, %f258;
	mul.lo.s64 	%rd254, %rd15, 48;
	add.s64 	%rd255, %rd209, %rd254;
	add.s64 	%rd246, %rd255, 80;
	// begin inline asm
	cvta.to.global.u64 %rd245, %rd246;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd245];
	// end inline asm
	mov.b32 	%f727, %r301;
	mov.b32 	%f728, %r302;
	mov.b32 	%f729, %r303;
	mul.f32 	%f730, %f258, %f727;
	mul.f32 	%f731, %f258, %f728;
	mul.f32 	%f732, %f258, %f729;
	fma.rn.f32 	%f984, %f726, %f984, %f730;
	fma.rn.f32 	%f985, %f726, %f985, %f731;
	fma.rn.f32 	%f986, %f726, %f986, %f732;
	add.s64 	%rd249, %rd255, 96;
	// begin inline asm
	cvta.to.global.u64 %rd248, %rd249;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd248];
	// end inline asm
	mov.b32 	%f733, %r305;
	mov.b32 	%f734, %r306;
	mov.b32 	%f735, %r307;
	mul.f32 	%f736, %f258, %f733;
	mul.f32 	%f737, %f258, %f734;
	mul.f32 	%f738, %f258, %f735;
	fma.rn.f32 	%f981, %f726, %f981, %f736;
	fma.rn.f32 	%f982, %f726, %f982, %f737;
	fma.rn.f32 	%f983, %f726, %f983, %f738;
	add.s64 	%rd252, %rd255, 112;
	// begin inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd251];
	// end inline asm
	mov.b32 	%f739, %r309;
	mov.b32 	%f740, %r310;
	mov.b32 	%f741, %r311;
	mul.f32 	%f742, %f258, %f739;
	mul.f32 	%f743, %f258, %f740;
	mul.f32 	%f744, %f258, %f741;
	fma.rn.f32 	%f978, %f726, %f978, %f742;
	fma.rn.f32 	%f979, %f726, %f979, %f743;
	fma.rn.f32 	%f980, %f726, %f980, %f744;
	bra.uni 	$L__BB0_36;

$L__BB0_25:
	mov.f32 	%f987, 0f00000000;
	mov.f32 	%f989, 0f3F800000;
	setp.eq.s32 	%p15, %r165, 4;
	@%p15 bra 	$L__BB0_28;

	setp.ne.s32 	%p16, %r165, 1;
	mov.f32 	%f988, %f987;
	mov.f32 	%f990, %f987;
	mov.f32 	%f991, %f989;
	mov.f32 	%f992, %f987;
	mov.f32 	%f993, %f989;
	mov.f32 	%f994, %f987;
	mov.f32 	%f995, %f987;
	@%p16 bra 	$L__BB0_37;

	// begin inline asm
	call (%rd139), _optix_get_static_transform_from_handle, (%rd137);
	// end inline asm
	add.s64 	%rd258, %rd139, 64;
	bra.uni 	$L__BB0_29;

$L__BB0_31:
	// begin inline asm
	call (%rd152), _optix_get_srt_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd154, %rd152;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd154];
	// end inline asm
	add.s64 	%rd158, %rd152, 16;
	// begin inline asm
	cvta.to.global.u64 %rd157, %rd158;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd157];
	// end inline asm
	add.s64 	%rd161, %rd152, 32;
	// begin inline asm
	cvta.to.global.u64 %rd160, %rd161;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd160];
	// end inline asm
	add.s64 	%rd164, %rd152, 48;
	// begin inline asm
	cvta.to.global.u64 %rd163, %rd164;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd163];
	// end inline asm
	add.s64 	%rd167, %rd152, 64;
	// begin inline asm
	cvta.to.global.u64 %rd166, %rd167;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd166];
	// end inline asm
	add.s64 	%rd170, %rd152, 80;
	// begin inline asm
	cvta.to.global.u64 %rd169, %rd170;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd169];
	// end inline asm
	add.s64 	%rd173, %rd152, 96;
	// begin inline asm
	cvta.to.global.u64 %rd172, %rd173;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd172];
	// end inline asm
	add.s64 	%rd176, %rd152, 112;
	// begin inline asm
	cvta.to.global.u64 %rd175, %rd176;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd175];
	// end inline asm
	add.s64 	%rd179, %rd152, 128;
	// begin inline asm
	cvta.to.global.u64 %rd178, %rd179;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd178];
	// end inline asm
	add.s64 	%rd182, %rd152, 144;
	// begin inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd181];
	// end inline asm
	mov.b32 	%f622, %r182;
	mov.b32 	%f623, %r183;
	and.b32  	%r235, %r181, 65535;
	add.s32 	%r236, %r235, -1;
	cvt.rn.f32.s32 	%f624, %r236;
	sub.f32 	%f625, %f610, %f622;
	mul.f32 	%f626, %f625, %f624;
	sub.f32 	%f627, %f623, %f622;
	div.rn.f32 	%f628, %f626, %f627;
	min.f32 	%f629, %f624, %f628;
	mov.f32 	%f630, 0f00000000;
	max.f32 	%f631, %f630, %f629;
	cvt.rmi.f32.f32 	%f632, %f631;
	sub.f32 	%f218, %f631, %f632;
	cvt.rzi.s32.f32 	%r237, %f632;
	mul.wide.s32 	%rd196, %r237, 64;
	add.s64 	%rd185, %rd161, %rd196;
	// begin inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd184];
	// end inline asm
	mov.b32 	%f968, %r219;
	mov.b32 	%f969, %r220;
	mov.b32 	%f970, %r221;
	add.s64 	%rd188, %rd185, 16;
	// begin inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd187];
	// end inline asm
	mov.b32 	%f971, %r223;
	mov.b32 	%f972, %r224;
	mov.b32 	%f973, %r226;
	add.s64 	%rd191, %rd185, 32;
	// begin inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd190];
	// end inline asm
	mov.b32 	%f974, %r228;
	mov.b32 	%f975, %r229;
	mov.b32 	%f976, %r230;
	add.s64 	%rd194, %rd185, 48;
	// begin inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd193];
	// end inline asm
	mov.b32 	%f977, %r231;
	setp.leu.f32 	%p18, %f218, 0f00000000;
	@%p18 bra 	$L__BB0_33;

	mov.f32 	%f633, 0f3F800000;
	sub.f32 	%f634, %f633, %f218;
	add.s64 	%rd198, %rd185, 64;
	// begin inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd197];
	// end inline asm
	mov.b32 	%f635, %r238;
	mov.b32 	%f636, %r239;
	mov.b32 	%f637, %r240;
	mul.f32 	%f638, %f218, %f635;
	mul.f32 	%f639, %f218, %f636;
	mul.f32 	%f640, %f218, %f637;
	fma.rn.f32 	%f968, %f634, %f968, %f638;
	fma.rn.f32 	%f969, %f634, %f969, %f639;
	fma.rn.f32 	%f970, %f634, %f970, %f640;
	add.s64 	%rd201, %rd185, 80;
	// begin inline asm
	cvta.to.global.u64 %rd200, %rd201;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd200];
	// end inline asm
	mov.b32 	%f641, %r242;
	mov.b32 	%f642, %r243;
	mov.b32 	%f643, %r245;
	mul.f32 	%f644, %f218, %f641;
	mul.f32 	%f645, %f218, %f642;
	mul.f32 	%f646, %f218, %f643;
	fma.rn.f32 	%f971, %f634, %f971, %f644;
	fma.rn.f32 	%f972, %f634, %f972, %f645;
	fma.rn.f32 	%f973, %f634, %f973, %f646;
	add.s64 	%rd204, %rd185, 96;
	// begin inline asm
	cvta.to.global.u64 %rd203, %rd204;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd203];
	// end inline asm
	mov.b32 	%f647, %r247;
	mov.b32 	%f648, %r248;
	mov.b32 	%f649, %r249;
	mul.f32 	%f650, %f218, %f647;
	mul.f32 	%f651, %f218, %f648;
	mul.f32 	%f652, %f218, %f649;
	fma.rn.f32 	%f653, %f634, %f974, %f650;
	fma.rn.f32 	%f654, %f634, %f975, %f651;
	fma.rn.f32 	%f655, %f634, %f976, %f652;
	add.s64 	%rd207, %rd185, 112;
	// begin inline asm
	cvta.to.global.u64 %rd206, %rd207;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd206];
	// end inline asm
	mov.b32 	%f656, %r250;
	mul.f32 	%f657, %f218, %f656;
	fma.rn.f32 	%f658, %f634, %f977, %f657;
	mul.f32 	%f659, %f654, %f654;
	fma.rn.f32 	%f660, %f653, %f653, %f659;
	fma.rn.f32 	%f661, %f655, %f655, %f660;
	fma.rn.f32 	%f662, %f658, %f658, %f661;
	sqrt.rn.f32 	%f663, %f662;
	rcp.rn.f32 	%f664, %f663;
	mul.f32 	%f974, %f653, %f664;
	mul.f32 	%f975, %f654, %f664;
	mul.f32 	%f976, %f655, %f664;
	mul.f32 	%f977, %f664, %f658;

$L__BB0_33:
	mul.f32 	%f665, %f975, %f975;
	fma.rn.f32 	%f666, %f974, %f974, %f665;
	fma.rn.f32 	%f667, %f976, %f976, %f666;
	fma.rn.f32 	%f668, %f977, %f977, %f667;
	rcp.rn.f32 	%f669, %f668;
	mul.f32 	%f670, %f974, %f669;
	mul.f32 	%f671, %f975, %f669;
	mul.f32 	%f672, %f976, %f669;
	mul.f32 	%f673, %f977, %f669;
	mul.f32 	%f674, %f974, %f670;
	mul.f32 	%f675, %f975, %f671;
	mul.f32 	%f676, %f976, %f672;
	mul.f32 	%f677, %f974, %f671;
	mul.f32 	%f678, %f976, %f673;
	mul.f32 	%f679, %f974, %f672;
	mul.f32 	%f680, %f975, %f673;
	mul.f32 	%f681, %f975, %f672;
	mul.f32 	%f682, %f974, %f673;
	sub.f32 	%f683, %f674, %f675;
	sub.f32 	%f684, %f683, %f676;
	fma.rn.f32 	%f685, %f977, %f673, %f684;
	sub.f32 	%f686, %f677, %f678;
	add.f32 	%f687, %f686, %f686;
	add.f32 	%f688, %f679, %f680;
	add.f32 	%f689, %f688, %f688;
	add.f32 	%f690, %f677, %f678;
	add.f32 	%f691, %f690, %f690;
	sub.f32 	%f692, %f675, %f674;
	sub.f32 	%f693, %f692, %f676;
	fma.rn.f32 	%f694, %f977, %f673, %f693;
	sub.f32 	%f695, %f681, %f682;
	add.f32 	%f696, %f695, %f695;
	sub.f32 	%f697, %f679, %f680;
	add.f32 	%f698, %f697, %f697;
	add.f32 	%f699, %f681, %f682;
	add.f32 	%f700, %f699, %f699;
	neg.f32 	%f701, %f674;
	sub.f32 	%f702, %f701, %f675;
	add.f32 	%f703, %f676, %f702;
	fma.rn.f32 	%f704, %f977, %f673, %f703;
	mul.f32 	%f705, %f970, %f685;
	fma.rn.f32 	%f706, %f972, %f687, %f705;
	fma.rn.f32 	%f986, %f973, %f689, %f706;
	mul.f32 	%f707, %f972, %f694;
	fma.rn.f32 	%f708, %f970, %f691, %f707;
	fma.rn.f32 	%f983, %f973, %f696, %f708;
	mul.f32 	%f709, %f972, %f700;
	fma.rn.f32 	%f710, %f970, %f698, %f709;
	fma.rn.f32 	%f980, %f973, %f704, %f710;
	mul.f32 	%f711, %f969, %f685;
	fma.rn.f32 	%f985, %f971, %f687, %f711;
	mul.f32 	%f712, %f971, %f694;
	fma.rn.f32 	%f982, %f969, %f691, %f712;
	mul.f32 	%f713, %f971, %f700;
	fma.rn.f32 	%f979, %f969, %f698, %f713;
	mul.f32 	%f984, %f968, %f685;
	mul.f32 	%f981, %f968, %f691;
	mul.f32 	%f978, %f968, %f698;

$L__BB0_36:
	mul.f32 	%f745, %f979, %f983;
	mul.f32 	%f746, %f980, %f982;
	sub.f32 	%f747, %f746, %f745;
	mul.f32 	%f748, %f984, %f747;
	mul.f32 	%f749, %f978, %f983;
	mul.f32 	%f750, %f980, %f981;
	sub.f32 	%f751, %f750, %f749;
	mul.f32 	%f752, %f751, %f985;
	sub.f32 	%f753, %f748, %f752;
	mul.f32 	%f754, %f978, %f982;
	mul.f32 	%f755, %f979, %f981;
	sub.f32 	%f756, %f755, %f754;
	fma.rn.f32 	%f757, %f756, %f986, %f753;
	rcp.rn.f32 	%f758, %f757;
	mul.f32 	%f993, %f747, %f758;
	mul.f32 	%f759, %f980, %f985;
	mul.f32 	%f760, %f979, %f986;
	sub.f32 	%f761, %f760, %f759;
	mul.f32 	%f994, %f761, %f758;
	mul.f32 	%f762, %f982, %f986;
	mul.f32 	%f763, %f983, %f985;
	sub.f32 	%f764, %f763, %f762;
	mul.f32 	%f995, %f764, %f758;
	sub.f32 	%f765, %f749, %f750;
	mul.f32 	%f990, %f765, %f758;
	mul.f32 	%f766, %f978, %f986;
	mul.f32 	%f767, %f980, %f984;
	sub.f32 	%f768, %f767, %f766;
	mul.f32 	%f991, %f768, %f758;
	mul.f32 	%f769, %f983, %f984;
	mul.f32 	%f770, %f981, %f986;
	sub.f32 	%f771, %f770, %f769;
	mul.f32 	%f992, %f771, %f758;
	mul.f32 	%f987, %f756, %f758;
	mul.f32 	%f772, %f979, %f984;
	mul.f32 	%f773, %f978, %f985;
	sub.f32 	%f774, %f773, %f772;
	mul.f32 	%f988, %f774, %f758;
	mul.f32 	%f775, %f981, %f985;
	mul.f32 	%f776, %f982, %f984;
	sub.f32 	%f777, %f776, %f775;
	mul.f32 	%f989, %f777, %f758;
	bra.uni 	$L__BB0_37;

$L__BB0_28:
	// begin inline asm
	call (%rd258), _optix_get_instance_inverse_transform_from_handle, (%rd137);
	// end inline asm

$L__BB0_29:
	// begin inline asm
	cvta.to.global.u64 %rd143, %rd258;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd143];
	// end inline asm
	mov.b32 	%f993, %r167;
	mov.b32 	%f994, %r168;
	mov.b32 	%f995, %r169;
	add.s64 	%rd147, %rd258, 16;
	// begin inline asm
	cvta.to.global.u64 %rd146, %rd147;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd146];
	// end inline asm
	mov.b32 	%f990, %r171;
	mov.b32 	%f991, %r172;
	mov.b32 	%f992, %r173;
	add.s64 	%rd150, %rd258, 32;
	// begin inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd149];
	// end inline asm
	mov.b32 	%f987, %r175;
	mov.b32 	%f988, %r176;
	mov.b32 	%f989, %r177;

$L__BB0_37:
	setp.eq.s32 	%p20, %r322, 0;
	@%p20 bra 	$L__BB0_39;

	mul.f32 	%f778, %f964, %f994;
	fma.rn.f32 	%f779, %f961, %f993, %f778;
	fma.rn.f32 	%f304, %f967, %f995, %f779;
	mul.f32 	%f780, %f963, %f994;
	fma.rn.f32 	%f781, %f960, %f993, %f780;
	fma.rn.f32 	%f305, %f966, %f995, %f781;
	mul.f32 	%f782, %f962, %f994;
	fma.rn.f32 	%f783, %f959, %f993, %f782;
	fma.rn.f32 	%f995, %f965, %f995, %f783;
	mul.f32 	%f784, %f964, %f991;
	fma.rn.f32 	%f785, %f961, %f990, %f784;
	fma.rn.f32 	%f307, %f967, %f992, %f785;
	mul.f32 	%f786, %f963, %f991;
	fma.rn.f32 	%f787, %f960, %f990, %f786;
	fma.rn.f32 	%f308, %f966, %f992, %f787;
	mul.f32 	%f788, %f962, %f991;
	fma.rn.f32 	%f789, %f959, %f990, %f788;
	fma.rn.f32 	%f992, %f965, %f992, %f789;
	mul.f32 	%f790, %f964, %f988;
	fma.rn.f32 	%f791, %f961, %f987, %f790;
	fma.rn.f32 	%f310, %f967, %f989, %f791;
	mul.f32 	%f792, %f963, %f988;
	fma.rn.f32 	%f793, %f960, %f987, %f792;
	fma.rn.f32 	%f311, %f966, %f989, %f793;
	mul.f32 	%f794, %f962, %f988;
	fma.rn.f32 	%f795, %f959, %f987, %f794;
	fma.rn.f32 	%f989, %f965, %f989, %f795;
	mov.f32 	%f987, %f310;
	mov.f32 	%f988, %f311;
	mov.f32 	%f990, %f307;
	mov.f32 	%f991, %f308;
	mov.f32 	%f993, %f304;
	mov.f32 	%f994, %f305;

$L__BB0_39:
	add.s32 	%r322, %r322, 1;
	setp.lt.u32 	%p21, %r322, %r162;
	mov.f32 	%f959, %f995;
	mov.f32 	%f960, %f994;
	mov.f32 	%f961, %f993;
	mov.f32 	%f962, %f992;
	mov.f32 	%f963, %f991;
	mov.f32 	%f964, %f990;
	mov.f32 	%f965, %f989;
	mov.f32 	%f966, %f988;
	mov.f32 	%f967, %f987;
	@%p21 bra 	$L__BB0_24;

$L__BB0_40:
	mul.f32 	%f796, %f1015, %f994;
	fma.rn.f32 	%f797, %f1014, %f993, %f796;
	mul.f32 	%f798, %f1015, %f991;
	fma.rn.f32 	%f799, %f1014, %f990, %f798;
	mul.f32 	%f800, %f1015, %f988;
	fma.rn.f32 	%f801, %f1014, %f987, %f800;
	fma.rn.f32 	%f1016, %f609, %f989, %f801;
	fma.rn.f32 	%f1015, %f609, %f992, %f799;
	fma.rn.f32 	%f1014, %f609, %f995, %f797;
	bra.uni 	$L__BB0_42;

$L__BB0_41:
	mov.f32 	%f1016, %f609;

$L__BB0_42:
	// begin inline asm
	call (%f802), _optix_get_ray_tmin, ();
	// end inline asm
	// begin inline asm
	call (%f803), _optix_get_ray_tmax, ();
	// end inline asm
	sub.f32 	%f340, %f803, %f802;
	fma.rn.f32 	%f806, %f1014, %f802, %f956;
	fma.rn.f32 	%f807, %f1015, %f802, %f957;
	fma.rn.f32 	%f808, %f1016, %f802, %f958;
	add.s64 	%rd16, %rd1, 32;
	ld.v4.f32 	{%f809, %f810, %f811, %f812}, [%rd1+32];
	mul.f32 	%f817, %f809, %f806;
	fma.rn.f32 	%f818, %f810, %f807, %f817;
	fma.rn.f32 	%f819, %f811, %f808, %f818;
	mov.f32 	%f820, 0f3F800000;
	fma.rn.f32 	%f821, %f812, %f820, %f819;
	ld.v4.f32 	{%f822, %f823, %f824, %f825}, [%rd1+48];
	mul.f32 	%f830, %f822, %f806;
	fma.rn.f32 	%f831, %f823, %f807, %f830;
	fma.rn.f32 	%f832, %f824, %f808, %f831;
	fma.rn.f32 	%f833, %f825, %f820, %f832;
	ld.v4.f32 	{%f834, %f835, %f836, %f837}, [%rd1+64];
	mul.f32 	%f842, %f834, %f806;
	fma.rn.f32 	%f843, %f835, %f807, %f842;
	fma.rn.f32 	%f844, %f836, %f808, %f843;
	fma.rn.f32 	%f341, %f837, %f820, %f844;
	mul.f32 	%f845, %f809, %f1014;
	fma.rn.f32 	%f846, %f810, %f1015, %f845;
	fma.rn.f32 	%f847, %f811, %f1016, %f846;
	mov.f32 	%f848, 0f00000000;
	fma.rn.f32 	%f849, %f812, %f848, %f847;
	mul.f32 	%f850, %f822, %f1014;
	fma.rn.f32 	%f851, %f823, %f1015, %f850;
	fma.rn.f32 	%f852, %f824, %f1016, %f851;
	fma.rn.f32 	%f853, %f825, %f848, %f852;
	mul.f32 	%f854, %f834, %f1014;
	fma.rn.f32 	%f855, %f835, %f1015, %f854;
	fma.rn.f32 	%f856, %f836, %f1016, %f855;
	fma.rn.f32 	%f342, %f837, %f848, %f856;
	mul.f32 	%f857, %f853, %f853;
	fma.rn.f32 	%f343, %f849, %f849, %f857;
	mul.f32 	%f858, %f833, %f853;
	fma.rn.f32 	%f859, %f821, %f849, %f858;
	add.f32 	%f344, %f859, %f859;
	mul.f32 	%f860, %f833, %f833;
	fma.rn.f32 	%f861, %f821, %f821, %f860;
	ld.f32 	%f862, [%rd1+164];
	mul.f32 	%f863, %f862, %f862;
	sub.f32 	%f345, %f861, %f863;
	setp.eq.f32 	%p23, %f343, 0f00000000;
	setp.eq.f32 	%p24, %f344, 0f00000000;
	and.pred  	%p25, %p23, %p24;
	mov.pred 	%p53, 0;
	@%p25 bra 	$L__BB0_45;

	neg.f32 	%f864, %f345;
	div.rn.f32 	%f1017, %f864, %f344;
	mul.f32 	%f865, %f343, 0fC0800000;
	mul.f32 	%f866, %f865, %f345;
	fma.rn.f32 	%f347, %f344, %f344, %f866;
	setp.neu.f32 	%p27, %f343, 0f00000000;
	setp.lt.f32 	%p28, %f347, 0f00000000;
	and.pred  	%p29, %p28, %p27;
	mov.f32 	%f1018, %f1017;
	@%p29 bra 	$L__BB0_45;

	mov.b32 	%r313, %f344;
	and.b32  	%r314, %r313, -2147483648;
	sqrt.rn.f32 	%f867, %f347;
	mov.b32 	%r315, %f867;
	and.b32  	%r316, %r315, 2147483647;
	or.b32  	%r317, %r316, %r314;
	mov.b32 	%f868, %r317;
	add.f32 	%f869, %f344, %f868;
	mul.f32 	%f870, %f869, 0fBF000000;
	div.rn.f32 	%f871, %f870, %f343;
	div.rn.f32 	%f872, %f345, %f870;
	min.f32 	%f873, %f871, %f872;
	max.f32 	%f874, %f871, %f872;
	selp.f32 	%f348, %f1017, %f873, %p23;
	selp.f32 	%f1018, %f1017, %f874, %p23;
	mov.pred 	%p53, -1;
	mov.f32 	%f1017, %f348;

$L__BB0_45:
	fma.rn.f32 	%f352, %f342, %f1017, %f341;
	fma.rn.f32 	%f353, %f342, %f1018, %f341;
	setp.ge.f32 	%p32, %f1018, 0f00000000;
	setp.le.f32 	%p33, %f1017, %f340;
	and.pred  	%p34, %p33, %p32;
	and.pred  	%p35, %p53, %p34;
	setp.leu.f32 	%p36, %f1018, %f340;
	setp.geu.f32 	%p37, %f1017, 0f00000000;
	or.pred  	%p38, %p37, %p36;
	and.pred  	%p39, %p38, %p35;
	mov.u16 	%rs3, 0;
	not.pred 	%p40, %p39;
	mov.u16 	%rs7, %rs3;
	@%p40 bra 	$L__BB0_51;

	setp.ltu.f32 	%p41, %f352, 0f00000000;
	@%p41 bra 	$L__BB0_48;

	ld.f32 	%f875, [%rd16+128];
	setp.le.f32 	%p42, %f352, %f875;
	setp.ge.f32 	%p43, %f1017, 0f00000000;
	and.pred  	%p44, %p43, %p42;
	mov.u16 	%rs7, 1;
	@%p44 bra 	$L__BB0_51;

$L__BB0_48:
	setp.ltu.f32 	%p45, %f353, 0f00000000;
	mov.u16 	%rs7, %rs3;
	@%p45 bra 	$L__BB0_51;

	ld.f32 	%f876, [%rd16+128];
	setp.gtu.f32 	%p46, %f353, %f876;
	mov.u16 	%rs7, %rs3;
	@%p46 bra 	$L__BB0_51;

	setp.le.f32 	%p47, %f1018, %f340;
	selp.u16 	%rs7, 1, 0, %p47;

$L__BB0_51:
	setp.ltu.f32 	%p48, %f352, 0f00000000;
	@%p48 bra 	$L__BB0_53;

	ld.f32 	%f877, [%rd16+128];
	setp.le.f32 	%p49, %f352, %f877;
	setp.ge.f32 	%p50, %f1017, 0f00000000;
	and.pred  	%p51, %p50, %p49;
	@%p51 bra 	$L__BB0_54;

$L__BB0_53:
	mov.f32 	%f1017, %f1018;

$L__BB0_54:
	setp.eq.s16 	%p52, %rs7, 0;
	@%p52 bra 	$L__BB0_56;

	mov.u32 	%r319, 254;
	// begin inline asm
	call (%r318), _optix_report_intersection_0, (%f1017, %r319);
	// end inline asm

$L__BB0_56:
	ret;

}
	// .globl	__intersection__disk
.visible .entry __intersection__disk()
{
	.reg .pred 	%p<22>;
	.reg .f32 	%f<988>;
	.reg .b32 	%r<320>;
	.reg .b64 	%rd<258>;


	// begin inline asm
	call (%rd16), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd16+8];
	// begin inline asm
	call (%f927), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f928), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f929), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p1, %r9, 0;
	@%p1 bra 	$L__BB1_21;

	// begin inline asm
	call (%r10), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f346), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p2, %r10, 0;
	@%p2 bra 	$L__BB1_19;

	mov.u32 	%r318, 0;

$L__BB1_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd17), _optix_get_transform_list_handle, (%r318);
	// end inline asm
	// begin inline asm
	call (%r13), _optix_get_transform_type_from_handle, (%rd17);
	// end inline asm
	or.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p3, %r14, 3;
	@%p3 bra 	$L__BB1_9;
	bra.uni 	$L__BB1_4;

$L__BB1_9:
	setp.eq.s32 	%p6, %r13, 2;
	@%p6 bra 	$L__BB1_13;
	bra.uni 	$L__BB1_10;

$L__BB1_13:
	// begin inline asm
	call (%rd89), _optix_get_matrix_motion_transform_from_handle, (%rd17);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd91, %rd89;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd91];
	// end inline asm
	add.s64 	%rd95, %rd89, 16;
	// begin inline asm
	cvta.to.global.u64 %rd94, %rd95;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd94];
	// end inline asm
	add.s64 	%rd98, %rd89, 32;
	// begin inline asm
	cvta.to.global.u64 %rd97, %rd98;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd97];
	// end inline asm
	add.s64 	%rd101, %rd89, 48;
	// begin inline asm
	cvta.to.global.u64 %rd100, %rd101;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd100];
	// end inline asm
	add.s64 	%rd104, %rd89, 64;
	// begin inline asm
	cvta.to.global.u64 %rd103, %rd104;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd103];
	// end inline asm
	add.s64 	%rd107, %rd89, 80;
	// begin inline asm
	cvta.to.global.u64 %rd106, %rd107;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd106];
	// end inline asm
	add.s64 	%rd110, %rd89, 96;
	// begin inline asm
	cvta.to.global.u64 %rd109, %rd110;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd109];
	// end inline asm
	add.s64 	%rd113, %rd89, 112;
	// begin inline asm
	cvta.to.global.u64 %rd112, %rd113;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd112];
	// end inline asm
	mov.b32 	%f474, %r105;
	mov.b32 	%f475, %r106;
	and.b32  	%r146, %r104, 65535;
	add.s32 	%r147, %r146, -1;
	cvt.rn.f32.s32 	%f476, %r147;
	sub.f32 	%f477, %f346, %f474;
	mul.f32 	%f478, %f477, %f476;
	sub.f32 	%f479, %f475, %f474;
	div.rn.f32 	%f480, %f478, %f479;
	min.f32 	%f481, %f476, %f480;
	mov.f32 	%f482, 0f00000000;
	max.f32 	%f483, %f482, %f481;
	cvt.rmi.f32.f32 	%f484, %f483;
	sub.f32 	%f90, %f483, %f484;
	cvt.rzi.s32.f32 	%r148, %f484;
	mul.wide.s32 	%rd124, %r148, 48;
	add.s64 	%rd116, %rd98, %rd124;
	// begin inline asm
	cvta.to.global.u64 %rd115, %rd116;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd115];
	// end inline asm
	mov.b32 	%f882, %r134;
	mov.b32 	%f881, %r135;
	mov.b32 	%f880, %r136;
	mov.b32 	%f879, %r137;
	add.s64 	%rd119, %rd116, 16;
	// begin inline asm
	cvta.to.global.u64 %rd118, %rd119;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd118];
	// end inline asm
	mov.b32 	%f886, %r138;
	mov.b32 	%f885, %r139;
	mov.b32 	%f884, %r140;
	mov.b32 	%f883, %r141;
	add.s64 	%rd122, %rd116, 32;
	// begin inline asm
	cvta.to.global.u64 %rd121, %rd122;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd121];
	// end inline asm
	mov.b32 	%f890, %r142;
	mov.b32 	%f889, %r143;
	mov.b32 	%f888, %r144;
	mov.b32 	%f887, %r145;
	setp.leu.f32 	%p8, %f90, 0f00000000;
	@%p8 bra 	$L__BB1_15;

	cvt.rmi.f32.f32 	%f850, %f483;
	cvt.rzi.s32.f32 	%r317, %f850;
	cvt.s64.s32 	%rd255, %r317;
	mov.f32 	%f485, 0f3F800000;
	sub.f32 	%f486, %f485, %f90;
	mul.lo.s64 	%rd134, %rd255, 48;
	add.s64 	%rd135, %rd89, %rd134;
	add.s64 	%rd126, %rd135, 80;
	// begin inline asm
	cvta.to.global.u64 %rd125, %rd126;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r149,%r150,%r151,%r152}, [%rd125];
	// end inline asm
	mov.b32 	%f487, %r149;
	mov.b32 	%f488, %r150;
	mov.b32 	%f489, %r151;
	mov.b32 	%f490, %r152;
	mul.f32 	%f491, %f90, %f487;
	mul.f32 	%f492, %f90, %f488;
	mul.f32 	%f493, %f90, %f489;
	mul.f32 	%f494, %f90, %f490;
	fma.rn.f32 	%f882, %f486, %f882, %f491;
	fma.rn.f32 	%f881, %f486, %f881, %f492;
	fma.rn.f32 	%f880, %f486, %f880, %f493;
	fma.rn.f32 	%f879, %f486, %f879, %f494;
	add.s64 	%rd129, %rd135, 96;
	// begin inline asm
	cvta.to.global.u64 %rd128, %rd129;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r153,%r154,%r155,%r156}, [%rd128];
	// end inline asm
	mov.b32 	%f495, %r153;
	mov.b32 	%f496, %r154;
	mov.b32 	%f497, %r155;
	mov.b32 	%f498, %r156;
	mul.f32 	%f499, %f90, %f495;
	mul.f32 	%f500, %f90, %f496;
	mul.f32 	%f501, %f90, %f497;
	mul.f32 	%f502, %f90, %f498;
	fma.rn.f32 	%f886, %f486, %f886, %f499;
	fma.rn.f32 	%f885, %f486, %f885, %f500;
	fma.rn.f32 	%f884, %f486, %f884, %f501;
	fma.rn.f32 	%f883, %f486, %f883, %f502;
	add.s64 	%rd132, %rd135, 112;
	// begin inline asm
	cvta.to.global.u64 %rd131, %rd132;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r157,%r158,%r159,%r160}, [%rd131];
	// end inline asm
	mov.b32 	%f503, %r157;
	mov.b32 	%f504, %r158;
	mov.b32 	%f505, %r159;
	mov.b32 	%f506, %r160;
	mul.f32 	%f507, %f90, %f503;
	mul.f32 	%f508, %f90, %f504;
	mul.f32 	%f509, %f90, %f505;
	mul.f32 	%f510, %f90, %f506;
	fma.rn.f32 	%f890, %f486, %f890, %f507;
	fma.rn.f32 	%f889, %f486, %f889, %f508;
	fma.rn.f32 	%f888, %f486, %f888, %f509;
	fma.rn.f32 	%f887, %f486, %f887, %f510;
	bra.uni 	$L__BB1_15;

$L__BB1_4:
	mov.f32 	%f891, 0f00000000;
	mov.f32 	%f894, 0f3F800000;
	setp.eq.s32 	%p4, %r13, 4;
	@%p4 bra 	$L__BB1_7;

	setp.ne.s32 	%p5, %r13, 1;
	mov.f32 	%f892, %f891;
	mov.f32 	%f893, %f891;
	mov.f32 	%f895, %f891;
	mov.f32 	%f896, %f891;
	mov.f32 	%f897, %f894;
	mov.f32 	%f898, %f891;
	mov.f32 	%f899, %f891;
	mov.f32 	%f900, %f894;
	mov.f32 	%f901, %f891;
	mov.f32 	%f902, %f891;
	@%p5 bra 	$L__BB1_16;

	// begin inline asm
	call (%rd19), _optix_get_static_transform_from_handle, (%rd17);
	// end inline asm
	add.s64 	%rd256, %rd19, 64;
	bra.uni 	$L__BB1_8;

$L__BB1_10:
	// begin inline asm
	call (%rd32), _optix_get_srt_motion_transform_from_handle, (%rd17);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd34, %rd32;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r27,%r28,%r29,%r30}, [%rd34];
	// end inline asm
	add.s64 	%rd38, %rd32, 16;
	// begin inline asm
	cvta.to.global.u64 %rd37, %rd38;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r31,%r32,%r33,%r34}, [%rd37];
	// end inline asm
	add.s64 	%rd41, %rd32, 32;
	// begin inline asm
	cvta.to.global.u64 %rd40, %rd41;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r35,%r36,%r37,%r38}, [%rd40];
	// end inline asm
	add.s64 	%rd44, %rd32, 48;
	// begin inline asm
	cvta.to.global.u64 %rd43, %rd44;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r39,%r40,%r41,%r42}, [%rd43];
	// end inline asm
	add.s64 	%rd47, %rd32, 64;
	// begin inline asm
	cvta.to.global.u64 %rd46, %rd47;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r43,%r44,%r45,%r46}, [%rd46];
	// end inline asm
	add.s64 	%rd50, %rd32, 80;
	// begin inline asm
	cvta.to.global.u64 %rd49, %rd50;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd49];
	// end inline asm
	add.s64 	%rd53, %rd32, 96;
	// begin inline asm
	cvta.to.global.u64 %rd52, %rd53;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd52];
	// end inline asm
	add.s64 	%rd56, %rd32, 112;
	// begin inline asm
	cvta.to.global.u64 %rd55, %rd56;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd55];
	// end inline asm
	add.s64 	%rd59, %rd32, 128;
	// begin inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd58];
	// end inline asm
	add.s64 	%rd62, %rd32, 144;
	// begin inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd61];
	// end inline asm
	mov.b32 	%f361, %r30;
	mov.b32 	%f362, %r31;
	and.b32  	%r83, %r29, 65535;
	add.s32 	%r84, %r83, -1;
	cvt.rn.f32.s32 	%f363, %r84;
	sub.f32 	%f364, %f346, %f361;
	mul.f32 	%f365, %f364, %f363;
	sub.f32 	%f366, %f362, %f361;
	div.rn.f32 	%f367, %f365, %f366;
	min.f32 	%f368, %f363, %f367;
	mov.f32 	%f369, 0f00000000;
	max.f32 	%f370, %f369, %f368;
	cvt.rmi.f32.f32 	%f371, %f370;
	sub.f32 	%f29, %f370, %f371;
	cvt.rzi.s32.f32 	%r85, %f371;
	mul.wide.s32 	%rd76, %r85, 64;
	add.s64 	%rd65, %rd41, %rd76;
	// begin inline asm
	cvta.to.global.u64 %rd64, %rd65;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd64];
	// end inline asm
	mov.b32 	%f863, %r67;
	mov.b32 	%f864, %r68;
	mov.b32 	%f865, %r69;
	mov.b32 	%f866, %r70;
	add.s64 	%rd68, %rd65, 16;
	// begin inline asm
	cvta.to.global.u64 %rd67, %rd68;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd67];
	// end inline asm
	mov.b32 	%f867, %r71;
	mov.b32 	%f868, %r72;
	mov.b32 	%f869, %r73;
	mov.b32 	%f870, %r74;
	add.s64 	%rd71, %rd65, 32;
	// begin inline asm
	cvta.to.global.u64 %rd70, %rd71;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd70];
	// end inline asm
	mov.b32 	%f871, %r75;
	mov.b32 	%f872, %r76;
	mov.b32 	%f873, %r77;
	mov.b32 	%f874, %r78;
	add.s64 	%rd74, %rd65, 48;
	// begin inline asm
	cvta.to.global.u64 %rd73, %rd74;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd73];
	// end inline asm
	mov.b32 	%f875, %r79;
	mov.b32 	%f876, %r80;
	mov.b32 	%f877, %r81;
	mov.b32 	%f878, %r82;
	setp.leu.f32 	%p7, %f29, 0f00000000;
	@%p7 bra 	$L__BB1_12;

	mov.f32 	%f372, 0f3F800000;
	sub.f32 	%f373, %f372, %f29;
	add.s64 	%rd78, %rd65, 64;
	// begin inline asm
	cvta.to.global.u64 %rd77, %rd78;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r86,%r87,%r88,%r89}, [%rd77];
	// end inline asm
	mov.b32 	%f374, %r86;
	mov.b32 	%f375, %r87;
	mov.b32 	%f376, %r88;
	mov.b32 	%f377, %r89;
	mul.f32 	%f378, %f29, %f374;
	mul.f32 	%f379, %f29, %f375;
	mul.f32 	%f380, %f29, %f376;
	mul.f32 	%f381, %f29, %f377;
	fma.rn.f32 	%f863, %f373, %f863, %f378;
	fma.rn.f32 	%f864, %f373, %f864, %f379;
	fma.rn.f32 	%f865, %f373, %f865, %f380;
	fma.rn.f32 	%f866, %f373, %f866, %f381;
	add.s64 	%rd81, %rd65, 80;
	// begin inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd80];
	// end inline asm
	mov.b32 	%f382, %r90;
	mov.b32 	%f383, %r91;
	mov.b32 	%f384, %r92;
	mov.b32 	%f385, %r93;
	mul.f32 	%f386, %f29, %f382;
	mul.f32 	%f387, %f29, %f383;
	mul.f32 	%f388, %f29, %f384;
	mul.f32 	%f389, %f29, %f385;
	fma.rn.f32 	%f867, %f373, %f867, %f386;
	fma.rn.f32 	%f868, %f373, %f868, %f387;
	fma.rn.f32 	%f869, %f373, %f869, %f388;
	fma.rn.f32 	%f870, %f373, %f870, %f389;
	add.s64 	%rd84, %rd65, 96;
	// begin inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd83];
	// end inline asm
	mov.b32 	%f390, %r94;
	mov.b32 	%f391, %r95;
	mov.b32 	%f392, %r96;
	mov.b32 	%f393, %r97;
	mul.f32 	%f394, %f29, %f390;
	mul.f32 	%f395, %f29, %f391;
	mul.f32 	%f396, %f29, %f392;
	mul.f32 	%f397, %f29, %f393;
	fma.rn.f32 	%f871, %f373, %f871, %f394;
	fma.rn.f32 	%f398, %f373, %f872, %f395;
	fma.rn.f32 	%f399, %f373, %f873, %f396;
	fma.rn.f32 	%f400, %f373, %f874, %f397;
	add.s64 	%rd87, %rd65, 112;
	// begin inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd86];
	// end inline asm
	mov.b32 	%f401, %r98;
	mov.b32 	%f402, %r99;
	mov.b32 	%f403, %r100;
	mov.b32 	%f404, %r101;
	mul.f32 	%f405, %f29, %f401;
	mul.f32 	%f406, %f29, %f402;
	mul.f32 	%f407, %f29, %f403;
	mul.f32 	%f408, %f29, %f404;
	fma.rn.f32 	%f409, %f373, %f875, %f405;
	fma.rn.f32 	%f876, %f373, %f876, %f406;
	fma.rn.f32 	%f877, %f373, %f877, %f407;
	fma.rn.f32 	%f878, %f373, %f878, %f408;
	mul.f32 	%f410, %f399, %f399;
	fma.rn.f32 	%f411, %f398, %f398, %f410;
	fma.rn.f32 	%f412, %f400, %f400, %f411;
	fma.rn.f32 	%f413, %f409, %f409, %f412;
	sqrt.rn.f32 	%f414, %f413;
	rcp.rn.f32 	%f415, %f414;
	mul.f32 	%f872, %f398, %f415;
	mul.f32 	%f873, %f399, %f415;
	mul.f32 	%f874, %f400, %f415;
	mul.f32 	%f875, %f415, %f409;

$L__BB1_12:
	mul.f32 	%f416, %f873, %f873;
	fma.rn.f32 	%f417, %f872, %f872, %f416;
	fma.rn.f32 	%f418, %f874, %f874, %f417;
	fma.rn.f32 	%f419, %f875, %f875, %f418;
	rcp.rn.f32 	%f420, %f419;
	mul.f32 	%f421, %f872, %f420;
	mul.f32 	%f422, %f873, %f420;
	mul.f32 	%f423, %f874, %f420;
	mul.f32 	%f424, %f875, %f420;
	mul.f32 	%f425, %f872, %f421;
	mul.f32 	%f426, %f873, %f422;
	mul.f32 	%f427, %f874, %f423;
	mul.f32 	%f428, %f872, %f422;
	mul.f32 	%f429, %f874, %f424;
	mul.f32 	%f430, %f872, %f423;
	mul.f32 	%f431, %f873, %f424;
	mul.f32 	%f432, %f873, %f423;
	mul.f32 	%f433, %f872, %f424;
	sub.f32 	%f434, %f425, %f426;
	sub.f32 	%f435, %f434, %f427;
	fma.rn.f32 	%f436, %f875, %f424, %f435;
	sub.f32 	%f437, %f428, %f429;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f439, %f430, %f431;
	add.f32 	%f440, %f439, %f439;
	add.f32 	%f441, %f428, %f429;
	add.f32 	%f442, %f441, %f441;
	sub.f32 	%f443, %f426, %f425;
	sub.f32 	%f444, %f443, %f427;
	fma.rn.f32 	%f445, %f875, %f424, %f444;
	sub.f32 	%f446, %f432, %f433;
	add.f32 	%f447, %f446, %f446;
	sub.f32 	%f448, %f430, %f431;
	add.f32 	%f449, %f448, %f448;
	add.f32 	%f450, %f432, %f433;
	add.f32 	%f451, %f450, %f450;
	neg.f32 	%f452, %f425;
	sub.f32 	%f453, %f452, %f426;
	add.f32 	%f454, %f427, %f453;
	fma.rn.f32 	%f455, %f875, %f424, %f454;
	mul.f32 	%f456, %f866, %f436;
	fma.rn.f32 	%f457, %f869, %f438, %f456;
	fma.rn.f32 	%f458, %f871, %f440, %f457;
	add.f32 	%f879, %f876, %f458;
	mul.f32 	%f459, %f869, %f445;
	fma.rn.f32 	%f460, %f866, %f442, %f459;
	fma.rn.f32 	%f461, %f871, %f447, %f460;
	add.f32 	%f883, %f877, %f461;
	mul.f32 	%f462, %f869, %f451;
	fma.rn.f32 	%f463, %f866, %f449, %f462;
	fma.rn.f32 	%f464, %f871, %f455, %f463;
	add.f32 	%f887, %f878, %f464;
	mul.f32 	%f465, %f865, %f436;
	fma.rn.f32 	%f466, %f868, %f438, %f465;
	fma.rn.f32 	%f880, %f870, %f440, %f466;
	mul.f32 	%f467, %f868, %f445;
	fma.rn.f32 	%f468, %f865, %f442, %f467;
	fma.rn.f32 	%f884, %f870, %f447, %f468;
	mul.f32 	%f469, %f868, %f451;
	fma.rn.f32 	%f470, %f865, %f449, %f469;
	fma.rn.f32 	%f888, %f870, %f455, %f470;
	mul.f32 	%f471, %f864, %f436;
	fma.rn.f32 	%f881, %f867, %f438, %f471;
	mul.f32 	%f472, %f867, %f445;
	fma.rn.f32 	%f885, %f864, %f442, %f472;
	mul.f32 	%f473, %f867, %f451;
	fma.rn.f32 	%f889, %f864, %f449, %f473;
	mul.f32 	%f882, %f863, %f436;
	mul.f32 	%f886, %f863, %f442;
	mul.f32 	%f890, %f863, %f449;

$L__BB1_15:
	mul.f32 	%f511, %f884, %f889;
	mul.f32 	%f512, %f885, %f888;
	sub.f32 	%f513, %f512, %f511;
	mul.f32 	%f514, %f882, %f513;
	mul.f32 	%f515, %f884, %f890;
	mul.f32 	%f516, %f886, %f888;
	sub.f32 	%f517, %f516, %f515;
	mul.f32 	%f518, %f881, %f517;
	sub.f32 	%f519, %f514, %f518;
	mul.f32 	%f520, %f885, %f890;
	mul.f32 	%f521, %f886, %f889;
	sub.f32 	%f522, %f521, %f520;
	fma.rn.f32 	%f523, %f880, %f522, %f519;
	rcp.rn.f32 	%f524, %f523;
	mul.f32 	%f894, %f513, %f524;
	mul.f32 	%f525, %f881, %f888;
	mul.f32 	%f526, %f880, %f889;
	sub.f32 	%f527, %f526, %f525;
	mul.f32 	%f893, %f527, %f524;
	mul.f32 	%f528, %f880, %f885;
	mul.f32 	%f529, %f881, %f884;
	sub.f32 	%f530, %f529, %f528;
	mul.f32 	%f892, %f530, %f524;
	sub.f32 	%f531, %f515, %f516;
	mul.f32 	%f898, %f531, %f524;
	mul.f32 	%f532, %f880, %f890;
	mul.f32 	%f533, %f882, %f888;
	sub.f32 	%f534, %f533, %f532;
	mul.f32 	%f897, %f534, %f524;
	mul.f32 	%f535, %f882, %f884;
	mul.f32 	%f536, %f880, %f886;
	sub.f32 	%f537, %f536, %f535;
	mul.f32 	%f896, %f537, %f524;
	mul.f32 	%f902, %f522, %f524;
	mul.f32 	%f538, %f882, %f889;
	mul.f32 	%f539, %f881, %f890;
	sub.f32 	%f540, %f539, %f538;
	mul.f32 	%f901, %f540, %f524;
	mul.f32 	%f541, %f881, %f886;
	mul.f32 	%f542, %f882, %f885;
	sub.f32 	%f543, %f542, %f541;
	mul.f32 	%f900, %f543, %f524;
	mul.f32 	%f544, %f879, %f894;
	neg.f32 	%f545, %f544;
	mul.f32 	%f546, %f883, %f893;
	sub.f32 	%f547, %f545, %f546;
	mul.f32 	%f548, %f887, %f892;
	sub.f32 	%f891, %f547, %f548;
	mul.f32 	%f549, %f879, %f898;
	neg.f32 	%f550, %f549;
	mul.f32 	%f551, %f883, %f897;
	sub.f32 	%f552, %f550, %f551;
	mul.f32 	%f553, %f887, %f896;
	sub.f32 	%f895, %f552, %f553;
	mul.f32 	%f554, %f879, %f902;
	neg.f32 	%f555, %f554;
	mul.f32 	%f556, %f883, %f901;
	sub.f32 	%f557, %f555, %f556;
	mul.f32 	%f558, %f887, %f900;
	sub.f32 	%f899, %f557, %f558;
	bra.uni 	$L__BB1_16;

$L__BB1_7:
	// begin inline asm
	call (%rd256), _optix_get_instance_inverse_transform_from_handle, (%rd17);
	// end inline asm

$L__BB1_8:
	// begin inline asm
	cvta.to.global.u64 %rd23, %rd256;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r15,%r16,%r17,%r18}, [%rd23];
	// end inline asm
	mov.b32 	%f894, %r15;
	mov.b32 	%f893, %r16;
	mov.b32 	%f892, %r17;
	mov.b32 	%f891, %r18;
	add.s64 	%rd27, %rd256, 16;
	// begin inline asm
	cvta.to.global.u64 %rd26, %rd27;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r19,%r20,%r21,%r22}, [%rd26];
	// end inline asm
	mov.b32 	%f898, %r19;
	mov.b32 	%f897, %r20;
	mov.b32 	%f896, %r21;
	mov.b32 	%f895, %r22;
	add.s64 	%rd30, %rd256, 32;
	// begin inline asm
	cvta.to.global.u64 %rd29, %rd30;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r23,%r24,%r25,%r26}, [%rd29];
	// end inline asm
	mov.b32 	%f902, %r23;
	mov.b32 	%f901, %r24;
	mov.b32 	%f900, %r25;
	mov.b32 	%f899, %r26;

$L__BB1_16:
	setp.eq.s32 	%p9, %r318, 0;
	@%p9 bra 	$L__BB1_18;

	mul.f32 	%f559, %f859, %f894;
	fma.rn.f32 	%f560, %f855, %f893, %f559;
	fma.rn.f32 	%f151, %f851, %f892, %f560;
	mul.f32 	%f561, %f860, %f894;
	fma.rn.f32 	%f562, %f856, %f893, %f561;
	fma.rn.f32 	%f152, %f852, %f892, %f562;
	mul.f32 	%f563, %f861, %f894;
	fma.rn.f32 	%f564, %f857, %f893, %f563;
	fma.rn.f32 	%f153, %f853, %f892, %f564;
	mul.f32 	%f565, %f862, %f894;
	fma.rn.f32 	%f566, %f858, %f893, %f565;
	fma.rn.f32 	%f567, %f854, %f892, %f566;
	add.f32 	%f891, %f891, %f567;
	mul.f32 	%f568, %f859, %f898;
	fma.rn.f32 	%f569, %f855, %f897, %f568;
	fma.rn.f32 	%f155, %f851, %f896, %f569;
	mul.f32 	%f570, %f860, %f898;
	fma.rn.f32 	%f571, %f856, %f897, %f570;
	fma.rn.f32 	%f156, %f852, %f896, %f571;
	mul.f32 	%f572, %f861, %f898;
	fma.rn.f32 	%f573, %f857, %f897, %f572;
	fma.rn.f32 	%f157, %f853, %f896, %f573;
	mul.f32 	%f574, %f862, %f898;
	fma.rn.f32 	%f575, %f858, %f897, %f574;
	fma.rn.f32 	%f576, %f854, %f896, %f575;
	add.f32 	%f895, %f895, %f576;
	mul.f32 	%f577, %f859, %f902;
	fma.rn.f32 	%f578, %f855, %f901, %f577;
	fma.rn.f32 	%f159, %f851, %f900, %f578;
	mul.f32 	%f579, %f860, %f902;
	fma.rn.f32 	%f580, %f856, %f901, %f579;
	fma.rn.f32 	%f160, %f852, %f900, %f580;
	mul.f32 	%f581, %f861, %f902;
	fma.rn.f32 	%f582, %f857, %f901, %f581;
	fma.rn.f32 	%f161, %f853, %f900, %f582;
	mul.f32 	%f583, %f862, %f902;
	fma.rn.f32 	%f584, %f858, %f901, %f583;
	fma.rn.f32 	%f585, %f854, %f900, %f584;
	add.f32 	%f899, %f899, %f585;
	mov.f32 	%f892, %f153;
	mov.f32 	%f893, %f152;
	mov.f32 	%f894, %f151;
	mov.f32 	%f896, %f157;
	mov.f32 	%f897, %f156;
	mov.f32 	%f898, %f155;
	mov.f32 	%f900, %f161;
	mov.f32 	%f901, %f160;
	mov.f32 	%f902, %f159;

$L__BB1_18:
	add.s32 	%r318, %r318, 1;
	setp.lt.u32 	%p10, %r318, %r10;
	mov.f32 	%f851, %f902;
	mov.f32 	%f852, %f901;
	mov.f32 	%f853, %f900;
	mov.f32 	%f854, %f899;
	mov.f32 	%f855, %f898;
	mov.f32 	%f856, %f897;
	mov.f32 	%f857, %f896;
	mov.f32 	%f858, %f895;
	mov.f32 	%f859, %f894;
	mov.f32 	%f860, %f893;
	mov.f32 	%f861, %f892;
	mov.f32 	%f862, %f891;
	@%p10 bra 	$L__BB1_3;

$L__BB1_19:
	mul.f32 	%f586, %f927, %f894;
	fma.rn.f32 	%f587, %f928, %f893, %f586;
	fma.rn.f32 	%f588, %f929, %f892, %f587;
	mul.f32 	%f589, %f927, %f898;
	fma.rn.f32 	%f590, %f928, %f897, %f589;
	fma.rn.f32 	%f591, %f929, %f896, %f590;
	mul.f32 	%f592, %f927, %f902;
	fma.rn.f32 	%f593, %f928, %f901, %f592;
	fma.rn.f32 	%f594, %f929, %f900, %f593;
	add.f32 	%f929, %f899, %f594;
	add.f32 	%f928, %f895, %f591;
	add.f32 	%f927, %f891, %f588;

$L__BB1_21:
	// begin inline asm
	call (%f985), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f986), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f597), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r161), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p11, %r161, 0;
	@%p11 bra 	$L__BB1_41;

	// begin inline asm
	call (%r162), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f598), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p12, %r162, 0;
	@%p12 bra 	$L__BB1_40;

	mov.u32 	%r319, 0;

$L__BB1_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd136), _optix_get_transform_list_handle, (%r319);
	// end inline asm
	// begin inline asm
	call (%r165), _optix_get_transform_type_from_handle, (%rd136);
	// end inline asm
	or.b32  	%r166, %r165, 1;
	setp.eq.s32 	%p13, %r166, 3;
	@%p13 bra 	$L__BB1_30;
	bra.uni 	$L__BB1_25;

$L__BB1_30:
	setp.eq.s32 	%p16, %r165, 2;
	@%p16 bra 	$L__BB1_34;
	bra.uni 	$L__BB1_31;

$L__BB1_34:
	// begin inline asm
	call (%rd208), _optix_get_matrix_motion_transform_from_handle, (%rd136);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd210, %rd208;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd210];
	// end inline asm
	add.s64 	%rd214, %rd208, 16;
	// begin inline asm
	cvta.to.global.u64 %rd213, %rd214;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd213];
	// end inline asm
	add.s64 	%rd217, %rd208, 32;
	// begin inline asm
	cvta.to.global.u64 %rd216, %rd217;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd216];
	// end inline asm
	add.s64 	%rd220, %rd208, 48;
	// begin inline asm
	cvta.to.global.u64 %rd219, %rd220;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd219];
	// end inline asm
	add.s64 	%rd223, %rd208, 64;
	// begin inline asm
	cvta.to.global.u64 %rd222, %rd223;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd222];
	// end inline asm
	add.s64 	%rd226, %rd208, 80;
	// begin inline asm
	cvta.to.global.u64 %rd225, %rd226;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd225];
	// end inline asm
	add.s64 	%rd229, %rd208, 96;
	// begin inline asm
	cvta.to.global.u64 %rd228, %rd229;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd228];
	// end inline asm
	add.s64 	%rd232, %rd208, 112;
	// begin inline asm
	cvta.to.global.u64 %rd231, %rd232;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd231];
	// end inline asm
	mov.b32 	%f702, %r257;
	mov.b32 	%f703, %r258;
	and.b32  	%r298, %r256, 65535;
	add.s32 	%r299, %r298, -1;
	cvt.rn.f32.s32 	%f704, %r299;
	sub.f32 	%f705, %f598, %f702;
	mul.f32 	%f706, %f705, %f704;
	sub.f32 	%f707, %f703, %f702;
	div.rn.f32 	%f708, %f706, %f707;
	min.f32 	%f709, %f704, %f708;
	mov.f32 	%f710, 0f00000000;
	max.f32 	%f711, %f710, %f709;
	cvt.rmi.f32.f32 	%f712, %f711;
	sub.f32 	%f258, %f711, %f712;
	cvt.rzi.s32.f32 	%r300, %f712;
	cvt.s64.s32 	%rd15, %r300;
	mul.wide.s32 	%rd243, %r300, 48;
	add.s64 	%rd235, %rd217, %rd243;
	// begin inline asm
	cvta.to.global.u64 %rd234, %rd235;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd234];
	// end inline asm
	mov.b32 	%f955, %r286;
	mov.b32 	%f956, %r287;
	mov.b32 	%f957, %r288;
	add.s64 	%rd238, %rd235, 16;
	// begin inline asm
	cvta.to.global.u64 %rd237, %rd238;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd237];
	// end inline asm
	mov.b32 	%f952, %r290;
	mov.b32 	%f953, %r291;
	mov.b32 	%f954, %r292;
	add.s64 	%rd241, %rd235, 32;
	// begin inline asm
	cvta.to.global.u64 %rd240, %rd241;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd240];
	// end inline asm
	mov.b32 	%f949, %r294;
	mov.b32 	%f950, %r295;
	mov.b32 	%f951, %r296;
	setp.leu.f32 	%p18, %f258, 0f00000000;
	@%p18 bra 	$L__BB1_36;

	mov.f32 	%f713, 0f3F800000;
	sub.f32 	%f714, %f713, %f258;
	mul.lo.s64 	%rd253, %rd15, 48;
	add.s64 	%rd254, %rd208, %rd253;
	add.s64 	%rd245, %rd254, 80;
	// begin inline asm
	cvta.to.global.u64 %rd244, %rd245;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd244];
	// end inline asm
	mov.b32 	%f715, %r301;
	mov.b32 	%f716, %r302;
	mov.b32 	%f717, %r303;
	mul.f32 	%f718, %f258, %f715;
	mul.f32 	%f719, %f258, %f716;
	mul.f32 	%f720, %f258, %f717;
	fma.rn.f32 	%f955, %f714, %f955, %f718;
	fma.rn.f32 	%f956, %f714, %f956, %f719;
	fma.rn.f32 	%f957, %f714, %f957, %f720;
	add.s64 	%rd248, %rd254, 96;
	// begin inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd247];
	// end inline asm
	mov.b32 	%f721, %r305;
	mov.b32 	%f722, %r306;
	mov.b32 	%f723, %r307;
	mul.f32 	%f724, %f258, %f721;
	mul.f32 	%f725, %f258, %f722;
	mul.f32 	%f726, %f258, %f723;
	fma.rn.f32 	%f952, %f714, %f952, %f724;
	fma.rn.f32 	%f953, %f714, %f953, %f725;
	fma.rn.f32 	%f954, %f714, %f954, %f726;
	add.s64 	%rd251, %rd254, 112;
	// begin inline asm
	cvta.to.global.u64 %rd250, %rd251;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd250];
	// end inline asm
	mov.b32 	%f727, %r309;
	mov.b32 	%f728, %r310;
	mov.b32 	%f729, %r311;
	mul.f32 	%f730, %f258, %f727;
	mul.f32 	%f731, %f258, %f728;
	mul.f32 	%f732, %f258, %f729;
	fma.rn.f32 	%f949, %f714, %f949, %f730;
	fma.rn.f32 	%f950, %f714, %f950, %f731;
	fma.rn.f32 	%f951, %f714, %f951, %f732;
	bra.uni 	$L__BB1_36;

$L__BB1_25:
	mov.f32 	%f958, 0f00000000;
	mov.f32 	%f960, 0f3F800000;
	setp.eq.s32 	%p14, %r165, 4;
	@%p14 bra 	$L__BB1_28;

	setp.ne.s32 	%p15, %r165, 1;
	mov.f32 	%f959, %f958;
	mov.f32 	%f961, %f958;
	mov.f32 	%f962, %f960;
	mov.f32 	%f963, %f958;
	mov.f32 	%f964, %f960;
	mov.f32 	%f965, %f958;
	mov.f32 	%f966, %f958;
	@%p15 bra 	$L__BB1_37;

	// begin inline asm
	call (%rd138), _optix_get_static_transform_from_handle, (%rd136);
	// end inline asm
	add.s64 	%rd257, %rd138, 64;
	bra.uni 	$L__BB1_29;

$L__BB1_31:
	// begin inline asm
	call (%rd151), _optix_get_srt_motion_transform_from_handle, (%rd136);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd153, %rd151;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd153];
	// end inline asm
	add.s64 	%rd157, %rd151, 16;
	// begin inline asm
	cvta.to.global.u64 %rd156, %rd157;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd156];
	// end inline asm
	add.s64 	%rd160, %rd151, 32;
	// begin inline asm
	cvta.to.global.u64 %rd159, %rd160;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd159];
	// end inline asm
	add.s64 	%rd163, %rd151, 48;
	// begin inline asm
	cvta.to.global.u64 %rd162, %rd163;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd162];
	// end inline asm
	add.s64 	%rd166, %rd151, 64;
	// begin inline asm
	cvta.to.global.u64 %rd165, %rd166;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd165];
	// end inline asm
	add.s64 	%rd169, %rd151, 80;
	// begin inline asm
	cvta.to.global.u64 %rd168, %rd169;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd168];
	// end inline asm
	add.s64 	%rd172, %rd151, 96;
	// begin inline asm
	cvta.to.global.u64 %rd171, %rd172;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd171];
	// end inline asm
	add.s64 	%rd175, %rd151, 112;
	// begin inline asm
	cvta.to.global.u64 %rd174, %rd175;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd174];
	// end inline asm
	add.s64 	%rd178, %rd151, 128;
	// begin inline asm
	cvta.to.global.u64 %rd177, %rd178;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd177];
	// end inline asm
	add.s64 	%rd181, %rd151, 144;
	// begin inline asm
	cvta.to.global.u64 %rd180, %rd181;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd180];
	// end inline asm
	mov.b32 	%f610, %r182;
	mov.b32 	%f611, %r183;
	and.b32  	%r235, %r181, 65535;
	add.s32 	%r236, %r235, -1;
	cvt.rn.f32.s32 	%f612, %r236;
	sub.f32 	%f613, %f598, %f610;
	mul.f32 	%f614, %f613, %f612;
	sub.f32 	%f615, %f611, %f610;
	div.rn.f32 	%f616, %f614, %f615;
	min.f32 	%f617, %f612, %f616;
	mov.f32 	%f618, 0f00000000;
	max.f32 	%f619, %f618, %f617;
	cvt.rmi.f32.f32 	%f620, %f619;
	sub.f32 	%f218, %f619, %f620;
	cvt.rzi.s32.f32 	%r237, %f620;
	mul.wide.s32 	%rd195, %r237, 64;
	add.s64 	%rd184, %rd160, %rd195;
	// begin inline asm
	cvta.to.global.u64 %rd183, %rd184;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd183];
	// end inline asm
	mov.b32 	%f939, %r219;
	mov.b32 	%f940, %r220;
	mov.b32 	%f941, %r221;
	add.s64 	%rd187, %rd184, 16;
	// begin inline asm
	cvta.to.global.u64 %rd186, %rd187;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd186];
	// end inline asm
	mov.b32 	%f942, %r223;
	mov.b32 	%f943, %r224;
	mov.b32 	%f944, %r226;
	add.s64 	%rd190, %rd184, 32;
	// begin inline asm
	cvta.to.global.u64 %rd189, %rd190;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd189];
	// end inline asm
	mov.b32 	%f945, %r228;
	mov.b32 	%f946, %r229;
	mov.b32 	%f947, %r230;
	add.s64 	%rd193, %rd184, 48;
	// begin inline asm
	cvta.to.global.u64 %rd192, %rd193;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd192];
	// end inline asm
	mov.b32 	%f948, %r231;
	setp.leu.f32 	%p17, %f218, 0f00000000;
	@%p17 bra 	$L__BB1_33;

	mov.f32 	%f621, 0f3F800000;
	sub.f32 	%f622, %f621, %f218;
	add.s64 	%rd197, %rd184, 64;
	// begin inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd196];
	// end inline asm
	mov.b32 	%f623, %r238;
	mov.b32 	%f624, %r239;
	mov.b32 	%f625, %r240;
	mul.f32 	%f626, %f218, %f623;
	mul.f32 	%f627, %f218, %f624;
	mul.f32 	%f628, %f218, %f625;
	fma.rn.f32 	%f939, %f622, %f939, %f626;
	fma.rn.f32 	%f940, %f622, %f940, %f627;
	fma.rn.f32 	%f941, %f622, %f941, %f628;
	add.s64 	%rd200, %rd184, 80;
	// begin inline asm
	cvta.to.global.u64 %rd199, %rd200;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd199];
	// end inline asm
	mov.b32 	%f629, %r242;
	mov.b32 	%f630, %r243;
	mov.b32 	%f631, %r245;
	mul.f32 	%f632, %f218, %f629;
	mul.f32 	%f633, %f218, %f630;
	mul.f32 	%f634, %f218, %f631;
	fma.rn.f32 	%f942, %f622, %f942, %f632;
	fma.rn.f32 	%f943, %f622, %f943, %f633;
	fma.rn.f32 	%f944, %f622, %f944, %f634;
	add.s64 	%rd203, %rd184, 96;
	// begin inline asm
	cvta.to.global.u64 %rd202, %rd203;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd202];
	// end inline asm
	mov.b32 	%f635, %r247;
	mov.b32 	%f636, %r248;
	mov.b32 	%f637, %r249;
	mul.f32 	%f638, %f218, %f635;
	mul.f32 	%f639, %f218, %f636;
	mul.f32 	%f640, %f218, %f637;
	fma.rn.f32 	%f641, %f622, %f945, %f638;
	fma.rn.f32 	%f642, %f622, %f946, %f639;
	fma.rn.f32 	%f643, %f622, %f947, %f640;
	add.s64 	%rd206, %rd184, 112;
	// begin inline asm
	cvta.to.global.u64 %rd205, %rd206;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd205];
	// end inline asm
	mov.b32 	%f644, %r250;
	mul.f32 	%f645, %f218, %f644;
	fma.rn.f32 	%f646, %f622, %f948, %f645;
	mul.f32 	%f647, %f642, %f642;
	fma.rn.f32 	%f648, %f641, %f641, %f647;
	fma.rn.f32 	%f649, %f643, %f643, %f648;
	fma.rn.f32 	%f650, %f646, %f646, %f649;
	sqrt.rn.f32 	%f651, %f650;
	rcp.rn.f32 	%f652, %f651;
	mul.f32 	%f945, %f641, %f652;
	mul.f32 	%f946, %f642, %f652;
	mul.f32 	%f947, %f643, %f652;
	mul.f32 	%f948, %f652, %f646;

$L__BB1_33:
	mul.f32 	%f653, %f946, %f946;
	fma.rn.f32 	%f654, %f945, %f945, %f653;
	fma.rn.f32 	%f655, %f947, %f947, %f654;
	fma.rn.f32 	%f656, %f948, %f948, %f655;
	rcp.rn.f32 	%f657, %f656;
	mul.f32 	%f658, %f945, %f657;
	mul.f32 	%f659, %f946, %f657;
	mul.f32 	%f660, %f947, %f657;
	mul.f32 	%f661, %f948, %f657;
	mul.f32 	%f662, %f945, %f658;
	mul.f32 	%f663, %f946, %f659;
	mul.f32 	%f664, %f947, %f660;
	mul.f32 	%f665, %f945, %f659;
	mul.f32 	%f666, %f947, %f661;
	mul.f32 	%f667, %f945, %f660;
	mul.f32 	%f668, %f946, %f661;
	mul.f32 	%f669, %f946, %f660;
	mul.f32 	%f670, %f945, %f661;
	sub.f32 	%f671, %f662, %f663;
	sub.f32 	%f672, %f671, %f664;
	fma.rn.f32 	%f673, %f948, %f661, %f672;
	sub.f32 	%f674, %f665, %f666;
	add.f32 	%f675, %f674, %f674;
	add.f32 	%f676, %f667, %f668;
	add.f32 	%f677, %f676, %f676;
	add.f32 	%f678, %f665, %f666;
	add.f32 	%f679, %f678, %f678;
	sub.f32 	%f680, %f663, %f662;
	sub.f32 	%f681, %f680, %f664;
	fma.rn.f32 	%f682, %f948, %f661, %f681;
	sub.f32 	%f683, %f669, %f670;
	add.f32 	%f684, %f683, %f683;
	sub.f32 	%f685, %f667, %f668;
	add.f32 	%f686, %f685, %f685;
	add.f32 	%f687, %f669, %f670;
	add.f32 	%f688, %f687, %f687;
	neg.f32 	%f689, %f662;
	sub.f32 	%f690, %f689, %f663;
	add.f32 	%f691, %f664, %f690;
	fma.rn.f32 	%f692, %f948, %f661, %f691;
	mul.f32 	%f693, %f941, %f673;
	fma.rn.f32 	%f694, %f943, %f675, %f693;
	fma.rn.f32 	%f957, %f944, %f677, %f694;
	mul.f32 	%f695, %f943, %f682;
	fma.rn.f32 	%f696, %f941, %f679, %f695;
	fma.rn.f32 	%f954, %f944, %f684, %f696;
	mul.f32 	%f697, %f943, %f688;
	fma.rn.f32 	%f698, %f941, %f686, %f697;
	fma.rn.f32 	%f951, %f944, %f692, %f698;
	mul.f32 	%f699, %f940, %f673;
	fma.rn.f32 	%f956, %f942, %f675, %f699;
	mul.f32 	%f700, %f942, %f682;
	fma.rn.f32 	%f953, %f940, %f679, %f700;
	mul.f32 	%f701, %f942, %f688;
	fma.rn.f32 	%f950, %f940, %f686, %f701;
	mul.f32 	%f955, %f939, %f673;
	mul.f32 	%f952, %f939, %f679;
	mul.f32 	%f949, %f939, %f686;

$L__BB1_36:
	mul.f32 	%f733, %f950, %f954;
	mul.f32 	%f734, %f951, %f953;
	sub.f32 	%f735, %f734, %f733;
	mul.f32 	%f736, %f955, %f735;
	mul.f32 	%f737, %f949, %f954;
	mul.f32 	%f738, %f951, %f952;
	sub.f32 	%f739, %f738, %f737;
	mul.f32 	%f740, %f739, %f956;
	sub.f32 	%f741, %f736, %f740;
	mul.f32 	%f742, %f949, %f953;
	mul.f32 	%f743, %f950, %f952;
	sub.f32 	%f744, %f743, %f742;
	fma.rn.f32 	%f745, %f744, %f957, %f741;
	rcp.rn.f32 	%f746, %f745;
	mul.f32 	%f964, %f735, %f746;
	mul.f32 	%f747, %f951, %f956;
	mul.f32 	%f748, %f950, %f957;
	sub.f32 	%f749, %f748, %f747;
	mul.f32 	%f965, %f749, %f746;
	mul.f32 	%f750, %f953, %f957;
	mul.f32 	%f751, %f954, %f956;
	sub.f32 	%f752, %f751, %f750;
	mul.f32 	%f966, %f752, %f746;
	sub.f32 	%f753, %f737, %f738;
	mul.f32 	%f961, %f753, %f746;
	mul.f32 	%f754, %f949, %f957;
	mul.f32 	%f755, %f951, %f955;
	sub.f32 	%f756, %f755, %f754;
	mul.f32 	%f962, %f756, %f746;
	mul.f32 	%f757, %f954, %f955;
	mul.f32 	%f758, %f952, %f957;
	sub.f32 	%f759, %f758, %f757;
	mul.f32 	%f963, %f759, %f746;
	mul.f32 	%f958, %f744, %f746;
	mul.f32 	%f760, %f950, %f955;
	mul.f32 	%f761, %f949, %f956;
	sub.f32 	%f762, %f761, %f760;
	mul.f32 	%f959, %f762, %f746;
	mul.f32 	%f763, %f952, %f956;
	mul.f32 	%f764, %f953, %f955;
	sub.f32 	%f765, %f764, %f763;
	mul.f32 	%f960, %f765, %f746;
	bra.uni 	$L__BB1_37;

$L__BB1_28:
	// begin inline asm
	call (%rd257), _optix_get_instance_inverse_transform_from_handle, (%rd136);
	// end inline asm

$L__BB1_29:
	// begin inline asm
	cvta.to.global.u64 %rd142, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd142];
	// end inline asm
	mov.b32 	%f964, %r167;
	mov.b32 	%f965, %r168;
	mov.b32 	%f966, %r169;
	add.s64 	%rd146, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd145, %rd146;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd145];
	// end inline asm
	mov.b32 	%f961, %r171;
	mov.b32 	%f962, %r172;
	mov.b32 	%f963, %r173;
	add.s64 	%rd149, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd148, %rd149;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd148];
	// end inline asm
	mov.b32 	%f958, %r175;
	mov.b32 	%f959, %r176;
	mov.b32 	%f960, %r177;

$L__BB1_37:
	setp.eq.s32 	%p19, %r319, 0;
	@%p19 bra 	$L__BB1_39;

	mul.f32 	%f766, %f935, %f965;
	fma.rn.f32 	%f767, %f932, %f964, %f766;
	fma.rn.f32 	%f304, %f938, %f966, %f767;
	mul.f32 	%f768, %f934, %f965;
	fma.rn.f32 	%f769, %f931, %f964, %f768;
	fma.rn.f32 	%f305, %f937, %f966, %f769;
	mul.f32 	%f770, %f933, %f965;
	fma.rn.f32 	%f771, %f930, %f964, %f770;
	fma.rn.f32 	%f966, %f936, %f966, %f771;
	mul.f32 	%f772, %f935, %f962;
	fma.rn.f32 	%f773, %f932, %f961, %f772;
	fma.rn.f32 	%f307, %f938, %f963, %f773;
	mul.f32 	%f774, %f934, %f962;
	fma.rn.f32 	%f775, %f931, %f961, %f774;
	fma.rn.f32 	%f308, %f937, %f963, %f775;
	mul.f32 	%f776, %f933, %f962;
	fma.rn.f32 	%f777, %f930, %f961, %f776;
	fma.rn.f32 	%f963, %f936, %f963, %f777;
	mul.f32 	%f778, %f935, %f959;
	fma.rn.f32 	%f779, %f932, %f958, %f778;
	fma.rn.f32 	%f310, %f938, %f960, %f779;
	mul.f32 	%f780, %f934, %f959;
	fma.rn.f32 	%f781, %f931, %f958, %f780;
	fma.rn.f32 	%f311, %f937, %f960, %f781;
	mul.f32 	%f782, %f933, %f959;
	fma.rn.f32 	%f783, %f930, %f958, %f782;
	fma.rn.f32 	%f960, %f936, %f960, %f783;
	mov.f32 	%f958, %f310;
	mov.f32 	%f959, %f311;
	mov.f32 	%f961, %f307;
	mov.f32 	%f962, %f308;
	mov.f32 	%f964, %f304;
	mov.f32 	%f965, %f305;

$L__BB1_39:
	add.s32 	%r319, %r319, 1;
	setp.lt.u32 	%p20, %r319, %r162;
	mov.f32 	%f930, %f966;
	mov.f32 	%f931, %f965;
	mov.f32 	%f932, %f964;
	mov.f32 	%f933, %f963;
	mov.f32 	%f934, %f962;
	mov.f32 	%f935, %f961;
	mov.f32 	%f936, %f960;
	mov.f32 	%f937, %f959;
	mov.f32 	%f938, %f958;
	@%p20 bra 	$L__BB1_24;

$L__BB1_40:
	mul.f32 	%f784, %f986, %f965;
	fma.rn.f32 	%f785, %f985, %f964, %f784;
	mul.f32 	%f786, %f986, %f962;
	fma.rn.f32 	%f787, %f985, %f961, %f786;
	mul.f32 	%f788, %f986, %f959;
	fma.rn.f32 	%f789, %f985, %f958, %f788;
	fma.rn.f32 	%f987, %f597, %f960, %f789;
	fma.rn.f32 	%f986, %f597, %f963, %f787;
	fma.rn.f32 	%f985, %f597, %f966, %f785;
	bra.uni 	$L__BB1_42;

$L__BB1_41:
	mov.f32 	%f987, %f597;

$L__BB1_42:
	// begin inline asm
	call (%f790), _optix_get_ray_tmin, ();
	// end inline asm
	fma.rn.f32 	%f793, %f985, %f790, %f927;
	fma.rn.f32 	%f794, %f986, %f790, %f928;
	fma.rn.f32 	%f795, %f987, %f790, %f929;
	ld.v4.f32 	{%f796, %f797, %f798, %f799}, [%rd1+32];
	mul.f32 	%f804, %f796, %f793;
	fma.rn.f32 	%f805, %f797, %f794, %f804;
	fma.rn.f32 	%f806, %f798, %f795, %f805;
	mov.f32 	%f807, 0f3F800000;
	fma.rn.f32 	%f808, %f799, %f807, %f806;
	ld.v4.f32 	{%f809, %f810, %f811, %f812}, [%rd1+48];
	mul.f32 	%f817, %f809, %f793;
	fma.rn.f32 	%f818, %f810, %f794, %f817;
	fma.rn.f32 	%f819, %f811, %f795, %f818;
	fma.rn.f32 	%f820, %f812, %f807, %f819;
	ld.v4.f32 	{%f821, %f822, %f823, %f824}, [%rd1+64];
	mul.f32 	%f829, %f821, %f793;
	fma.rn.f32 	%f830, %f822, %f794, %f829;
	fma.rn.f32 	%f831, %f823, %f795, %f830;
	fma.rn.f32 	%f832, %f824, %f807, %f831;
	mul.f32 	%f833, %f796, %f985;
	fma.rn.f32 	%f834, %f797, %f986, %f833;
	fma.rn.f32 	%f835, %f798, %f987, %f834;
	mov.f32 	%f836, 0f00000000;
	fma.rn.f32 	%f837, %f799, %f836, %f835;
	mul.f32 	%f838, %f809, %f985;
	fma.rn.f32 	%f839, %f810, %f986, %f838;
	fma.rn.f32 	%f840, %f811, %f987, %f839;
	fma.rn.f32 	%f841, %f812, %f836, %f840;
	mul.f32 	%f842, %f821, %f985;
	fma.rn.f32 	%f843, %f822, %f986, %f842;
	fma.rn.f32 	%f844, %f823, %f987, %f843;
	fma.rn.f32 	%f845, %f824, %f836, %f844;
	neg.f32 	%f846, %f832;
	div.rn.f32 	%f340, %f846, %f845;
	fma.rn.f32 	%f341, %f340, %f837, %f808;
	fma.rn.f32 	%f342, %f340, %f841, %f820;
	mul.f32 	%f847, %f342, %f342;
	fma.rn.f32 	%f848, %f341, %f341, %f847;
	setp.gtu.f32 	%p21, %f848, 0f3F800000;
	@%p21 bra 	$L__BB1_44;

	mov.b32 	%r315, %f341;
	mov.b32 	%r316, %f342;
	mov.u32 	%r314, 254;
	// begin inline asm
	call (%r313), _optix_report_intersection_2, (%f340, %r314, %r315, %r316);
	// end inline asm

$L__BB1_44:
	ret;

}
	// .globl	__intersection__rectangle
.visible .entry __intersection__rectangle()
{
	.reg .pred 	%p<23>;
	.reg .f32 	%f<988>;
	.reg .b32 	%r<320>;
	.reg .b64 	%rd<258>;


	// begin inline asm
	call (%rd16), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd16+8];
	// begin inline asm
	call (%f927), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f928), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f929), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p1, %r9, 0;
	@%p1 bra 	$L__BB2_21;

	// begin inline asm
	call (%r10), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f346), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p2, %r10, 0;
	@%p2 bra 	$L__BB2_19;

	mov.u32 	%r318, 0;

$L__BB2_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd17), _optix_get_transform_list_handle, (%r318);
	// end inline asm
	// begin inline asm
	call (%r13), _optix_get_transform_type_from_handle, (%rd17);
	// end inline asm
	or.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p3, %r14, 3;
	@%p3 bra 	$L__BB2_9;
	bra.uni 	$L__BB2_4;

$L__BB2_9:
	setp.eq.s32 	%p6, %r13, 2;
	@%p6 bra 	$L__BB2_13;
	bra.uni 	$L__BB2_10;

$L__BB2_13:
	// begin inline asm
	call (%rd89), _optix_get_matrix_motion_transform_from_handle, (%rd17);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd91, %rd89;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd91];
	// end inline asm
	add.s64 	%rd95, %rd89, 16;
	// begin inline asm
	cvta.to.global.u64 %rd94, %rd95;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd94];
	// end inline asm
	add.s64 	%rd98, %rd89, 32;
	// begin inline asm
	cvta.to.global.u64 %rd97, %rd98;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd97];
	// end inline asm
	add.s64 	%rd101, %rd89, 48;
	// begin inline asm
	cvta.to.global.u64 %rd100, %rd101;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd100];
	// end inline asm
	add.s64 	%rd104, %rd89, 64;
	// begin inline asm
	cvta.to.global.u64 %rd103, %rd104;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd103];
	// end inline asm
	add.s64 	%rd107, %rd89, 80;
	// begin inline asm
	cvta.to.global.u64 %rd106, %rd107;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd106];
	// end inline asm
	add.s64 	%rd110, %rd89, 96;
	// begin inline asm
	cvta.to.global.u64 %rd109, %rd110;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd109];
	// end inline asm
	add.s64 	%rd113, %rd89, 112;
	// begin inline asm
	cvta.to.global.u64 %rd112, %rd113;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd112];
	// end inline asm
	mov.b32 	%f474, %r105;
	mov.b32 	%f475, %r106;
	and.b32  	%r146, %r104, 65535;
	add.s32 	%r147, %r146, -1;
	cvt.rn.f32.s32 	%f476, %r147;
	sub.f32 	%f477, %f346, %f474;
	mul.f32 	%f478, %f477, %f476;
	sub.f32 	%f479, %f475, %f474;
	div.rn.f32 	%f480, %f478, %f479;
	min.f32 	%f481, %f476, %f480;
	mov.f32 	%f482, 0f00000000;
	max.f32 	%f483, %f482, %f481;
	cvt.rmi.f32.f32 	%f484, %f483;
	sub.f32 	%f90, %f483, %f484;
	cvt.rzi.s32.f32 	%r148, %f484;
	mul.wide.s32 	%rd124, %r148, 48;
	add.s64 	%rd116, %rd98, %rd124;
	// begin inline asm
	cvta.to.global.u64 %rd115, %rd116;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd115];
	// end inline asm
	mov.b32 	%f882, %r134;
	mov.b32 	%f881, %r135;
	mov.b32 	%f880, %r136;
	mov.b32 	%f879, %r137;
	add.s64 	%rd119, %rd116, 16;
	// begin inline asm
	cvta.to.global.u64 %rd118, %rd119;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd118];
	// end inline asm
	mov.b32 	%f886, %r138;
	mov.b32 	%f885, %r139;
	mov.b32 	%f884, %r140;
	mov.b32 	%f883, %r141;
	add.s64 	%rd122, %rd116, 32;
	// begin inline asm
	cvta.to.global.u64 %rd121, %rd122;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd121];
	// end inline asm
	mov.b32 	%f890, %r142;
	mov.b32 	%f889, %r143;
	mov.b32 	%f888, %r144;
	mov.b32 	%f887, %r145;
	setp.leu.f32 	%p8, %f90, 0f00000000;
	@%p8 bra 	$L__BB2_15;

	cvt.rmi.f32.f32 	%f850, %f483;
	cvt.rzi.s32.f32 	%r317, %f850;
	cvt.s64.s32 	%rd255, %r317;
	mov.f32 	%f485, 0f3F800000;
	sub.f32 	%f486, %f485, %f90;
	mul.lo.s64 	%rd134, %rd255, 48;
	add.s64 	%rd135, %rd89, %rd134;
	add.s64 	%rd126, %rd135, 80;
	// begin inline asm
	cvta.to.global.u64 %rd125, %rd126;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r149,%r150,%r151,%r152}, [%rd125];
	// end inline asm
	mov.b32 	%f487, %r149;
	mov.b32 	%f488, %r150;
	mov.b32 	%f489, %r151;
	mov.b32 	%f490, %r152;
	mul.f32 	%f491, %f90, %f487;
	mul.f32 	%f492, %f90, %f488;
	mul.f32 	%f493, %f90, %f489;
	mul.f32 	%f494, %f90, %f490;
	fma.rn.f32 	%f882, %f486, %f882, %f491;
	fma.rn.f32 	%f881, %f486, %f881, %f492;
	fma.rn.f32 	%f880, %f486, %f880, %f493;
	fma.rn.f32 	%f879, %f486, %f879, %f494;
	add.s64 	%rd129, %rd135, 96;
	// begin inline asm
	cvta.to.global.u64 %rd128, %rd129;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r153,%r154,%r155,%r156}, [%rd128];
	// end inline asm
	mov.b32 	%f495, %r153;
	mov.b32 	%f496, %r154;
	mov.b32 	%f497, %r155;
	mov.b32 	%f498, %r156;
	mul.f32 	%f499, %f90, %f495;
	mul.f32 	%f500, %f90, %f496;
	mul.f32 	%f501, %f90, %f497;
	mul.f32 	%f502, %f90, %f498;
	fma.rn.f32 	%f886, %f486, %f886, %f499;
	fma.rn.f32 	%f885, %f486, %f885, %f500;
	fma.rn.f32 	%f884, %f486, %f884, %f501;
	fma.rn.f32 	%f883, %f486, %f883, %f502;
	add.s64 	%rd132, %rd135, 112;
	// begin inline asm
	cvta.to.global.u64 %rd131, %rd132;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r157,%r158,%r159,%r160}, [%rd131];
	// end inline asm
	mov.b32 	%f503, %r157;
	mov.b32 	%f504, %r158;
	mov.b32 	%f505, %r159;
	mov.b32 	%f506, %r160;
	mul.f32 	%f507, %f90, %f503;
	mul.f32 	%f508, %f90, %f504;
	mul.f32 	%f509, %f90, %f505;
	mul.f32 	%f510, %f90, %f506;
	fma.rn.f32 	%f890, %f486, %f890, %f507;
	fma.rn.f32 	%f889, %f486, %f889, %f508;
	fma.rn.f32 	%f888, %f486, %f888, %f509;
	fma.rn.f32 	%f887, %f486, %f887, %f510;
	bra.uni 	$L__BB2_15;

$L__BB2_4:
	mov.f32 	%f891, 0f00000000;
	mov.f32 	%f894, 0f3F800000;
	setp.eq.s32 	%p4, %r13, 4;
	@%p4 bra 	$L__BB2_7;

	setp.ne.s32 	%p5, %r13, 1;
	mov.f32 	%f892, %f891;
	mov.f32 	%f893, %f891;
	mov.f32 	%f895, %f891;
	mov.f32 	%f896, %f891;
	mov.f32 	%f897, %f894;
	mov.f32 	%f898, %f891;
	mov.f32 	%f899, %f891;
	mov.f32 	%f900, %f894;
	mov.f32 	%f901, %f891;
	mov.f32 	%f902, %f891;
	@%p5 bra 	$L__BB2_16;

	// begin inline asm
	call (%rd19), _optix_get_static_transform_from_handle, (%rd17);
	// end inline asm
	add.s64 	%rd256, %rd19, 64;
	bra.uni 	$L__BB2_8;

$L__BB2_10:
	// begin inline asm
	call (%rd32), _optix_get_srt_motion_transform_from_handle, (%rd17);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd34, %rd32;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r27,%r28,%r29,%r30}, [%rd34];
	// end inline asm
	add.s64 	%rd38, %rd32, 16;
	// begin inline asm
	cvta.to.global.u64 %rd37, %rd38;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r31,%r32,%r33,%r34}, [%rd37];
	// end inline asm
	add.s64 	%rd41, %rd32, 32;
	// begin inline asm
	cvta.to.global.u64 %rd40, %rd41;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r35,%r36,%r37,%r38}, [%rd40];
	// end inline asm
	add.s64 	%rd44, %rd32, 48;
	// begin inline asm
	cvta.to.global.u64 %rd43, %rd44;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r39,%r40,%r41,%r42}, [%rd43];
	// end inline asm
	add.s64 	%rd47, %rd32, 64;
	// begin inline asm
	cvta.to.global.u64 %rd46, %rd47;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r43,%r44,%r45,%r46}, [%rd46];
	// end inline asm
	add.s64 	%rd50, %rd32, 80;
	// begin inline asm
	cvta.to.global.u64 %rd49, %rd50;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd49];
	// end inline asm
	add.s64 	%rd53, %rd32, 96;
	// begin inline asm
	cvta.to.global.u64 %rd52, %rd53;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd52];
	// end inline asm
	add.s64 	%rd56, %rd32, 112;
	// begin inline asm
	cvta.to.global.u64 %rd55, %rd56;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd55];
	// end inline asm
	add.s64 	%rd59, %rd32, 128;
	// begin inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd58];
	// end inline asm
	add.s64 	%rd62, %rd32, 144;
	// begin inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd61];
	// end inline asm
	mov.b32 	%f361, %r30;
	mov.b32 	%f362, %r31;
	and.b32  	%r83, %r29, 65535;
	add.s32 	%r84, %r83, -1;
	cvt.rn.f32.s32 	%f363, %r84;
	sub.f32 	%f364, %f346, %f361;
	mul.f32 	%f365, %f364, %f363;
	sub.f32 	%f366, %f362, %f361;
	div.rn.f32 	%f367, %f365, %f366;
	min.f32 	%f368, %f363, %f367;
	mov.f32 	%f369, 0f00000000;
	max.f32 	%f370, %f369, %f368;
	cvt.rmi.f32.f32 	%f371, %f370;
	sub.f32 	%f29, %f370, %f371;
	cvt.rzi.s32.f32 	%r85, %f371;
	mul.wide.s32 	%rd76, %r85, 64;
	add.s64 	%rd65, %rd41, %rd76;
	// begin inline asm
	cvta.to.global.u64 %rd64, %rd65;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd64];
	// end inline asm
	mov.b32 	%f863, %r67;
	mov.b32 	%f864, %r68;
	mov.b32 	%f865, %r69;
	mov.b32 	%f866, %r70;
	add.s64 	%rd68, %rd65, 16;
	// begin inline asm
	cvta.to.global.u64 %rd67, %rd68;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd67];
	// end inline asm
	mov.b32 	%f867, %r71;
	mov.b32 	%f868, %r72;
	mov.b32 	%f869, %r73;
	mov.b32 	%f870, %r74;
	add.s64 	%rd71, %rd65, 32;
	// begin inline asm
	cvta.to.global.u64 %rd70, %rd71;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd70];
	// end inline asm
	mov.b32 	%f871, %r75;
	mov.b32 	%f872, %r76;
	mov.b32 	%f873, %r77;
	mov.b32 	%f874, %r78;
	add.s64 	%rd74, %rd65, 48;
	// begin inline asm
	cvta.to.global.u64 %rd73, %rd74;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd73];
	// end inline asm
	mov.b32 	%f875, %r79;
	mov.b32 	%f876, %r80;
	mov.b32 	%f877, %r81;
	mov.b32 	%f878, %r82;
	setp.leu.f32 	%p7, %f29, 0f00000000;
	@%p7 bra 	$L__BB2_12;

	mov.f32 	%f372, 0f3F800000;
	sub.f32 	%f373, %f372, %f29;
	add.s64 	%rd78, %rd65, 64;
	// begin inline asm
	cvta.to.global.u64 %rd77, %rd78;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r86,%r87,%r88,%r89}, [%rd77];
	// end inline asm
	mov.b32 	%f374, %r86;
	mov.b32 	%f375, %r87;
	mov.b32 	%f376, %r88;
	mov.b32 	%f377, %r89;
	mul.f32 	%f378, %f29, %f374;
	mul.f32 	%f379, %f29, %f375;
	mul.f32 	%f380, %f29, %f376;
	mul.f32 	%f381, %f29, %f377;
	fma.rn.f32 	%f863, %f373, %f863, %f378;
	fma.rn.f32 	%f864, %f373, %f864, %f379;
	fma.rn.f32 	%f865, %f373, %f865, %f380;
	fma.rn.f32 	%f866, %f373, %f866, %f381;
	add.s64 	%rd81, %rd65, 80;
	// begin inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd80];
	// end inline asm
	mov.b32 	%f382, %r90;
	mov.b32 	%f383, %r91;
	mov.b32 	%f384, %r92;
	mov.b32 	%f385, %r93;
	mul.f32 	%f386, %f29, %f382;
	mul.f32 	%f387, %f29, %f383;
	mul.f32 	%f388, %f29, %f384;
	mul.f32 	%f389, %f29, %f385;
	fma.rn.f32 	%f867, %f373, %f867, %f386;
	fma.rn.f32 	%f868, %f373, %f868, %f387;
	fma.rn.f32 	%f869, %f373, %f869, %f388;
	fma.rn.f32 	%f870, %f373, %f870, %f389;
	add.s64 	%rd84, %rd65, 96;
	// begin inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd83];
	// end inline asm
	mov.b32 	%f390, %r94;
	mov.b32 	%f391, %r95;
	mov.b32 	%f392, %r96;
	mov.b32 	%f393, %r97;
	mul.f32 	%f394, %f29, %f390;
	mul.f32 	%f395, %f29, %f391;
	mul.f32 	%f396, %f29, %f392;
	mul.f32 	%f397, %f29, %f393;
	fma.rn.f32 	%f871, %f373, %f871, %f394;
	fma.rn.f32 	%f398, %f373, %f872, %f395;
	fma.rn.f32 	%f399, %f373, %f873, %f396;
	fma.rn.f32 	%f400, %f373, %f874, %f397;
	add.s64 	%rd87, %rd65, 112;
	// begin inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd86];
	// end inline asm
	mov.b32 	%f401, %r98;
	mov.b32 	%f402, %r99;
	mov.b32 	%f403, %r100;
	mov.b32 	%f404, %r101;
	mul.f32 	%f405, %f29, %f401;
	mul.f32 	%f406, %f29, %f402;
	mul.f32 	%f407, %f29, %f403;
	mul.f32 	%f408, %f29, %f404;
	fma.rn.f32 	%f409, %f373, %f875, %f405;
	fma.rn.f32 	%f876, %f373, %f876, %f406;
	fma.rn.f32 	%f877, %f373, %f877, %f407;
	fma.rn.f32 	%f878, %f373, %f878, %f408;
	mul.f32 	%f410, %f399, %f399;
	fma.rn.f32 	%f411, %f398, %f398, %f410;
	fma.rn.f32 	%f412, %f400, %f400, %f411;
	fma.rn.f32 	%f413, %f409, %f409, %f412;
	sqrt.rn.f32 	%f414, %f413;
	rcp.rn.f32 	%f415, %f414;
	mul.f32 	%f872, %f398, %f415;
	mul.f32 	%f873, %f399, %f415;
	mul.f32 	%f874, %f400, %f415;
	mul.f32 	%f875, %f415, %f409;

$L__BB2_12:
	mul.f32 	%f416, %f873, %f873;
	fma.rn.f32 	%f417, %f872, %f872, %f416;
	fma.rn.f32 	%f418, %f874, %f874, %f417;
	fma.rn.f32 	%f419, %f875, %f875, %f418;
	rcp.rn.f32 	%f420, %f419;
	mul.f32 	%f421, %f872, %f420;
	mul.f32 	%f422, %f873, %f420;
	mul.f32 	%f423, %f874, %f420;
	mul.f32 	%f424, %f875, %f420;
	mul.f32 	%f425, %f872, %f421;
	mul.f32 	%f426, %f873, %f422;
	mul.f32 	%f427, %f874, %f423;
	mul.f32 	%f428, %f872, %f422;
	mul.f32 	%f429, %f874, %f424;
	mul.f32 	%f430, %f872, %f423;
	mul.f32 	%f431, %f873, %f424;
	mul.f32 	%f432, %f873, %f423;
	mul.f32 	%f433, %f872, %f424;
	sub.f32 	%f434, %f425, %f426;
	sub.f32 	%f435, %f434, %f427;
	fma.rn.f32 	%f436, %f875, %f424, %f435;
	sub.f32 	%f437, %f428, %f429;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f439, %f430, %f431;
	add.f32 	%f440, %f439, %f439;
	add.f32 	%f441, %f428, %f429;
	add.f32 	%f442, %f441, %f441;
	sub.f32 	%f443, %f426, %f425;
	sub.f32 	%f444, %f443, %f427;
	fma.rn.f32 	%f445, %f875, %f424, %f444;
	sub.f32 	%f446, %f432, %f433;
	add.f32 	%f447, %f446, %f446;
	sub.f32 	%f448, %f430, %f431;
	add.f32 	%f449, %f448, %f448;
	add.f32 	%f450, %f432, %f433;
	add.f32 	%f451, %f450, %f450;
	neg.f32 	%f452, %f425;
	sub.f32 	%f453, %f452, %f426;
	add.f32 	%f454, %f427, %f453;
	fma.rn.f32 	%f455, %f875, %f424, %f454;
	mul.f32 	%f456, %f866, %f436;
	fma.rn.f32 	%f457, %f869, %f438, %f456;
	fma.rn.f32 	%f458, %f871, %f440, %f457;
	add.f32 	%f879, %f876, %f458;
	mul.f32 	%f459, %f869, %f445;
	fma.rn.f32 	%f460, %f866, %f442, %f459;
	fma.rn.f32 	%f461, %f871, %f447, %f460;
	add.f32 	%f883, %f877, %f461;
	mul.f32 	%f462, %f869, %f451;
	fma.rn.f32 	%f463, %f866, %f449, %f462;
	fma.rn.f32 	%f464, %f871, %f455, %f463;
	add.f32 	%f887, %f878, %f464;
	mul.f32 	%f465, %f865, %f436;
	fma.rn.f32 	%f466, %f868, %f438, %f465;
	fma.rn.f32 	%f880, %f870, %f440, %f466;
	mul.f32 	%f467, %f868, %f445;
	fma.rn.f32 	%f468, %f865, %f442, %f467;
	fma.rn.f32 	%f884, %f870, %f447, %f468;
	mul.f32 	%f469, %f868, %f451;
	fma.rn.f32 	%f470, %f865, %f449, %f469;
	fma.rn.f32 	%f888, %f870, %f455, %f470;
	mul.f32 	%f471, %f864, %f436;
	fma.rn.f32 	%f881, %f867, %f438, %f471;
	mul.f32 	%f472, %f867, %f445;
	fma.rn.f32 	%f885, %f864, %f442, %f472;
	mul.f32 	%f473, %f867, %f451;
	fma.rn.f32 	%f889, %f864, %f449, %f473;
	mul.f32 	%f882, %f863, %f436;
	mul.f32 	%f886, %f863, %f442;
	mul.f32 	%f890, %f863, %f449;

$L__BB2_15:
	mul.f32 	%f511, %f884, %f889;
	mul.f32 	%f512, %f885, %f888;
	sub.f32 	%f513, %f512, %f511;
	mul.f32 	%f514, %f882, %f513;
	mul.f32 	%f515, %f884, %f890;
	mul.f32 	%f516, %f886, %f888;
	sub.f32 	%f517, %f516, %f515;
	mul.f32 	%f518, %f881, %f517;
	sub.f32 	%f519, %f514, %f518;
	mul.f32 	%f520, %f885, %f890;
	mul.f32 	%f521, %f886, %f889;
	sub.f32 	%f522, %f521, %f520;
	fma.rn.f32 	%f523, %f880, %f522, %f519;
	rcp.rn.f32 	%f524, %f523;
	mul.f32 	%f894, %f513, %f524;
	mul.f32 	%f525, %f881, %f888;
	mul.f32 	%f526, %f880, %f889;
	sub.f32 	%f527, %f526, %f525;
	mul.f32 	%f893, %f527, %f524;
	mul.f32 	%f528, %f880, %f885;
	mul.f32 	%f529, %f881, %f884;
	sub.f32 	%f530, %f529, %f528;
	mul.f32 	%f892, %f530, %f524;
	sub.f32 	%f531, %f515, %f516;
	mul.f32 	%f898, %f531, %f524;
	mul.f32 	%f532, %f880, %f890;
	mul.f32 	%f533, %f882, %f888;
	sub.f32 	%f534, %f533, %f532;
	mul.f32 	%f897, %f534, %f524;
	mul.f32 	%f535, %f882, %f884;
	mul.f32 	%f536, %f880, %f886;
	sub.f32 	%f537, %f536, %f535;
	mul.f32 	%f896, %f537, %f524;
	mul.f32 	%f902, %f522, %f524;
	mul.f32 	%f538, %f882, %f889;
	mul.f32 	%f539, %f881, %f890;
	sub.f32 	%f540, %f539, %f538;
	mul.f32 	%f901, %f540, %f524;
	mul.f32 	%f541, %f881, %f886;
	mul.f32 	%f542, %f882, %f885;
	sub.f32 	%f543, %f542, %f541;
	mul.f32 	%f900, %f543, %f524;
	mul.f32 	%f544, %f879, %f894;
	neg.f32 	%f545, %f544;
	mul.f32 	%f546, %f883, %f893;
	sub.f32 	%f547, %f545, %f546;
	mul.f32 	%f548, %f887, %f892;
	sub.f32 	%f891, %f547, %f548;
	mul.f32 	%f549, %f879, %f898;
	neg.f32 	%f550, %f549;
	mul.f32 	%f551, %f883, %f897;
	sub.f32 	%f552, %f550, %f551;
	mul.f32 	%f553, %f887, %f896;
	sub.f32 	%f895, %f552, %f553;
	mul.f32 	%f554, %f879, %f902;
	neg.f32 	%f555, %f554;
	mul.f32 	%f556, %f883, %f901;
	sub.f32 	%f557, %f555, %f556;
	mul.f32 	%f558, %f887, %f900;
	sub.f32 	%f899, %f557, %f558;
	bra.uni 	$L__BB2_16;

$L__BB2_7:
	// begin inline asm
	call (%rd256), _optix_get_instance_inverse_transform_from_handle, (%rd17);
	// end inline asm

$L__BB2_8:
	// begin inline asm
	cvta.to.global.u64 %rd23, %rd256;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r15,%r16,%r17,%r18}, [%rd23];
	// end inline asm
	mov.b32 	%f894, %r15;
	mov.b32 	%f893, %r16;
	mov.b32 	%f892, %r17;
	mov.b32 	%f891, %r18;
	add.s64 	%rd27, %rd256, 16;
	// begin inline asm
	cvta.to.global.u64 %rd26, %rd27;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r19,%r20,%r21,%r22}, [%rd26];
	// end inline asm
	mov.b32 	%f898, %r19;
	mov.b32 	%f897, %r20;
	mov.b32 	%f896, %r21;
	mov.b32 	%f895, %r22;
	add.s64 	%rd30, %rd256, 32;
	// begin inline asm
	cvta.to.global.u64 %rd29, %rd30;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r23,%r24,%r25,%r26}, [%rd29];
	// end inline asm
	mov.b32 	%f902, %r23;
	mov.b32 	%f901, %r24;
	mov.b32 	%f900, %r25;
	mov.b32 	%f899, %r26;

$L__BB2_16:
	setp.eq.s32 	%p9, %r318, 0;
	@%p9 bra 	$L__BB2_18;

	mul.f32 	%f559, %f859, %f894;
	fma.rn.f32 	%f560, %f855, %f893, %f559;
	fma.rn.f32 	%f151, %f851, %f892, %f560;
	mul.f32 	%f561, %f860, %f894;
	fma.rn.f32 	%f562, %f856, %f893, %f561;
	fma.rn.f32 	%f152, %f852, %f892, %f562;
	mul.f32 	%f563, %f861, %f894;
	fma.rn.f32 	%f564, %f857, %f893, %f563;
	fma.rn.f32 	%f153, %f853, %f892, %f564;
	mul.f32 	%f565, %f862, %f894;
	fma.rn.f32 	%f566, %f858, %f893, %f565;
	fma.rn.f32 	%f567, %f854, %f892, %f566;
	add.f32 	%f891, %f891, %f567;
	mul.f32 	%f568, %f859, %f898;
	fma.rn.f32 	%f569, %f855, %f897, %f568;
	fma.rn.f32 	%f155, %f851, %f896, %f569;
	mul.f32 	%f570, %f860, %f898;
	fma.rn.f32 	%f571, %f856, %f897, %f570;
	fma.rn.f32 	%f156, %f852, %f896, %f571;
	mul.f32 	%f572, %f861, %f898;
	fma.rn.f32 	%f573, %f857, %f897, %f572;
	fma.rn.f32 	%f157, %f853, %f896, %f573;
	mul.f32 	%f574, %f862, %f898;
	fma.rn.f32 	%f575, %f858, %f897, %f574;
	fma.rn.f32 	%f576, %f854, %f896, %f575;
	add.f32 	%f895, %f895, %f576;
	mul.f32 	%f577, %f859, %f902;
	fma.rn.f32 	%f578, %f855, %f901, %f577;
	fma.rn.f32 	%f159, %f851, %f900, %f578;
	mul.f32 	%f579, %f860, %f902;
	fma.rn.f32 	%f580, %f856, %f901, %f579;
	fma.rn.f32 	%f160, %f852, %f900, %f580;
	mul.f32 	%f581, %f861, %f902;
	fma.rn.f32 	%f582, %f857, %f901, %f581;
	fma.rn.f32 	%f161, %f853, %f900, %f582;
	mul.f32 	%f583, %f862, %f902;
	fma.rn.f32 	%f584, %f858, %f901, %f583;
	fma.rn.f32 	%f585, %f854, %f900, %f584;
	add.f32 	%f899, %f899, %f585;
	mov.f32 	%f892, %f153;
	mov.f32 	%f893, %f152;
	mov.f32 	%f894, %f151;
	mov.f32 	%f896, %f157;
	mov.f32 	%f897, %f156;
	mov.f32 	%f898, %f155;
	mov.f32 	%f900, %f161;
	mov.f32 	%f901, %f160;
	mov.f32 	%f902, %f159;

$L__BB2_18:
	add.s32 	%r318, %r318, 1;
	setp.lt.u32 	%p10, %r318, %r10;
	mov.f32 	%f851, %f902;
	mov.f32 	%f852, %f901;
	mov.f32 	%f853, %f900;
	mov.f32 	%f854, %f899;
	mov.f32 	%f855, %f898;
	mov.f32 	%f856, %f897;
	mov.f32 	%f857, %f896;
	mov.f32 	%f858, %f895;
	mov.f32 	%f859, %f894;
	mov.f32 	%f860, %f893;
	mov.f32 	%f861, %f892;
	mov.f32 	%f862, %f891;
	@%p10 bra 	$L__BB2_3;

$L__BB2_19:
	mul.f32 	%f586, %f927, %f894;
	fma.rn.f32 	%f587, %f928, %f893, %f586;
	fma.rn.f32 	%f588, %f929, %f892, %f587;
	mul.f32 	%f589, %f927, %f898;
	fma.rn.f32 	%f590, %f928, %f897, %f589;
	fma.rn.f32 	%f591, %f929, %f896, %f590;
	mul.f32 	%f592, %f927, %f902;
	fma.rn.f32 	%f593, %f928, %f901, %f592;
	fma.rn.f32 	%f594, %f929, %f900, %f593;
	add.f32 	%f929, %f899, %f594;
	add.f32 	%f928, %f895, %f591;
	add.f32 	%f927, %f891, %f588;

$L__BB2_21:
	// begin inline asm
	call (%f985), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f986), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f597), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r161), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p11, %r161, 0;
	@%p11 bra 	$L__BB2_41;

	// begin inline asm
	call (%r162), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f598), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p12, %r162, 0;
	@%p12 bra 	$L__BB2_40;

	mov.u32 	%r319, 0;

$L__BB2_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd136), _optix_get_transform_list_handle, (%r319);
	// end inline asm
	// begin inline asm
	call (%r165), _optix_get_transform_type_from_handle, (%rd136);
	// end inline asm
	or.b32  	%r166, %r165, 1;
	setp.eq.s32 	%p13, %r166, 3;
	@%p13 bra 	$L__BB2_30;
	bra.uni 	$L__BB2_25;

$L__BB2_30:
	setp.eq.s32 	%p16, %r165, 2;
	@%p16 bra 	$L__BB2_34;
	bra.uni 	$L__BB2_31;

$L__BB2_34:
	// begin inline asm
	call (%rd208), _optix_get_matrix_motion_transform_from_handle, (%rd136);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd210, %rd208;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd210];
	// end inline asm
	add.s64 	%rd214, %rd208, 16;
	// begin inline asm
	cvta.to.global.u64 %rd213, %rd214;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd213];
	// end inline asm
	add.s64 	%rd217, %rd208, 32;
	// begin inline asm
	cvta.to.global.u64 %rd216, %rd217;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd216];
	// end inline asm
	add.s64 	%rd220, %rd208, 48;
	// begin inline asm
	cvta.to.global.u64 %rd219, %rd220;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd219];
	// end inline asm
	add.s64 	%rd223, %rd208, 64;
	// begin inline asm
	cvta.to.global.u64 %rd222, %rd223;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd222];
	// end inline asm
	add.s64 	%rd226, %rd208, 80;
	// begin inline asm
	cvta.to.global.u64 %rd225, %rd226;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd225];
	// end inline asm
	add.s64 	%rd229, %rd208, 96;
	// begin inline asm
	cvta.to.global.u64 %rd228, %rd229;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd228];
	// end inline asm
	add.s64 	%rd232, %rd208, 112;
	// begin inline asm
	cvta.to.global.u64 %rd231, %rd232;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd231];
	// end inline asm
	mov.b32 	%f702, %r257;
	mov.b32 	%f703, %r258;
	and.b32  	%r298, %r256, 65535;
	add.s32 	%r299, %r298, -1;
	cvt.rn.f32.s32 	%f704, %r299;
	sub.f32 	%f705, %f598, %f702;
	mul.f32 	%f706, %f705, %f704;
	sub.f32 	%f707, %f703, %f702;
	div.rn.f32 	%f708, %f706, %f707;
	min.f32 	%f709, %f704, %f708;
	mov.f32 	%f710, 0f00000000;
	max.f32 	%f711, %f710, %f709;
	cvt.rmi.f32.f32 	%f712, %f711;
	sub.f32 	%f258, %f711, %f712;
	cvt.rzi.s32.f32 	%r300, %f712;
	cvt.s64.s32 	%rd15, %r300;
	mul.wide.s32 	%rd243, %r300, 48;
	add.s64 	%rd235, %rd217, %rd243;
	// begin inline asm
	cvta.to.global.u64 %rd234, %rd235;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd234];
	// end inline asm
	mov.b32 	%f955, %r286;
	mov.b32 	%f956, %r287;
	mov.b32 	%f957, %r288;
	add.s64 	%rd238, %rd235, 16;
	// begin inline asm
	cvta.to.global.u64 %rd237, %rd238;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd237];
	// end inline asm
	mov.b32 	%f952, %r290;
	mov.b32 	%f953, %r291;
	mov.b32 	%f954, %r292;
	add.s64 	%rd241, %rd235, 32;
	// begin inline asm
	cvta.to.global.u64 %rd240, %rd241;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd240];
	// end inline asm
	mov.b32 	%f949, %r294;
	mov.b32 	%f950, %r295;
	mov.b32 	%f951, %r296;
	setp.leu.f32 	%p18, %f258, 0f00000000;
	@%p18 bra 	$L__BB2_36;

	mov.f32 	%f713, 0f3F800000;
	sub.f32 	%f714, %f713, %f258;
	mul.lo.s64 	%rd253, %rd15, 48;
	add.s64 	%rd254, %rd208, %rd253;
	add.s64 	%rd245, %rd254, 80;
	// begin inline asm
	cvta.to.global.u64 %rd244, %rd245;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd244];
	// end inline asm
	mov.b32 	%f715, %r301;
	mov.b32 	%f716, %r302;
	mov.b32 	%f717, %r303;
	mul.f32 	%f718, %f258, %f715;
	mul.f32 	%f719, %f258, %f716;
	mul.f32 	%f720, %f258, %f717;
	fma.rn.f32 	%f955, %f714, %f955, %f718;
	fma.rn.f32 	%f956, %f714, %f956, %f719;
	fma.rn.f32 	%f957, %f714, %f957, %f720;
	add.s64 	%rd248, %rd254, 96;
	// begin inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd247];
	// end inline asm
	mov.b32 	%f721, %r305;
	mov.b32 	%f722, %r306;
	mov.b32 	%f723, %r307;
	mul.f32 	%f724, %f258, %f721;
	mul.f32 	%f725, %f258, %f722;
	mul.f32 	%f726, %f258, %f723;
	fma.rn.f32 	%f952, %f714, %f952, %f724;
	fma.rn.f32 	%f953, %f714, %f953, %f725;
	fma.rn.f32 	%f954, %f714, %f954, %f726;
	add.s64 	%rd251, %rd254, 112;
	// begin inline asm
	cvta.to.global.u64 %rd250, %rd251;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd250];
	// end inline asm
	mov.b32 	%f727, %r309;
	mov.b32 	%f728, %r310;
	mov.b32 	%f729, %r311;
	mul.f32 	%f730, %f258, %f727;
	mul.f32 	%f731, %f258, %f728;
	mul.f32 	%f732, %f258, %f729;
	fma.rn.f32 	%f949, %f714, %f949, %f730;
	fma.rn.f32 	%f950, %f714, %f950, %f731;
	fma.rn.f32 	%f951, %f714, %f951, %f732;
	bra.uni 	$L__BB2_36;

$L__BB2_25:
	mov.f32 	%f958, 0f00000000;
	mov.f32 	%f960, 0f3F800000;
	setp.eq.s32 	%p14, %r165, 4;
	@%p14 bra 	$L__BB2_28;

	setp.ne.s32 	%p15, %r165, 1;
	mov.f32 	%f959, %f958;
	mov.f32 	%f961, %f958;
	mov.f32 	%f962, %f960;
	mov.f32 	%f963, %f958;
	mov.f32 	%f964, %f960;
	mov.f32 	%f965, %f958;
	mov.f32 	%f966, %f958;
	@%p15 bra 	$L__BB2_37;

	// begin inline asm
	call (%rd138), _optix_get_static_transform_from_handle, (%rd136);
	// end inline asm
	add.s64 	%rd257, %rd138, 64;
	bra.uni 	$L__BB2_29;

$L__BB2_31:
	// begin inline asm
	call (%rd151), _optix_get_srt_motion_transform_from_handle, (%rd136);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd153, %rd151;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd153];
	// end inline asm
	add.s64 	%rd157, %rd151, 16;
	// begin inline asm
	cvta.to.global.u64 %rd156, %rd157;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd156];
	// end inline asm
	add.s64 	%rd160, %rd151, 32;
	// begin inline asm
	cvta.to.global.u64 %rd159, %rd160;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd159];
	// end inline asm
	add.s64 	%rd163, %rd151, 48;
	// begin inline asm
	cvta.to.global.u64 %rd162, %rd163;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd162];
	// end inline asm
	add.s64 	%rd166, %rd151, 64;
	// begin inline asm
	cvta.to.global.u64 %rd165, %rd166;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd165];
	// end inline asm
	add.s64 	%rd169, %rd151, 80;
	// begin inline asm
	cvta.to.global.u64 %rd168, %rd169;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd168];
	// end inline asm
	add.s64 	%rd172, %rd151, 96;
	// begin inline asm
	cvta.to.global.u64 %rd171, %rd172;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd171];
	// end inline asm
	add.s64 	%rd175, %rd151, 112;
	// begin inline asm
	cvta.to.global.u64 %rd174, %rd175;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd174];
	// end inline asm
	add.s64 	%rd178, %rd151, 128;
	// begin inline asm
	cvta.to.global.u64 %rd177, %rd178;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd177];
	// end inline asm
	add.s64 	%rd181, %rd151, 144;
	// begin inline asm
	cvta.to.global.u64 %rd180, %rd181;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd180];
	// end inline asm
	mov.b32 	%f610, %r182;
	mov.b32 	%f611, %r183;
	and.b32  	%r235, %r181, 65535;
	add.s32 	%r236, %r235, -1;
	cvt.rn.f32.s32 	%f612, %r236;
	sub.f32 	%f613, %f598, %f610;
	mul.f32 	%f614, %f613, %f612;
	sub.f32 	%f615, %f611, %f610;
	div.rn.f32 	%f616, %f614, %f615;
	min.f32 	%f617, %f612, %f616;
	mov.f32 	%f618, 0f00000000;
	max.f32 	%f619, %f618, %f617;
	cvt.rmi.f32.f32 	%f620, %f619;
	sub.f32 	%f218, %f619, %f620;
	cvt.rzi.s32.f32 	%r237, %f620;
	mul.wide.s32 	%rd195, %r237, 64;
	add.s64 	%rd184, %rd160, %rd195;
	// begin inline asm
	cvta.to.global.u64 %rd183, %rd184;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd183];
	// end inline asm
	mov.b32 	%f939, %r219;
	mov.b32 	%f940, %r220;
	mov.b32 	%f941, %r221;
	add.s64 	%rd187, %rd184, 16;
	// begin inline asm
	cvta.to.global.u64 %rd186, %rd187;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd186];
	// end inline asm
	mov.b32 	%f942, %r223;
	mov.b32 	%f943, %r224;
	mov.b32 	%f944, %r226;
	add.s64 	%rd190, %rd184, 32;
	// begin inline asm
	cvta.to.global.u64 %rd189, %rd190;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd189];
	// end inline asm
	mov.b32 	%f945, %r228;
	mov.b32 	%f946, %r229;
	mov.b32 	%f947, %r230;
	add.s64 	%rd193, %rd184, 48;
	// begin inline asm
	cvta.to.global.u64 %rd192, %rd193;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd192];
	// end inline asm
	mov.b32 	%f948, %r231;
	setp.leu.f32 	%p17, %f218, 0f00000000;
	@%p17 bra 	$L__BB2_33;

	mov.f32 	%f621, 0f3F800000;
	sub.f32 	%f622, %f621, %f218;
	add.s64 	%rd197, %rd184, 64;
	// begin inline asm
	cvta.to.global.u64 %rd196, %rd197;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd196];
	// end inline asm
	mov.b32 	%f623, %r238;
	mov.b32 	%f624, %r239;
	mov.b32 	%f625, %r240;
	mul.f32 	%f626, %f218, %f623;
	mul.f32 	%f627, %f218, %f624;
	mul.f32 	%f628, %f218, %f625;
	fma.rn.f32 	%f939, %f622, %f939, %f626;
	fma.rn.f32 	%f940, %f622, %f940, %f627;
	fma.rn.f32 	%f941, %f622, %f941, %f628;
	add.s64 	%rd200, %rd184, 80;
	// begin inline asm
	cvta.to.global.u64 %rd199, %rd200;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd199];
	// end inline asm
	mov.b32 	%f629, %r242;
	mov.b32 	%f630, %r243;
	mov.b32 	%f631, %r245;
	mul.f32 	%f632, %f218, %f629;
	mul.f32 	%f633, %f218, %f630;
	mul.f32 	%f634, %f218, %f631;
	fma.rn.f32 	%f942, %f622, %f942, %f632;
	fma.rn.f32 	%f943, %f622, %f943, %f633;
	fma.rn.f32 	%f944, %f622, %f944, %f634;
	add.s64 	%rd203, %rd184, 96;
	// begin inline asm
	cvta.to.global.u64 %rd202, %rd203;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd202];
	// end inline asm
	mov.b32 	%f635, %r247;
	mov.b32 	%f636, %r248;
	mov.b32 	%f637, %r249;
	mul.f32 	%f638, %f218, %f635;
	mul.f32 	%f639, %f218, %f636;
	mul.f32 	%f640, %f218, %f637;
	fma.rn.f32 	%f641, %f622, %f945, %f638;
	fma.rn.f32 	%f642, %f622, %f946, %f639;
	fma.rn.f32 	%f643, %f622, %f947, %f640;
	add.s64 	%rd206, %rd184, 112;
	// begin inline asm
	cvta.to.global.u64 %rd205, %rd206;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd205];
	// end inline asm
	mov.b32 	%f644, %r250;
	mul.f32 	%f645, %f218, %f644;
	fma.rn.f32 	%f646, %f622, %f948, %f645;
	mul.f32 	%f647, %f642, %f642;
	fma.rn.f32 	%f648, %f641, %f641, %f647;
	fma.rn.f32 	%f649, %f643, %f643, %f648;
	fma.rn.f32 	%f650, %f646, %f646, %f649;
	sqrt.rn.f32 	%f651, %f650;
	rcp.rn.f32 	%f652, %f651;
	mul.f32 	%f945, %f641, %f652;
	mul.f32 	%f946, %f642, %f652;
	mul.f32 	%f947, %f643, %f652;
	mul.f32 	%f948, %f652, %f646;

$L__BB2_33:
	mul.f32 	%f653, %f946, %f946;
	fma.rn.f32 	%f654, %f945, %f945, %f653;
	fma.rn.f32 	%f655, %f947, %f947, %f654;
	fma.rn.f32 	%f656, %f948, %f948, %f655;
	rcp.rn.f32 	%f657, %f656;
	mul.f32 	%f658, %f945, %f657;
	mul.f32 	%f659, %f946, %f657;
	mul.f32 	%f660, %f947, %f657;
	mul.f32 	%f661, %f948, %f657;
	mul.f32 	%f662, %f945, %f658;
	mul.f32 	%f663, %f946, %f659;
	mul.f32 	%f664, %f947, %f660;
	mul.f32 	%f665, %f945, %f659;
	mul.f32 	%f666, %f947, %f661;
	mul.f32 	%f667, %f945, %f660;
	mul.f32 	%f668, %f946, %f661;
	mul.f32 	%f669, %f946, %f660;
	mul.f32 	%f670, %f945, %f661;
	sub.f32 	%f671, %f662, %f663;
	sub.f32 	%f672, %f671, %f664;
	fma.rn.f32 	%f673, %f948, %f661, %f672;
	sub.f32 	%f674, %f665, %f666;
	add.f32 	%f675, %f674, %f674;
	add.f32 	%f676, %f667, %f668;
	add.f32 	%f677, %f676, %f676;
	add.f32 	%f678, %f665, %f666;
	add.f32 	%f679, %f678, %f678;
	sub.f32 	%f680, %f663, %f662;
	sub.f32 	%f681, %f680, %f664;
	fma.rn.f32 	%f682, %f948, %f661, %f681;
	sub.f32 	%f683, %f669, %f670;
	add.f32 	%f684, %f683, %f683;
	sub.f32 	%f685, %f667, %f668;
	add.f32 	%f686, %f685, %f685;
	add.f32 	%f687, %f669, %f670;
	add.f32 	%f688, %f687, %f687;
	neg.f32 	%f689, %f662;
	sub.f32 	%f690, %f689, %f663;
	add.f32 	%f691, %f664, %f690;
	fma.rn.f32 	%f692, %f948, %f661, %f691;
	mul.f32 	%f693, %f941, %f673;
	fma.rn.f32 	%f694, %f943, %f675, %f693;
	fma.rn.f32 	%f957, %f944, %f677, %f694;
	mul.f32 	%f695, %f943, %f682;
	fma.rn.f32 	%f696, %f941, %f679, %f695;
	fma.rn.f32 	%f954, %f944, %f684, %f696;
	mul.f32 	%f697, %f943, %f688;
	fma.rn.f32 	%f698, %f941, %f686, %f697;
	fma.rn.f32 	%f951, %f944, %f692, %f698;
	mul.f32 	%f699, %f940, %f673;
	fma.rn.f32 	%f956, %f942, %f675, %f699;
	mul.f32 	%f700, %f942, %f682;
	fma.rn.f32 	%f953, %f940, %f679, %f700;
	mul.f32 	%f701, %f942, %f688;
	fma.rn.f32 	%f950, %f940, %f686, %f701;
	mul.f32 	%f955, %f939, %f673;
	mul.f32 	%f952, %f939, %f679;
	mul.f32 	%f949, %f939, %f686;

$L__BB2_36:
	mul.f32 	%f733, %f950, %f954;
	mul.f32 	%f734, %f951, %f953;
	sub.f32 	%f735, %f734, %f733;
	mul.f32 	%f736, %f955, %f735;
	mul.f32 	%f737, %f949, %f954;
	mul.f32 	%f738, %f951, %f952;
	sub.f32 	%f739, %f738, %f737;
	mul.f32 	%f740, %f739, %f956;
	sub.f32 	%f741, %f736, %f740;
	mul.f32 	%f742, %f949, %f953;
	mul.f32 	%f743, %f950, %f952;
	sub.f32 	%f744, %f743, %f742;
	fma.rn.f32 	%f745, %f744, %f957, %f741;
	rcp.rn.f32 	%f746, %f745;
	mul.f32 	%f964, %f735, %f746;
	mul.f32 	%f747, %f951, %f956;
	mul.f32 	%f748, %f950, %f957;
	sub.f32 	%f749, %f748, %f747;
	mul.f32 	%f965, %f749, %f746;
	mul.f32 	%f750, %f953, %f957;
	mul.f32 	%f751, %f954, %f956;
	sub.f32 	%f752, %f751, %f750;
	mul.f32 	%f966, %f752, %f746;
	sub.f32 	%f753, %f737, %f738;
	mul.f32 	%f961, %f753, %f746;
	mul.f32 	%f754, %f949, %f957;
	mul.f32 	%f755, %f951, %f955;
	sub.f32 	%f756, %f755, %f754;
	mul.f32 	%f962, %f756, %f746;
	mul.f32 	%f757, %f954, %f955;
	mul.f32 	%f758, %f952, %f957;
	sub.f32 	%f759, %f758, %f757;
	mul.f32 	%f963, %f759, %f746;
	mul.f32 	%f958, %f744, %f746;
	mul.f32 	%f760, %f950, %f955;
	mul.f32 	%f761, %f949, %f956;
	sub.f32 	%f762, %f761, %f760;
	mul.f32 	%f959, %f762, %f746;
	mul.f32 	%f763, %f952, %f956;
	mul.f32 	%f764, %f953, %f955;
	sub.f32 	%f765, %f764, %f763;
	mul.f32 	%f960, %f765, %f746;
	bra.uni 	$L__BB2_37;

$L__BB2_28:
	// begin inline asm
	call (%rd257), _optix_get_instance_inverse_transform_from_handle, (%rd136);
	// end inline asm

$L__BB2_29:
	// begin inline asm
	cvta.to.global.u64 %rd142, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd142];
	// end inline asm
	mov.b32 	%f964, %r167;
	mov.b32 	%f965, %r168;
	mov.b32 	%f966, %r169;
	add.s64 	%rd146, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd145, %rd146;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd145];
	// end inline asm
	mov.b32 	%f961, %r171;
	mov.b32 	%f962, %r172;
	mov.b32 	%f963, %r173;
	add.s64 	%rd149, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd148, %rd149;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd148];
	// end inline asm
	mov.b32 	%f958, %r175;
	mov.b32 	%f959, %r176;
	mov.b32 	%f960, %r177;

$L__BB2_37:
	setp.eq.s32 	%p19, %r319, 0;
	@%p19 bra 	$L__BB2_39;

	mul.f32 	%f766, %f935, %f965;
	fma.rn.f32 	%f767, %f932, %f964, %f766;
	fma.rn.f32 	%f304, %f938, %f966, %f767;
	mul.f32 	%f768, %f934, %f965;
	fma.rn.f32 	%f769, %f931, %f964, %f768;
	fma.rn.f32 	%f305, %f937, %f966, %f769;
	mul.f32 	%f770, %f933, %f965;
	fma.rn.f32 	%f771, %f930, %f964, %f770;
	fma.rn.f32 	%f966, %f936, %f966, %f771;
	mul.f32 	%f772, %f935, %f962;
	fma.rn.f32 	%f773, %f932, %f961, %f772;
	fma.rn.f32 	%f307, %f938, %f963, %f773;
	mul.f32 	%f774, %f934, %f962;
	fma.rn.f32 	%f775, %f931, %f961, %f774;
	fma.rn.f32 	%f308, %f937, %f963, %f775;
	mul.f32 	%f776, %f933, %f962;
	fma.rn.f32 	%f777, %f930, %f961, %f776;
	fma.rn.f32 	%f963, %f936, %f963, %f777;
	mul.f32 	%f778, %f935, %f959;
	fma.rn.f32 	%f779, %f932, %f958, %f778;
	fma.rn.f32 	%f310, %f938, %f960, %f779;
	mul.f32 	%f780, %f934, %f959;
	fma.rn.f32 	%f781, %f931, %f958, %f780;
	fma.rn.f32 	%f311, %f937, %f960, %f781;
	mul.f32 	%f782, %f933, %f959;
	fma.rn.f32 	%f783, %f930, %f958, %f782;
	fma.rn.f32 	%f960, %f936, %f960, %f783;
	mov.f32 	%f958, %f310;
	mov.f32 	%f959, %f311;
	mov.f32 	%f961, %f307;
	mov.f32 	%f962, %f308;
	mov.f32 	%f964, %f304;
	mov.f32 	%f965, %f305;

$L__BB2_39:
	add.s32 	%r319, %r319, 1;
	setp.lt.u32 	%p20, %r319, %r162;
	mov.f32 	%f930, %f966;
	mov.f32 	%f931, %f965;
	mov.f32 	%f932, %f964;
	mov.f32 	%f933, %f963;
	mov.f32 	%f934, %f962;
	mov.f32 	%f935, %f961;
	mov.f32 	%f936, %f960;
	mov.f32 	%f937, %f959;
	mov.f32 	%f938, %f958;
	@%p20 bra 	$L__BB2_24;

$L__BB2_40:
	mul.f32 	%f784, %f986, %f965;
	fma.rn.f32 	%f785, %f985, %f964, %f784;
	mul.f32 	%f786, %f986, %f962;
	fma.rn.f32 	%f787, %f985, %f961, %f786;
	mul.f32 	%f788, %f986, %f959;
	fma.rn.f32 	%f789, %f985, %f958, %f788;
	fma.rn.f32 	%f987, %f597, %f960, %f789;
	fma.rn.f32 	%f986, %f597, %f963, %f787;
	fma.rn.f32 	%f985, %f597, %f966, %f785;
	bra.uni 	$L__BB2_42;

$L__BB2_41:
	mov.f32 	%f987, %f597;

$L__BB2_42:
	// begin inline asm
	call (%f790), _optix_get_ray_tmin, ();
	// end inline asm
	fma.rn.f32 	%f793, %f985, %f790, %f927;
	fma.rn.f32 	%f794, %f986, %f790, %f928;
	fma.rn.f32 	%f795, %f987, %f790, %f929;
	ld.v4.f32 	{%f796, %f797, %f798, %f799}, [%rd1+32];
	mul.f32 	%f804, %f796, %f793;
	fma.rn.f32 	%f805, %f797, %f794, %f804;
	fma.rn.f32 	%f806, %f798, %f795, %f805;
	mov.f32 	%f807, 0f3F800000;
	fma.rn.f32 	%f808, %f799, %f807, %f806;
	ld.v4.f32 	{%f809, %f810, %f811, %f812}, [%rd1+48];
	mul.f32 	%f817, %f809, %f793;
	fma.rn.f32 	%f818, %f810, %f794, %f817;
	fma.rn.f32 	%f819, %f811, %f795, %f818;
	fma.rn.f32 	%f820, %f812, %f807, %f819;
	ld.v4.f32 	{%f821, %f822, %f823, %f824}, [%rd1+64];
	mul.f32 	%f829, %f821, %f793;
	fma.rn.f32 	%f830, %f822, %f794, %f829;
	fma.rn.f32 	%f831, %f823, %f795, %f830;
	fma.rn.f32 	%f832, %f824, %f807, %f831;
	mul.f32 	%f833, %f796, %f985;
	fma.rn.f32 	%f834, %f797, %f986, %f833;
	fma.rn.f32 	%f835, %f798, %f987, %f834;
	mov.f32 	%f836, 0f00000000;
	fma.rn.f32 	%f837, %f799, %f836, %f835;
	mul.f32 	%f838, %f809, %f985;
	fma.rn.f32 	%f839, %f810, %f986, %f838;
	fma.rn.f32 	%f840, %f811, %f987, %f839;
	fma.rn.f32 	%f841, %f812, %f836, %f840;
	mul.f32 	%f842, %f821, %f985;
	fma.rn.f32 	%f843, %f822, %f986, %f842;
	fma.rn.f32 	%f844, %f823, %f987, %f843;
	fma.rn.f32 	%f845, %f824, %f836, %f844;
	neg.f32 	%f846, %f832;
	div.rn.f32 	%f340, %f846, %f845;
	fma.rn.f32 	%f341, %f340, %f837, %f808;
	fma.rn.f32 	%f342, %f340, %f841, %f820;
	abs.f32 	%f847, %f341;
	setp.gtu.f32 	%p21, %f847, 0f3F800000;
	@%p21 bra 	$L__BB2_45;

	abs.f32 	%f848, %f342;
	setp.gtu.f32 	%p22, %f848, 0f3F800000;
	@%p22 bra 	$L__BB2_45;

	mov.b32 	%r315, %f341;
	mov.b32 	%r316, %f342;
	mov.u32 	%r314, 254;
	// begin inline asm
	call (%r313), _optix_report_intersection_2, (%f340, %r314, %r315, %r316);
	// end inline asm

$L__BB2_45:
	ret;

}
	// .globl	__intersection__sdfgrid
.visible .entry __intersection__sdfgrid()
{
	.reg .pred 	%p<108>;
	.reg .f32 	%f<1237>;
	.reg .b32 	%r<377>;
	.reg .b64 	%rd<278>;


	// begin inline asm
	call (%rd16), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd16+8];
	ld.u64 	%rd17, [%rd1];
	// begin inline asm
	call (%r17), _optix_read_primitive_idx, ();
	// end inline asm
	mul.wide.u32 	%rd18, %r17, 4;
	add.s64 	%rd19, %rd17, %rd18;
	ld.u32 	%r1, [%rd19];
	// begin inline asm
	call (%f1154), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f1155), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f1156), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r18), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p5, %r18, 0;
	@%p5 bra 	$L__BB3_21;

	// begin inline asm
	call (%r19), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f417), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p6, %r19, 0;
	@%p6 bra 	$L__BB3_19;

	mov.u32 	%r374, 0;

$L__BB3_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd20), _optix_get_transform_list_handle, (%r374);
	// end inline asm
	// begin inline asm
	call (%r22), _optix_get_transform_type_from_handle, (%rd20);
	// end inline asm
	or.b32  	%r23, %r22, 1;
	setp.eq.s32 	%p7, %r23, 3;
	@%p7 bra 	$L__BB3_9;
	bra.uni 	$L__BB3_4;

$L__BB3_9:
	setp.eq.s32 	%p10, %r22, 2;
	@%p10 bra 	$L__BB3_13;
	bra.uni 	$L__BB3_10;

$L__BB3_13:
	// begin inline asm
	call (%rd92), _optix_get_matrix_motion_transform_from_handle, (%rd20);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd94, %rd92;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r111,%r112,%r113,%r114}, [%rd94];
	// end inline asm
	add.s64 	%rd98, %rd92, 16;
	// begin inline asm
	cvta.to.global.u64 %rd97, %rd98;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r115,%r116,%r117,%r118}, [%rd97];
	// end inline asm
	add.s64 	%rd101, %rd92, 32;
	// begin inline asm
	cvta.to.global.u64 %rd100, %rd101;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r119,%r120,%r121,%r122}, [%rd100];
	// end inline asm
	add.s64 	%rd104, %rd92, 48;
	// begin inline asm
	cvta.to.global.u64 %rd103, %rd104;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r123,%r124,%r125,%r126}, [%rd103];
	// end inline asm
	add.s64 	%rd107, %rd92, 64;
	// begin inline asm
	cvta.to.global.u64 %rd106, %rd107;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r127,%r128,%r129,%r130}, [%rd106];
	// end inline asm
	add.s64 	%rd110, %rd92, 80;
	// begin inline asm
	cvta.to.global.u64 %rd109, %rd110;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r131,%r132,%r133,%r134}, [%rd109];
	// end inline asm
	add.s64 	%rd113, %rd92, 96;
	// begin inline asm
	cvta.to.global.u64 %rd112, %rd113;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r135,%r136,%r137,%r138}, [%rd112];
	// end inline asm
	add.s64 	%rd116, %rd92, 112;
	// begin inline asm
	cvta.to.global.u64 %rd115, %rd116;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r139,%r140,%r141,%r142}, [%rd115];
	// end inline asm
	mov.b32 	%f545, %r114;
	mov.b32 	%f546, %r115;
	and.b32  	%r155, %r113, 65535;
	add.s32 	%r156, %r155, -1;
	cvt.rn.f32.s32 	%f547, %r156;
	sub.f32 	%f548, %f417, %f545;
	mul.f32 	%f549, %f548, %f547;
	sub.f32 	%f550, %f546, %f545;
	div.rn.f32 	%f551, %f549, %f550;
	min.f32 	%f552, %f547, %f551;
	mov.f32 	%f553, 0f00000000;
	max.f32 	%f554, %f553, %f552;
	cvt.rmi.f32.f32 	%f555, %f554;
	sub.f32 	%f90, %f554, %f555;
	cvt.rzi.s32.f32 	%r157, %f555;
	mul.wide.s32 	%rd127, %r157, 48;
	add.s64 	%rd119, %rd101, %rd127;
	// begin inline asm
	cvta.to.global.u64 %rd118, %rd119;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r143,%r144,%r145,%r146}, [%rd118];
	// end inline asm
	mov.b32 	%f1114, %r143;
	mov.b32 	%f1115, %r144;
	mov.b32 	%f1116, %r145;
	mov.b32 	%f1117, %r146;
	add.s64 	%rd122, %rd119, 16;
	// begin inline asm
	cvta.to.global.u64 %rd121, %rd122;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r147,%r148,%r149,%r150}, [%rd121];
	// end inline asm
	mov.b32 	%f1110, %r147;
	mov.b32 	%f1111, %r148;
	mov.b32 	%f1112, %r149;
	mov.b32 	%f1113, %r150;
	add.s64 	%rd125, %rd119, 32;
	// begin inline asm
	cvta.to.global.u64 %rd124, %rd125;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r151,%r152,%r153,%r154}, [%rd124];
	// end inline asm
	mov.b32 	%f1106, %r151;
	mov.b32 	%f1107, %r152;
	mov.b32 	%f1108, %r153;
	mov.b32 	%f1109, %r154;
	setp.leu.f32 	%p12, %f90, 0f00000000;
	@%p12 bra 	$L__BB3_15;

	cvt.rmi.f32.f32 	%f1077, %f554;
	cvt.rzi.s32.f32 	%r373, %f1077;
	cvt.s64.s32 	%rd275, %r373;
	mov.f32 	%f556, 0f3F800000;
	sub.f32 	%f557, %f556, %f90;
	mul.lo.s64 	%rd137, %rd275, 48;
	add.s64 	%rd138, %rd92, %rd137;
	add.s64 	%rd129, %rd138, 80;
	// begin inline asm
	cvta.to.global.u64 %rd128, %rd129;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r158,%r159,%r160,%r161}, [%rd128];
	// end inline asm
	mov.b32 	%f558, %r158;
	mov.b32 	%f559, %r159;
	mov.b32 	%f560, %r160;
	mov.b32 	%f561, %r161;
	mul.f32 	%f562, %f90, %f558;
	mul.f32 	%f563, %f90, %f559;
	mul.f32 	%f564, %f90, %f560;
	mul.f32 	%f565, %f90, %f561;
	fma.rn.f32 	%f1114, %f557, %f1114, %f562;
	fma.rn.f32 	%f1115, %f557, %f1115, %f563;
	fma.rn.f32 	%f1116, %f557, %f1116, %f564;
	fma.rn.f32 	%f1117, %f557, %f1117, %f565;
	add.s64 	%rd132, %rd138, 96;
	// begin inline asm
	cvta.to.global.u64 %rd131, %rd132;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r162,%r163,%r164,%r165}, [%rd131];
	// end inline asm
	mov.b32 	%f566, %r162;
	mov.b32 	%f567, %r163;
	mov.b32 	%f568, %r164;
	mov.b32 	%f569, %r165;
	mul.f32 	%f570, %f90, %f566;
	mul.f32 	%f571, %f90, %f567;
	mul.f32 	%f572, %f90, %f568;
	mul.f32 	%f573, %f90, %f569;
	fma.rn.f32 	%f1110, %f557, %f1110, %f570;
	fma.rn.f32 	%f1111, %f557, %f1111, %f571;
	fma.rn.f32 	%f1112, %f557, %f1112, %f572;
	fma.rn.f32 	%f1113, %f557, %f1113, %f573;
	add.s64 	%rd135, %rd138, 112;
	// begin inline asm
	cvta.to.global.u64 %rd134, %rd135;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r166,%r167,%r168,%r169}, [%rd134];
	// end inline asm
	mov.b32 	%f574, %r166;
	mov.b32 	%f575, %r167;
	mov.b32 	%f576, %r168;
	mov.b32 	%f577, %r169;
	mul.f32 	%f578, %f90, %f574;
	mul.f32 	%f579, %f90, %f575;
	mul.f32 	%f580, %f90, %f576;
	mul.f32 	%f581, %f90, %f577;
	fma.rn.f32 	%f1106, %f557, %f1106, %f578;
	fma.rn.f32 	%f1107, %f557, %f1107, %f579;
	fma.rn.f32 	%f1108, %f557, %f1108, %f580;
	fma.rn.f32 	%f1109, %f557, %f1109, %f581;
	bra.uni 	$L__BB3_15;

$L__BB3_4:
	mov.f32 	%f1118, 0f00000000;
	mov.f32 	%f1120, 0f3F800000;
	setp.eq.s32 	%p8, %r22, 4;
	@%p8 bra 	$L__BB3_7;

	setp.ne.s32 	%p9, %r22, 1;
	mov.f32 	%f1119, %f1118;
	mov.f32 	%f1121, %f1118;
	mov.f32 	%f1122, %f1118;
	mov.f32 	%f1123, %f1120;
	mov.f32 	%f1124, %f1118;
	mov.f32 	%f1125, %f1118;
	mov.f32 	%f1126, %f1120;
	mov.f32 	%f1127, %f1118;
	mov.f32 	%f1128, %f1118;
	mov.f32 	%f1129, %f1118;
	@%p9 bra 	$L__BB3_16;

	// begin inline asm
	call (%rd22), _optix_get_static_transform_from_handle, (%rd20);
	// end inline asm
	add.s64 	%rd276, %rd22, 64;
	bra.uni 	$L__BB3_8;

$L__BB3_10:
	// begin inline asm
	call (%rd35), _optix_get_srt_motion_transform_from_handle, (%rd20);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd37, %rd35;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r36,%r37,%r38,%r39}, [%rd37];
	// end inline asm
	add.s64 	%rd41, %rd35, 16;
	// begin inline asm
	cvta.to.global.u64 %rd40, %rd41;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r40,%r41,%r42,%r43}, [%rd40];
	// end inline asm
	add.s64 	%rd44, %rd35, 32;
	// begin inline asm
	cvta.to.global.u64 %rd43, %rd44;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r44,%r45,%r46,%r47}, [%rd43];
	// end inline asm
	add.s64 	%rd47, %rd35, 48;
	// begin inline asm
	cvta.to.global.u64 %rd46, %rd47;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r48,%r49,%r50,%r51}, [%rd46];
	// end inline asm
	add.s64 	%rd50, %rd35, 64;
	// begin inline asm
	cvta.to.global.u64 %rd49, %rd50;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r52,%r53,%r54,%r55}, [%rd49];
	// end inline asm
	add.s64 	%rd53, %rd35, 80;
	// begin inline asm
	cvta.to.global.u64 %rd52, %rd53;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r56,%r57,%r58,%r59}, [%rd52];
	// end inline asm
	add.s64 	%rd56, %rd35, 96;
	// begin inline asm
	cvta.to.global.u64 %rd55, %rd56;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r60,%r61,%r62,%r63}, [%rd55];
	// end inline asm
	add.s64 	%rd59, %rd35, 112;
	// begin inline asm
	cvta.to.global.u64 %rd58, %rd59;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r64,%r65,%r66,%r67}, [%rd58];
	// end inline asm
	add.s64 	%rd62, %rd35, 128;
	// begin inline asm
	cvta.to.global.u64 %rd61, %rd62;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r68,%r69,%r70,%r71}, [%rd61];
	// end inline asm
	add.s64 	%rd65, %rd35, 144;
	// begin inline asm
	cvta.to.global.u64 %rd64, %rd65;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r72,%r73,%r74,%r75}, [%rd64];
	// end inline asm
	mov.b32 	%f432, %r39;
	mov.b32 	%f433, %r40;
	and.b32  	%r92, %r38, 65535;
	add.s32 	%r93, %r92, -1;
	cvt.rn.f32.s32 	%f434, %r93;
	sub.f32 	%f435, %f417, %f432;
	mul.f32 	%f436, %f435, %f434;
	sub.f32 	%f437, %f433, %f432;
	div.rn.f32 	%f438, %f436, %f437;
	min.f32 	%f439, %f434, %f438;
	mov.f32 	%f440, 0f00000000;
	max.f32 	%f441, %f440, %f439;
	cvt.rmi.f32.f32 	%f442, %f441;
	sub.f32 	%f29, %f441, %f442;
	cvt.rzi.s32.f32 	%r94, %f442;
	mul.wide.s32 	%rd79, %r94, 64;
	add.s64 	%rd68, %rd44, %rd79;
	// begin inline asm
	cvta.to.global.u64 %rd67, %rd68;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r76,%r77,%r78,%r79}, [%rd67];
	// end inline asm
	mov.b32 	%f1090, %r76;
	mov.b32 	%f1091, %r77;
	mov.b32 	%f1092, %r78;
	mov.b32 	%f1093, %r79;
	add.s64 	%rd71, %rd68, 16;
	// begin inline asm
	cvta.to.global.u64 %rd70, %rd71;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r80,%r81,%r82,%r83}, [%rd70];
	// end inline asm
	mov.b32 	%f1094, %r80;
	mov.b32 	%f1095, %r81;
	mov.b32 	%f1096, %r82;
	mov.b32 	%f1097, %r83;
	add.s64 	%rd74, %rd68, 32;
	// begin inline asm
	cvta.to.global.u64 %rd73, %rd74;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r84,%r85,%r86,%r87}, [%rd73];
	// end inline asm
	mov.b32 	%f1098, %r84;
	mov.b32 	%f1099, %r85;
	mov.b32 	%f1100, %r86;
	mov.b32 	%f1101, %r87;
	add.s64 	%rd77, %rd68, 48;
	// begin inline asm
	cvta.to.global.u64 %rd76, %rd77;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r88,%r89,%r90,%r91}, [%rd76];
	// end inline asm
	mov.b32 	%f1102, %r88;
	mov.b32 	%f1103, %r89;
	mov.b32 	%f1104, %r90;
	mov.b32 	%f1105, %r91;
	setp.leu.f32 	%p11, %f29, 0f00000000;
	@%p11 bra 	$L__BB3_12;

	mov.f32 	%f443, 0f3F800000;
	sub.f32 	%f444, %f443, %f29;
	add.s64 	%rd81, %rd68, 64;
	// begin inline asm
	cvta.to.global.u64 %rd80, %rd81;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r95,%r96,%r97,%r98}, [%rd80];
	// end inline asm
	mov.b32 	%f445, %r95;
	mov.b32 	%f446, %r96;
	mov.b32 	%f447, %r97;
	mov.b32 	%f448, %r98;
	mul.f32 	%f449, %f29, %f445;
	mul.f32 	%f450, %f29, %f446;
	mul.f32 	%f451, %f29, %f447;
	mul.f32 	%f452, %f29, %f448;
	fma.rn.f32 	%f1090, %f444, %f1090, %f449;
	fma.rn.f32 	%f1091, %f444, %f1091, %f450;
	fma.rn.f32 	%f1092, %f444, %f1092, %f451;
	fma.rn.f32 	%f1093, %f444, %f1093, %f452;
	add.s64 	%rd84, %rd68, 80;
	// begin inline asm
	cvta.to.global.u64 %rd83, %rd84;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r99,%r100,%r101,%r102}, [%rd83];
	// end inline asm
	mov.b32 	%f453, %r99;
	mov.b32 	%f454, %r100;
	mov.b32 	%f455, %r101;
	mov.b32 	%f456, %r102;
	mul.f32 	%f457, %f29, %f453;
	mul.f32 	%f458, %f29, %f454;
	mul.f32 	%f459, %f29, %f455;
	mul.f32 	%f460, %f29, %f456;
	fma.rn.f32 	%f1094, %f444, %f1094, %f457;
	fma.rn.f32 	%f1095, %f444, %f1095, %f458;
	fma.rn.f32 	%f1096, %f444, %f1096, %f459;
	fma.rn.f32 	%f1097, %f444, %f1097, %f460;
	add.s64 	%rd87, %rd68, 96;
	// begin inline asm
	cvta.to.global.u64 %rd86, %rd87;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r103,%r104,%r105,%r106}, [%rd86];
	// end inline asm
	mov.b32 	%f461, %r103;
	mov.b32 	%f462, %r104;
	mov.b32 	%f463, %r105;
	mov.b32 	%f464, %r106;
	mul.f32 	%f465, %f29, %f461;
	mul.f32 	%f466, %f29, %f462;
	mul.f32 	%f467, %f29, %f463;
	mul.f32 	%f468, %f29, %f464;
	fma.rn.f32 	%f1098, %f444, %f1098, %f465;
	fma.rn.f32 	%f469, %f444, %f1099, %f466;
	fma.rn.f32 	%f470, %f444, %f1100, %f467;
	fma.rn.f32 	%f471, %f444, %f1101, %f468;
	add.s64 	%rd90, %rd68, 112;
	// begin inline asm
	cvta.to.global.u64 %rd89, %rd90;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r107,%r108,%r109,%r110}, [%rd89];
	// end inline asm
	mov.b32 	%f472, %r107;
	mov.b32 	%f473, %r108;
	mov.b32 	%f474, %r109;
	mov.b32 	%f475, %r110;
	mul.f32 	%f476, %f29, %f472;
	mul.f32 	%f477, %f29, %f473;
	mul.f32 	%f478, %f29, %f474;
	mul.f32 	%f479, %f29, %f475;
	fma.rn.f32 	%f480, %f444, %f1102, %f476;
	fma.rn.f32 	%f1103, %f444, %f1103, %f477;
	fma.rn.f32 	%f1104, %f444, %f1104, %f478;
	fma.rn.f32 	%f1105, %f444, %f1105, %f479;
	mul.f32 	%f481, %f470, %f470;
	fma.rn.f32 	%f482, %f469, %f469, %f481;
	fma.rn.f32 	%f483, %f471, %f471, %f482;
	fma.rn.f32 	%f484, %f480, %f480, %f483;
	sqrt.rn.f32 	%f485, %f484;
	rcp.rn.f32 	%f486, %f485;
	mul.f32 	%f1099, %f469, %f486;
	mul.f32 	%f1100, %f470, %f486;
	mul.f32 	%f1101, %f471, %f486;
	mul.f32 	%f1102, %f486, %f480;

$L__BB3_12:
	mul.f32 	%f487, %f1100, %f1100;
	fma.rn.f32 	%f488, %f1099, %f1099, %f487;
	fma.rn.f32 	%f489, %f1101, %f1101, %f488;
	fma.rn.f32 	%f490, %f1102, %f1102, %f489;
	rcp.rn.f32 	%f491, %f490;
	mul.f32 	%f492, %f1099, %f491;
	mul.f32 	%f493, %f1100, %f491;
	mul.f32 	%f494, %f1101, %f491;
	mul.f32 	%f495, %f1102, %f491;
	mul.f32 	%f496, %f1099, %f492;
	mul.f32 	%f497, %f1100, %f493;
	mul.f32 	%f498, %f1101, %f494;
	mul.f32 	%f499, %f1099, %f493;
	mul.f32 	%f500, %f1101, %f495;
	mul.f32 	%f501, %f1099, %f494;
	mul.f32 	%f502, %f1100, %f495;
	mul.f32 	%f503, %f1100, %f494;
	mul.f32 	%f504, %f1099, %f495;
	sub.f32 	%f505, %f496, %f497;
	sub.f32 	%f506, %f505, %f498;
	fma.rn.f32 	%f507, %f1102, %f495, %f506;
	sub.f32 	%f508, %f499, %f500;
	add.f32 	%f509, %f508, %f508;
	add.f32 	%f510, %f501, %f502;
	add.f32 	%f511, %f510, %f510;
	add.f32 	%f512, %f499, %f500;
	add.f32 	%f513, %f512, %f512;
	sub.f32 	%f514, %f497, %f496;
	sub.f32 	%f515, %f514, %f498;
	fma.rn.f32 	%f516, %f1102, %f495, %f515;
	sub.f32 	%f517, %f503, %f504;
	add.f32 	%f518, %f517, %f517;
	sub.f32 	%f519, %f501, %f502;
	add.f32 	%f520, %f519, %f519;
	add.f32 	%f521, %f503, %f504;
	add.f32 	%f522, %f521, %f521;
	neg.f32 	%f523, %f496;
	sub.f32 	%f524, %f523, %f497;
	add.f32 	%f525, %f498, %f524;
	fma.rn.f32 	%f526, %f1102, %f495, %f525;
	mul.f32 	%f527, %f1093, %f507;
	fma.rn.f32 	%f528, %f1096, %f509, %f527;
	fma.rn.f32 	%f529, %f1098, %f511, %f528;
	add.f32 	%f1117, %f1103, %f529;
	mul.f32 	%f530, %f1096, %f516;
	fma.rn.f32 	%f531, %f1093, %f513, %f530;
	fma.rn.f32 	%f532, %f1098, %f518, %f531;
	add.f32 	%f1113, %f1104, %f532;
	mul.f32 	%f533, %f1096, %f522;
	fma.rn.f32 	%f534, %f1093, %f520, %f533;
	fma.rn.f32 	%f535, %f1098, %f526, %f534;
	add.f32 	%f1109, %f1105, %f535;
	mul.f32 	%f536, %f1092, %f507;
	fma.rn.f32 	%f537, %f1095, %f509, %f536;
	fma.rn.f32 	%f1116, %f1097, %f511, %f537;
	mul.f32 	%f538, %f1095, %f516;
	fma.rn.f32 	%f539, %f1092, %f513, %f538;
	fma.rn.f32 	%f1112, %f1097, %f518, %f539;
	mul.f32 	%f540, %f1095, %f522;
	fma.rn.f32 	%f541, %f1092, %f520, %f540;
	fma.rn.f32 	%f1108, %f1097, %f526, %f541;
	mul.f32 	%f542, %f1091, %f507;
	fma.rn.f32 	%f1115, %f1094, %f509, %f542;
	mul.f32 	%f543, %f1094, %f516;
	fma.rn.f32 	%f1111, %f1091, %f513, %f543;
	mul.f32 	%f544, %f1094, %f522;
	fma.rn.f32 	%f1107, %f1091, %f520, %f544;
	mul.f32 	%f1114, %f1090, %f507;
	mul.f32 	%f1110, %f1090, %f513;
	mul.f32 	%f1106, %f1090, %f520;

$L__BB3_15:
	mul.f32 	%f582, %f1107, %f1112;
	mul.f32 	%f583, %f1108, %f1111;
	sub.f32 	%f584, %f583, %f582;
	mul.f32 	%f585, %f1114, %f584;
	mul.f32 	%f586, %f1106, %f1112;
	mul.f32 	%f587, %f1108, %f1110;
	sub.f32 	%f588, %f587, %f586;
	mul.f32 	%f589, %f588, %f1115;
	sub.f32 	%f590, %f585, %f589;
	mul.f32 	%f591, %f1106, %f1111;
	mul.f32 	%f592, %f1107, %f1110;
	sub.f32 	%f593, %f592, %f591;
	fma.rn.f32 	%f594, %f593, %f1116, %f590;
	rcp.rn.f32 	%f595, %f594;
	mul.f32 	%f1126, %f584, %f595;
	mul.f32 	%f596, %f1108, %f1115;
	mul.f32 	%f597, %f1107, %f1116;
	sub.f32 	%f598, %f597, %f596;
	mul.f32 	%f1127, %f598, %f595;
	mul.f32 	%f599, %f1111, %f1116;
	mul.f32 	%f600, %f1112, %f1115;
	sub.f32 	%f601, %f600, %f599;
	mul.f32 	%f1128, %f601, %f595;
	sub.f32 	%f602, %f586, %f587;
	mul.f32 	%f1122, %f602, %f595;
	mul.f32 	%f603, %f1106, %f1116;
	mul.f32 	%f604, %f1108, %f1114;
	sub.f32 	%f605, %f604, %f603;
	mul.f32 	%f1123, %f605, %f595;
	mul.f32 	%f606, %f1112, %f1114;
	mul.f32 	%f607, %f1110, %f1116;
	sub.f32 	%f608, %f607, %f606;
	mul.f32 	%f1124, %f608, %f595;
	mul.f32 	%f1118, %f593, %f595;
	mul.f32 	%f609, %f1107, %f1114;
	mul.f32 	%f610, %f1106, %f1115;
	sub.f32 	%f611, %f610, %f609;
	mul.f32 	%f1119, %f611, %f595;
	mul.f32 	%f612, %f1110, %f1115;
	mul.f32 	%f613, %f1111, %f1114;
	sub.f32 	%f614, %f613, %f612;
	mul.f32 	%f1120, %f614, %f595;
	mul.f32 	%f615, %f1117, %f1126;
	neg.f32 	%f616, %f615;
	mul.f32 	%f617, %f1113, %f1127;
	sub.f32 	%f618, %f616, %f617;
	mul.f32 	%f619, %f1109, %f1128;
	sub.f32 	%f1129, %f618, %f619;
	mul.f32 	%f620, %f1117, %f1122;
	neg.f32 	%f621, %f620;
	mul.f32 	%f622, %f1113, %f1123;
	sub.f32 	%f623, %f621, %f622;
	mul.f32 	%f624, %f1109, %f1124;
	sub.f32 	%f1125, %f623, %f624;
	mul.f32 	%f625, %f1117, %f1118;
	neg.f32 	%f626, %f625;
	mul.f32 	%f627, %f1113, %f1119;
	sub.f32 	%f628, %f626, %f627;
	mul.f32 	%f629, %f1109, %f1120;
	sub.f32 	%f1121, %f628, %f629;
	bra.uni 	$L__BB3_16;

$L__BB3_7:
	// begin inline asm
	call (%rd276), _optix_get_instance_inverse_transform_from_handle, (%rd20);
	// end inline asm

$L__BB3_8:
	// begin inline asm
	cvta.to.global.u64 %rd26, %rd276;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r24,%r25,%r26,%r27}, [%rd26];
	// end inline asm
	mov.b32 	%f1126, %r24;
	mov.b32 	%f1127, %r25;
	mov.b32 	%f1128, %r26;
	mov.b32 	%f1129, %r27;
	add.s64 	%rd30, %rd276, 16;
	// begin inline asm
	cvta.to.global.u64 %rd29, %rd30;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r28,%r29,%r30,%r31}, [%rd29];
	// end inline asm
	mov.b32 	%f1122, %r28;
	mov.b32 	%f1123, %r29;
	mov.b32 	%f1124, %r30;
	mov.b32 	%f1125, %r31;
	add.s64 	%rd33, %rd276, 32;
	// begin inline asm
	cvta.to.global.u64 %rd32, %rd33;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r32,%r33,%r34,%r35}, [%rd32];
	// end inline asm
	mov.b32 	%f1118, %r32;
	mov.b32 	%f1119, %r33;
	mov.b32 	%f1120, %r34;
	mov.b32 	%f1121, %r35;

$L__BB3_16:
	setp.eq.s32 	%p13, %r374, 0;
	@%p13 bra 	$L__BB3_18;

	mul.f32 	%f630, %f1085, %f1127;
	fma.rn.f32 	%f631, %f1081, %f1126, %f630;
	fma.rn.f32 	%f151, %f1088, %f1128, %f631;
	mul.f32 	%f632, %f1084, %f1127;
	fma.rn.f32 	%f633, %f1080, %f1126, %f632;
	fma.rn.f32 	%f152, %f1089, %f1128, %f633;
	mul.f32 	%f634, %f1083, %f1127;
	fma.rn.f32 	%f635, %f1079, %f1126, %f634;
	fma.rn.f32 	%f153, %f1087, %f1128, %f635;
	mul.f32 	%f636, %f1082, %f1127;
	fma.rn.f32 	%f637, %f1078, %f1126, %f636;
	fma.rn.f32 	%f638, %f1086, %f1128, %f637;
	add.f32 	%f1129, %f1129, %f638;
	mul.f32 	%f639, %f1085, %f1123;
	fma.rn.f32 	%f640, %f1081, %f1122, %f639;
	fma.rn.f32 	%f155, %f1088, %f1124, %f640;
	mul.f32 	%f641, %f1084, %f1123;
	fma.rn.f32 	%f642, %f1080, %f1122, %f641;
	fma.rn.f32 	%f156, %f1089, %f1124, %f642;
	mul.f32 	%f643, %f1083, %f1123;
	fma.rn.f32 	%f644, %f1079, %f1122, %f643;
	fma.rn.f32 	%f157, %f1087, %f1124, %f644;
	mul.f32 	%f645, %f1082, %f1123;
	fma.rn.f32 	%f646, %f1078, %f1122, %f645;
	fma.rn.f32 	%f647, %f1086, %f1124, %f646;
	add.f32 	%f1125, %f1125, %f647;
	mul.f32 	%f648, %f1085, %f1119;
	fma.rn.f32 	%f649, %f1081, %f1118, %f648;
	fma.rn.f32 	%f159, %f1088, %f1120, %f649;
	mul.f32 	%f650, %f1084, %f1119;
	fma.rn.f32 	%f651, %f1080, %f1118, %f650;
	fma.rn.f32 	%f160, %f1089, %f1120, %f651;
	mul.f32 	%f652, %f1083, %f1119;
	fma.rn.f32 	%f653, %f1079, %f1118, %f652;
	fma.rn.f32 	%f161, %f1087, %f1120, %f653;
	mul.f32 	%f654, %f1082, %f1119;
	fma.rn.f32 	%f655, %f1078, %f1118, %f654;
	fma.rn.f32 	%f656, %f1086, %f1120, %f655;
	add.f32 	%f1121, %f1121, %f656;
	mov.f32 	%f1119, %f160;
	mov.f32 	%f1118, %f159;
	mov.f32 	%f1120, %f161;
	mov.f32 	%f1122, %f155;
	mov.f32 	%f1123, %f156;
	mov.f32 	%f1124, %f157;
	mov.f32 	%f1126, %f151;
	mov.f32 	%f1127, %f152;
	mov.f32 	%f1128, %f153;

$L__BB3_18:
	add.s32 	%r374, %r374, 1;
	setp.lt.u32 	%p14, %r374, %r19;
	mov.f32 	%f1078, %f1129;
	mov.f32 	%f1079, %f1128;
	mov.f32 	%f1080, %f1127;
	mov.f32 	%f1081, %f1126;
	mov.f32 	%f1082, %f1125;
	mov.f32 	%f1083, %f1124;
	mov.f32 	%f1084, %f1123;
	mov.f32 	%f1085, %f1122;
	mov.f32 	%f1086, %f1121;
	mov.f32 	%f1087, %f1120;
	mov.f32 	%f1088, %f1118;
	mov.f32 	%f1089, %f1119;
	@%p14 bra 	$L__BB3_3;

$L__BB3_19:
	mul.f32 	%f657, %f1155, %f1127;
	fma.rn.f32 	%f658, %f1154, %f1126, %f657;
	fma.rn.f32 	%f659, %f1156, %f1128, %f658;
	mul.f32 	%f660, %f1155, %f1123;
	fma.rn.f32 	%f661, %f1154, %f1122, %f660;
	fma.rn.f32 	%f662, %f1156, %f1124, %f661;
	mul.f32 	%f663, %f1154, %f1118;
	fma.rn.f32 	%f664, %f1155, %f1119, %f663;
	fma.rn.f32 	%f665, %f1156, %f1120, %f664;
	add.f32 	%f1156, %f1121, %f665;
	add.f32 	%f1155, %f1125, %f662;
	add.f32 	%f1154, %f1129, %f659;

$L__BB3_21:
	// begin inline asm
	call (%f1212), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f1213), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f668), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r170), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p15, %r170, 0;
	@%p15 bra 	$L__BB3_41;

	// begin inline asm
	call (%r171), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f669), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p16, %r171, 0;
	@%p16 bra 	$L__BB3_40;

	mov.u32 	%r375, 0;

$L__BB3_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd139), _optix_get_transform_list_handle, (%r375);
	// end inline asm
	// begin inline asm
	call (%r174), _optix_get_transform_type_from_handle, (%rd139);
	// end inline asm
	or.b32  	%r175, %r174, 1;
	setp.eq.s32 	%p17, %r175, 3;
	@%p17 bra 	$L__BB3_30;
	bra.uni 	$L__BB3_25;

$L__BB3_30:
	setp.eq.s32 	%p20, %r174, 2;
	@%p20 bra 	$L__BB3_34;
	bra.uni 	$L__BB3_31;

$L__BB3_34:
	// begin inline asm
	call (%rd211), _optix_get_matrix_motion_transform_from_handle, (%rd139);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd213, %rd211;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r263,%r264,%r265,%r266}, [%rd213];
	// end inline asm
	add.s64 	%rd217, %rd211, 16;
	// begin inline asm
	cvta.to.global.u64 %rd216, %rd217;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r267,%r268,%r269,%r270}, [%rd216];
	// end inline asm
	add.s64 	%rd220, %rd211, 32;
	// begin inline asm
	cvta.to.global.u64 %rd219, %rd220;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r271,%r272,%r273,%r274}, [%rd219];
	// end inline asm
	add.s64 	%rd223, %rd211, 48;
	// begin inline asm
	cvta.to.global.u64 %rd222, %rd223;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r275,%r276,%r277,%r278}, [%rd222];
	// end inline asm
	add.s64 	%rd226, %rd211, 64;
	// begin inline asm
	cvta.to.global.u64 %rd225, %rd226;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r279,%r280,%r281,%r282}, [%rd225];
	// end inline asm
	add.s64 	%rd229, %rd211, 80;
	// begin inline asm
	cvta.to.global.u64 %rd228, %rd229;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r283,%r284,%r285,%r286}, [%rd228];
	// end inline asm
	add.s64 	%rd232, %rd211, 96;
	// begin inline asm
	cvta.to.global.u64 %rd231, %rd232;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r287,%r288,%r289,%r290}, [%rd231];
	// end inline asm
	add.s64 	%rd235, %rd211, 112;
	// begin inline asm
	cvta.to.global.u64 %rd234, %rd235;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r291,%r292,%r293,%r294}, [%rd234];
	// end inline asm
	mov.b32 	%f773, %r266;
	mov.b32 	%f774, %r267;
	and.b32  	%r307, %r265, 65535;
	add.s32 	%r308, %r307, -1;
	cvt.rn.f32.s32 	%f775, %r308;
	sub.f32 	%f776, %f669, %f773;
	mul.f32 	%f777, %f776, %f775;
	sub.f32 	%f778, %f774, %f773;
	div.rn.f32 	%f779, %f777, %f778;
	min.f32 	%f780, %f775, %f779;
	mov.f32 	%f781, 0f00000000;
	max.f32 	%f782, %f781, %f780;
	cvt.rmi.f32.f32 	%f783, %f782;
	sub.f32 	%f258, %f782, %f783;
	cvt.rzi.s32.f32 	%r309, %f783;
	cvt.s64.s32 	%rd15, %r309;
	mul.wide.s32 	%rd246, %r309, 48;
	add.s64 	%rd238, %rd220, %rd246;
	// begin inline asm
	cvta.to.global.u64 %rd237, %rd238;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r295,%r296,%r297,%r298}, [%rd237];
	// end inline asm
	mov.b32 	%f1182, %r295;
	mov.b32 	%f1183, %r296;
	mov.b32 	%f1184, %r297;
	add.s64 	%rd241, %rd238, 16;
	// begin inline asm
	cvta.to.global.u64 %rd240, %rd241;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r299,%r300,%r301,%r302}, [%rd240];
	// end inline asm
	mov.b32 	%f1179, %r299;
	mov.b32 	%f1180, %r300;
	mov.b32 	%f1181, %r301;
	add.s64 	%rd244, %rd238, 32;
	// begin inline asm
	cvta.to.global.u64 %rd243, %rd244;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r303,%r304,%r305,%r306}, [%rd243];
	// end inline asm
	mov.b32 	%f1176, %r303;
	mov.b32 	%f1177, %r304;
	mov.b32 	%f1178, %r305;
	setp.leu.f32 	%p22, %f258, 0f00000000;
	@%p22 bra 	$L__BB3_36;

	mov.f32 	%f784, 0f3F800000;
	sub.f32 	%f785, %f784, %f258;
	mul.lo.s64 	%rd256, %rd15, 48;
	add.s64 	%rd257, %rd211, %rd256;
	add.s64 	%rd248, %rd257, 80;
	// begin inline asm
	cvta.to.global.u64 %rd247, %rd248;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r310,%r311,%r312,%r313}, [%rd247];
	// end inline asm
	mov.b32 	%f786, %r310;
	mov.b32 	%f787, %r311;
	mov.b32 	%f788, %r312;
	mul.f32 	%f789, %f258, %f786;
	mul.f32 	%f790, %f258, %f787;
	mul.f32 	%f791, %f258, %f788;
	fma.rn.f32 	%f1182, %f785, %f1182, %f789;
	fma.rn.f32 	%f1183, %f785, %f1183, %f790;
	fma.rn.f32 	%f1184, %f785, %f1184, %f791;
	add.s64 	%rd251, %rd257, 96;
	// begin inline asm
	cvta.to.global.u64 %rd250, %rd251;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r314,%r315,%r316,%r317}, [%rd250];
	// end inline asm
	mov.b32 	%f792, %r314;
	mov.b32 	%f793, %r315;
	mov.b32 	%f794, %r316;
	mul.f32 	%f795, %f258, %f792;
	mul.f32 	%f796, %f258, %f793;
	mul.f32 	%f797, %f258, %f794;
	fma.rn.f32 	%f1179, %f785, %f1179, %f795;
	fma.rn.f32 	%f1180, %f785, %f1180, %f796;
	fma.rn.f32 	%f1181, %f785, %f1181, %f797;
	add.s64 	%rd254, %rd257, 112;
	// begin inline asm
	cvta.to.global.u64 %rd253, %rd254;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r318,%r319,%r320,%r321}, [%rd253];
	// end inline asm
	mov.b32 	%f798, %r318;
	mov.b32 	%f799, %r319;
	mov.b32 	%f800, %r320;
	mul.f32 	%f801, %f258, %f798;
	mul.f32 	%f802, %f258, %f799;
	mul.f32 	%f803, %f258, %f800;
	fma.rn.f32 	%f1176, %f785, %f1176, %f801;
	fma.rn.f32 	%f1177, %f785, %f1177, %f802;
	fma.rn.f32 	%f1178, %f785, %f1178, %f803;
	bra.uni 	$L__BB3_36;

$L__BB3_25:
	mov.f32 	%f1185, 0f00000000;
	mov.f32 	%f1187, 0f3F800000;
	setp.eq.s32 	%p18, %r174, 4;
	@%p18 bra 	$L__BB3_28;

	setp.ne.s32 	%p19, %r174, 1;
	mov.f32 	%f1186, %f1185;
	mov.f32 	%f1188, %f1185;
	mov.f32 	%f1189, %f1187;
	mov.f32 	%f1190, %f1185;
	mov.f32 	%f1191, %f1187;
	mov.f32 	%f1192, %f1185;
	mov.f32 	%f1193, %f1185;
	@%p19 bra 	$L__BB3_37;

	// begin inline asm
	call (%rd141), _optix_get_static_transform_from_handle, (%rd139);
	// end inline asm
	add.s64 	%rd277, %rd141, 64;
	bra.uni 	$L__BB3_29;

$L__BB3_31:
	// begin inline asm
	call (%rd154), _optix_get_srt_motion_transform_from_handle, (%rd139);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd156, %rd154;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r188,%r189,%r190,%r191}, [%rd156];
	// end inline asm
	add.s64 	%rd160, %rd154, 16;
	// begin inline asm
	cvta.to.global.u64 %rd159, %rd160;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r192,%r193,%r194,%r195}, [%rd159];
	// end inline asm
	add.s64 	%rd163, %rd154, 32;
	// begin inline asm
	cvta.to.global.u64 %rd162, %rd163;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r196,%r197,%r198,%r199}, [%rd162];
	// end inline asm
	add.s64 	%rd166, %rd154, 48;
	// begin inline asm
	cvta.to.global.u64 %rd165, %rd166;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r200,%r201,%r202,%r203}, [%rd165];
	// end inline asm
	add.s64 	%rd169, %rd154, 64;
	// begin inline asm
	cvta.to.global.u64 %rd168, %rd169;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r204,%r205,%r206,%r207}, [%rd168];
	// end inline asm
	add.s64 	%rd172, %rd154, 80;
	// begin inline asm
	cvta.to.global.u64 %rd171, %rd172;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r208,%r209,%r210,%r211}, [%rd171];
	// end inline asm
	add.s64 	%rd175, %rd154, 96;
	// begin inline asm
	cvta.to.global.u64 %rd174, %rd175;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r212,%r213,%r214,%r215}, [%rd174];
	// end inline asm
	add.s64 	%rd178, %rd154, 112;
	// begin inline asm
	cvta.to.global.u64 %rd177, %rd178;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r216,%r217,%r218,%r219}, [%rd177];
	// end inline asm
	add.s64 	%rd181, %rd154, 128;
	// begin inline asm
	cvta.to.global.u64 %rd180, %rd181;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r220,%r221,%r222,%r223}, [%rd180];
	// end inline asm
	add.s64 	%rd184, %rd154, 144;
	// begin inline asm
	cvta.to.global.u64 %rd183, %rd184;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r224,%r225,%r226,%r227}, [%rd183];
	// end inline asm
	mov.b32 	%f681, %r191;
	mov.b32 	%f682, %r192;
	and.b32  	%r244, %r190, 65535;
	add.s32 	%r245, %r244, -1;
	cvt.rn.f32.s32 	%f683, %r245;
	sub.f32 	%f684, %f669, %f681;
	mul.f32 	%f685, %f684, %f683;
	sub.f32 	%f686, %f682, %f681;
	div.rn.f32 	%f687, %f685, %f686;
	min.f32 	%f688, %f683, %f687;
	mov.f32 	%f689, 0f00000000;
	max.f32 	%f690, %f689, %f688;
	cvt.rmi.f32.f32 	%f691, %f690;
	sub.f32 	%f218, %f690, %f691;
	cvt.rzi.s32.f32 	%r246, %f691;
	mul.wide.s32 	%rd198, %r246, 64;
	add.s64 	%rd187, %rd163, %rd198;
	// begin inline asm
	cvta.to.global.u64 %rd186, %rd187;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r228,%r229,%r230,%r231}, [%rd186];
	// end inline asm
	mov.b32 	%f1166, %r228;
	mov.b32 	%f1167, %r229;
	mov.b32 	%f1168, %r230;
	add.s64 	%rd190, %rd187, 16;
	// begin inline asm
	cvta.to.global.u64 %rd189, %rd190;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r232,%r233,%r234,%r235}, [%rd189];
	// end inline asm
	mov.b32 	%f1169, %r232;
	mov.b32 	%f1170, %r233;
	mov.b32 	%f1171, %r235;
	add.s64 	%rd193, %rd187, 32;
	// begin inline asm
	cvta.to.global.u64 %rd192, %rd193;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r236,%r237,%r238,%r239}, [%rd192];
	// end inline asm
	mov.b32 	%f1172, %r237;
	mov.b32 	%f1173, %r238;
	mov.b32 	%f1174, %r239;
	add.s64 	%rd196, %rd187, 48;
	// begin inline asm
	cvta.to.global.u64 %rd195, %rd196;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r240,%r241,%r242,%r243}, [%rd195];
	// end inline asm
	mov.b32 	%f1175, %r240;
	setp.leu.f32 	%p21, %f218, 0f00000000;
	@%p21 bra 	$L__BB3_33;

	mov.f32 	%f692, 0f3F800000;
	sub.f32 	%f693, %f692, %f218;
	add.s64 	%rd200, %rd187, 64;
	// begin inline asm
	cvta.to.global.u64 %rd199, %rd200;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r247,%r248,%r249,%r250}, [%rd199];
	// end inline asm
	mov.b32 	%f694, %r247;
	mov.b32 	%f695, %r248;
	mov.b32 	%f696, %r249;
	mul.f32 	%f697, %f218, %f694;
	mul.f32 	%f698, %f218, %f695;
	mul.f32 	%f699, %f218, %f696;
	fma.rn.f32 	%f1166, %f693, %f1166, %f697;
	fma.rn.f32 	%f1167, %f693, %f1167, %f698;
	fma.rn.f32 	%f1168, %f693, %f1168, %f699;
	add.s64 	%rd203, %rd187, 80;
	// begin inline asm
	cvta.to.global.u64 %rd202, %rd203;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r251,%r252,%r253,%r254}, [%rd202];
	// end inline asm
	mov.b32 	%f700, %r251;
	mov.b32 	%f701, %r252;
	mov.b32 	%f702, %r254;
	mul.f32 	%f703, %f218, %f700;
	mul.f32 	%f704, %f218, %f701;
	mul.f32 	%f705, %f218, %f702;
	fma.rn.f32 	%f1169, %f693, %f1169, %f703;
	fma.rn.f32 	%f1170, %f693, %f1170, %f704;
	fma.rn.f32 	%f1171, %f693, %f1171, %f705;
	add.s64 	%rd206, %rd187, 96;
	// begin inline asm
	cvta.to.global.u64 %rd205, %rd206;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r255,%r256,%r257,%r258}, [%rd205];
	// end inline asm
	mov.b32 	%f706, %r256;
	mov.b32 	%f707, %r257;
	mov.b32 	%f708, %r258;
	mul.f32 	%f709, %f218, %f706;
	mul.f32 	%f710, %f218, %f707;
	mul.f32 	%f711, %f218, %f708;
	fma.rn.f32 	%f712, %f693, %f1172, %f709;
	fma.rn.f32 	%f713, %f693, %f1173, %f710;
	fma.rn.f32 	%f714, %f693, %f1174, %f711;
	add.s64 	%rd209, %rd187, 112;
	// begin inline asm
	cvta.to.global.u64 %rd208, %rd209;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r259,%r260,%r261,%r262}, [%rd208];
	// end inline asm
	mov.b32 	%f715, %r259;
	mul.f32 	%f716, %f218, %f715;
	fma.rn.f32 	%f717, %f693, %f1175, %f716;
	mul.f32 	%f718, %f713, %f713;
	fma.rn.f32 	%f719, %f712, %f712, %f718;
	fma.rn.f32 	%f720, %f714, %f714, %f719;
	fma.rn.f32 	%f721, %f717, %f717, %f720;
	sqrt.rn.f32 	%f722, %f721;
	rcp.rn.f32 	%f723, %f722;
	mul.f32 	%f1172, %f712, %f723;
	mul.f32 	%f1173, %f713, %f723;
	mul.f32 	%f1174, %f714, %f723;
	mul.f32 	%f1175, %f723, %f717;

$L__BB3_33:
	mul.f32 	%f724, %f1173, %f1173;
	fma.rn.f32 	%f725, %f1172, %f1172, %f724;
	fma.rn.f32 	%f726, %f1174, %f1174, %f725;
	fma.rn.f32 	%f727, %f1175, %f1175, %f726;
	rcp.rn.f32 	%f728, %f727;
	mul.f32 	%f729, %f1172, %f728;
	mul.f32 	%f730, %f1173, %f728;
	mul.f32 	%f731, %f1174, %f728;
	mul.f32 	%f732, %f1175, %f728;
	mul.f32 	%f733, %f1172, %f729;
	mul.f32 	%f734, %f1173, %f730;
	mul.f32 	%f735, %f1174, %f731;
	mul.f32 	%f736, %f1172, %f730;
	mul.f32 	%f737, %f1174, %f732;
	mul.f32 	%f738, %f1172, %f731;
	mul.f32 	%f739, %f1173, %f732;
	mul.f32 	%f740, %f1173, %f731;
	mul.f32 	%f741, %f1172, %f732;
	sub.f32 	%f742, %f733, %f734;
	sub.f32 	%f743, %f742, %f735;
	fma.rn.f32 	%f744, %f1175, %f732, %f743;
	sub.f32 	%f745, %f736, %f737;
	add.f32 	%f746, %f745, %f745;
	add.f32 	%f747, %f738, %f739;
	add.f32 	%f748, %f747, %f747;
	add.f32 	%f749, %f736, %f737;
	add.f32 	%f750, %f749, %f749;
	sub.f32 	%f751, %f734, %f733;
	sub.f32 	%f752, %f751, %f735;
	fma.rn.f32 	%f753, %f1175, %f732, %f752;
	sub.f32 	%f754, %f740, %f741;
	add.f32 	%f755, %f754, %f754;
	sub.f32 	%f756, %f738, %f739;
	add.f32 	%f757, %f756, %f756;
	add.f32 	%f758, %f740, %f741;
	add.f32 	%f759, %f758, %f758;
	neg.f32 	%f760, %f733;
	sub.f32 	%f761, %f760, %f734;
	add.f32 	%f762, %f735, %f761;
	fma.rn.f32 	%f763, %f1175, %f732, %f762;
	mul.f32 	%f764, %f1168, %f744;
	fma.rn.f32 	%f765, %f1170, %f746, %f764;
	fma.rn.f32 	%f1184, %f1171, %f748, %f765;
	mul.f32 	%f766, %f1170, %f753;
	fma.rn.f32 	%f767, %f1168, %f750, %f766;
	fma.rn.f32 	%f1181, %f1171, %f755, %f767;
	mul.f32 	%f768, %f1170, %f759;
	fma.rn.f32 	%f769, %f1168, %f757, %f768;
	fma.rn.f32 	%f1178, %f1171, %f763, %f769;
	mul.f32 	%f770, %f1167, %f744;
	fma.rn.f32 	%f1183, %f1169, %f746, %f770;
	mul.f32 	%f771, %f1169, %f753;
	fma.rn.f32 	%f1180, %f1167, %f750, %f771;
	mul.f32 	%f772, %f1169, %f759;
	fma.rn.f32 	%f1177, %f1167, %f757, %f772;
	mul.f32 	%f1182, %f1166, %f744;
	mul.f32 	%f1179, %f1166, %f750;
	mul.f32 	%f1176, %f1166, %f757;

$L__BB3_36:
	mul.f32 	%f804, %f1177, %f1181;
	mul.f32 	%f805, %f1178, %f1180;
	sub.f32 	%f806, %f805, %f804;
	mul.f32 	%f807, %f1182, %f806;
	mul.f32 	%f808, %f1176, %f1181;
	mul.f32 	%f809, %f1178, %f1179;
	sub.f32 	%f810, %f809, %f808;
	mul.f32 	%f811, %f810, %f1183;
	sub.f32 	%f812, %f807, %f811;
	mul.f32 	%f813, %f1176, %f1180;
	mul.f32 	%f814, %f1177, %f1179;
	sub.f32 	%f815, %f814, %f813;
	fma.rn.f32 	%f816, %f815, %f1184, %f812;
	rcp.rn.f32 	%f817, %f816;
	mul.f32 	%f1191, %f806, %f817;
	mul.f32 	%f818, %f1178, %f1183;
	mul.f32 	%f819, %f1177, %f1184;
	sub.f32 	%f820, %f819, %f818;
	mul.f32 	%f1192, %f820, %f817;
	mul.f32 	%f821, %f1180, %f1184;
	mul.f32 	%f822, %f1181, %f1183;
	sub.f32 	%f823, %f822, %f821;
	mul.f32 	%f1193, %f823, %f817;
	sub.f32 	%f824, %f808, %f809;
	mul.f32 	%f1188, %f824, %f817;
	mul.f32 	%f825, %f1176, %f1184;
	mul.f32 	%f826, %f1178, %f1182;
	sub.f32 	%f827, %f826, %f825;
	mul.f32 	%f1189, %f827, %f817;
	mul.f32 	%f828, %f1181, %f1182;
	mul.f32 	%f829, %f1179, %f1184;
	sub.f32 	%f830, %f829, %f828;
	mul.f32 	%f1190, %f830, %f817;
	mul.f32 	%f1185, %f815, %f817;
	mul.f32 	%f831, %f1177, %f1182;
	mul.f32 	%f832, %f1176, %f1183;
	sub.f32 	%f833, %f832, %f831;
	mul.f32 	%f1186, %f833, %f817;
	mul.f32 	%f834, %f1179, %f1183;
	mul.f32 	%f835, %f1180, %f1182;
	sub.f32 	%f836, %f835, %f834;
	mul.f32 	%f1187, %f836, %f817;
	bra.uni 	$L__BB3_37;

$L__BB3_28:
	// begin inline asm
	call (%rd277), _optix_get_instance_inverse_transform_from_handle, (%rd139);
	// end inline asm

$L__BB3_29:
	// begin inline asm
	cvta.to.global.u64 %rd145, %rd277;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r176,%r177,%r178,%r179}, [%rd145];
	// end inline asm
	mov.b32 	%f1191, %r176;
	mov.b32 	%f1192, %r177;
	mov.b32 	%f1193, %r178;
	add.s64 	%rd149, %rd277, 16;
	// begin inline asm
	cvta.to.global.u64 %rd148, %rd149;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r180,%r181,%r182,%r183}, [%rd148];
	// end inline asm
	mov.b32 	%f1188, %r180;
	mov.b32 	%f1189, %r181;
	mov.b32 	%f1190, %r182;
	add.s64 	%rd152, %rd277, 32;
	// begin inline asm
	cvta.to.global.u64 %rd151, %rd152;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r184,%r185,%r186,%r187}, [%rd151];
	// end inline asm
	mov.b32 	%f1185, %r184;
	mov.b32 	%f1186, %r185;
	mov.b32 	%f1187, %r186;

$L__BB3_37:
	setp.eq.s32 	%p23, %r375, 0;
	@%p23 bra 	$L__BB3_39;

	mul.f32 	%f837, %f1162, %f1192;
	fma.rn.f32 	%f838, %f1159, %f1191, %f837;
	fma.rn.f32 	%f304, %f1165, %f1193, %f838;
	mul.f32 	%f839, %f1161, %f1192;
	fma.rn.f32 	%f840, %f1158, %f1191, %f839;
	fma.rn.f32 	%f305, %f1164, %f1193, %f840;
	mul.f32 	%f841, %f1160, %f1192;
	fma.rn.f32 	%f842, %f1157, %f1191, %f841;
	fma.rn.f32 	%f1193, %f1163, %f1193, %f842;
	mul.f32 	%f843, %f1162, %f1189;
	fma.rn.f32 	%f844, %f1159, %f1188, %f843;
	fma.rn.f32 	%f307, %f1165, %f1190, %f844;
	mul.f32 	%f845, %f1161, %f1189;
	fma.rn.f32 	%f846, %f1158, %f1188, %f845;
	fma.rn.f32 	%f308, %f1164, %f1190, %f846;
	mul.f32 	%f847, %f1160, %f1189;
	fma.rn.f32 	%f848, %f1157, %f1188, %f847;
	fma.rn.f32 	%f1190, %f1163, %f1190, %f848;
	mul.f32 	%f849, %f1162, %f1186;
	fma.rn.f32 	%f850, %f1159, %f1185, %f849;
	fma.rn.f32 	%f310, %f1165, %f1187, %f850;
	mul.f32 	%f851, %f1161, %f1186;
	fma.rn.f32 	%f852, %f1158, %f1185, %f851;
	fma.rn.f32 	%f311, %f1164, %f1187, %f852;
	mul.f32 	%f853, %f1160, %f1186;
	fma.rn.f32 	%f854, %f1157, %f1185, %f853;
	fma.rn.f32 	%f1187, %f1163, %f1187, %f854;
	mov.f32 	%f1185, %f310;
	mov.f32 	%f1186, %f311;
	mov.f32 	%f1188, %f307;
	mov.f32 	%f1189, %f308;
	mov.f32 	%f1191, %f304;
	mov.f32 	%f1192, %f305;

$L__BB3_39:
	add.s32 	%r375, %r375, 1;
	setp.lt.u32 	%p24, %r375, %r171;
	mov.f32 	%f1157, %f1193;
	mov.f32 	%f1158, %f1192;
	mov.f32 	%f1159, %f1191;
	mov.f32 	%f1160, %f1190;
	mov.f32 	%f1161, %f1189;
	mov.f32 	%f1162, %f1188;
	mov.f32 	%f1163, %f1187;
	mov.f32 	%f1164, %f1186;
	mov.f32 	%f1165, %f1185;
	@%p24 bra 	$L__BB3_24;

$L__BB3_40:
	mul.f32 	%f855, %f1213, %f1192;
	fma.rn.f32 	%f856, %f1212, %f1191, %f855;
	mul.f32 	%f857, %f1213, %f1189;
	fma.rn.f32 	%f858, %f1212, %f1188, %f857;
	mul.f32 	%f859, %f1213, %f1186;
	fma.rn.f32 	%f860, %f1212, %f1185, %f859;
	fma.rn.f32 	%f1214, %f668, %f1187, %f860;
	fma.rn.f32 	%f1213, %f668, %f1190, %f858;
	fma.rn.f32 	%f1212, %f668, %f1193, %f856;
	bra.uni 	$L__BB3_42;

$L__BB3_41:
	mov.f32 	%f1214, %f668;

$L__BB3_42:
	// begin inline asm
	call (%f861), _optix_get_ray_tmin, ();
	// end inline asm
	// begin inline asm
	call (%f862), _optix_get_ray_tmax, ();
	// end inline asm
	sub.f32 	%f340, %f862, %f861;
	fma.rn.f32 	%f864, %f1212, %f861, %f1154;
	fma.rn.f32 	%f865, %f1213, %f861, %f1155;
	fma.rn.f32 	%f866, %f1214, %f861, %f1156;
	ld.v4.f32 	{%f867, %f868, %f869, %f870}, [%rd1+48];
	mul.f32 	%f875, %f867, %f864;
	fma.rn.f32 	%f876, %f868, %f865, %f875;
	fma.rn.f32 	%f877, %f869, %f866, %f876;
	mov.f32 	%f878, 0f3F800000;
	fma.rn.f32 	%f341, %f870, %f878, %f877;
	ld.v4.f32 	{%f879, %f880, %f881, %f882}, [%rd1+64];
	mul.f32 	%f887, %f879, %f864;
	fma.rn.f32 	%f888, %f880, %f865, %f887;
	fma.rn.f32 	%f889, %f881, %f866, %f888;
	fma.rn.f32 	%f342, %f882, %f878, %f889;
	ld.v4.f32 	{%f890, %f891, %f892, %f893}, [%rd1+80];
	mul.f32 	%f898, %f890, %f864;
	fma.rn.f32 	%f899, %f891, %f865, %f898;
	fma.rn.f32 	%f900, %f892, %f866, %f899;
	fma.rn.f32 	%f343, %f893, %f878, %f900;
	mul.f32 	%f901, %f867, %f1212;
	fma.rn.f32 	%f902, %f868, %f1213, %f901;
	fma.rn.f32 	%f903, %f869, %f1214, %f902;
	mov.f32 	%f1236, 0f00000000;
	fma.rn.f32 	%f344, %f870, %f1236, %f903;
	mul.f32 	%f905, %f879, %f1212;
	fma.rn.f32 	%f906, %f880, %f1213, %f905;
	fma.rn.f32 	%f907, %f881, %f1214, %f906;
	fma.rn.f32 	%f345, %f882, %f1236, %f907;
	mul.f32 	%f908, %f890, %f1212;
	fma.rn.f32 	%f909, %f891, %f1213, %f908;
	fma.rn.f32 	%f910, %f892, %f1214, %f909;
	fma.rn.f32 	%f346, %f893, %f1236, %f910;
	ld.v2.u32 	{%r322, %r323}, [%rd1+8];
	add.s32 	%r324, %r322, -1;
	rem.u32 	%r12, %r1, %r324;
	sub.s32 	%r325, %r1, %r12;
	add.s32 	%r326, %r323, -1;
	div.u32 	%r327, %r325, %r326;
	rem.u32 	%r13, %r327, %r326;
	mul.lo.s32 	%r328, %r13, %r324;
	sub.s32 	%r329, %r325, %r328;
	mul.lo.s32 	%r330, %r326, %r324;
	div.u32 	%r14, %r329, %r330;
	cvt.rn.f32.u32 	%f347, %r12;
	cvt.rn.f32.u32 	%f348, %r13;
	cvt.rn.f32.u32 	%f349, %r14;
	add.f32 	%f911, %f347, 0f3F800000;
	add.f32 	%f912, %f348, 0f3F800000;
	ld.v2.f32 	{%f913, %f914}, [%rd1+24];
	ld.f32 	%f915, [%rd1+20];
	mul.f32 	%f916, %f915, %f347;
	mul.f32 	%f917, %f913, %f348;
	mul.f32 	%f918, %f915, %f911;
	mul.f32 	%f919, %f913, %f912;
	rcp.rn.f32 	%f920, %f344;
	rcp.rn.f32 	%f921, %f345;
	setp.ltu.f32 	%p26, %f920, 0f00000000;
	selp.f32 	%f922, %f918, %f916, %p26;
	sub.f32 	%f923, %f922, %f341;
	mul.f32 	%f1218, %f920, %f923;
	selp.f32 	%f924, %f916, %f918, %p26;
	sub.f32 	%f925, %f924, %f341;
	mul.f32 	%f1219, %f920, %f925;
	setp.ltu.f32 	%p27, %f921, 0f00000000;
	selp.f32 	%f926, %f919, %f917, %p27;
	sub.f32 	%f927, %f926, %f342;
	mul.f32 	%f354, %f921, %f927;
	selp.f32 	%f928, %f917, %f919, %p27;
	sub.f32 	%f929, %f928, %f342;
	mul.f32 	%f355, %f921, %f929;
	setp.gt.f32 	%p28, %f1218, %f355;
	setp.gt.f32 	%p29, %f354, %f1219;
	or.pred  	%p30, %p28, %p29;
	mov.pred 	%p104, -1;
	@%p30 bra 	$L__BB3_56;

	setp.gt.f32 	%p31, %f354, %f1218;
	@%p31 bra 	$L__BB3_45;

	abs.f32 	%f930, %f1218;
	setp.lt.f32 	%p32, %f930, 0f7F800000;
	@%p32 bra 	$L__BB3_46;

$L__BB3_45:
	mov.f32 	%f1218, %f354;

$L__BB3_46:
	setp.lt.f32 	%p33, %f355, %f1219;
	@%p33 bra 	$L__BB3_48;

	abs.f32 	%f931, %f1219;
	setp.lt.f32 	%p34, %f931, 0f7F800000;
	@%p34 bra 	$L__BB3_49;

$L__BB3_48:
	mov.f32 	%f1219, %f355;

$L__BB3_49:
	mul.f32 	%f932, %f914, %f349;
	add.f32 	%f933, %f349, 0f3F800000;
	mul.f32 	%f934, %f914, %f933;
	rcp.rn.f32 	%f935, %f346;
	setp.ltu.f32 	%p36, %f935, 0f00000000;
	selp.f32 	%f936, %f934, %f932, %p36;
	sub.f32 	%f937, %f936, %f343;
	mul.f32 	%f358, %f935, %f937;
	selp.f32 	%f938, %f932, %f934, %p36;
	sub.f32 	%f939, %f938, %f343;
	mul.f32 	%f359, %f935, %f939;
	setp.gt.f32 	%p37, %f1218, %f359;
	setp.gt.f32 	%p38, %f358, %f1219;
	or.pred  	%p39, %p37, %p38;
	@%p39 bra 	$L__BB3_56;

	setp.gt.f32 	%p40, %f358, %f1218;
	@%p40 bra 	$L__BB3_52;

	abs.f32 	%f940, %f1218;
	setp.lt.f32 	%p41, %f940, 0f7F800000;
	@%p41 bra 	$L__BB3_53;

$L__BB3_52:
	mov.f32 	%f1218, %f358;

$L__BB3_53:
	setp.lt.f32 	%p42, %f359, %f1219;
	@%p42 bra 	$L__BB3_55;

	abs.f32 	%f941, %f1219;
	setp.lt.f32 	%p44, %f941, 0f7F800000;
	mov.pred 	%p104, 0;
	@%p44 bra 	$L__BB3_56;

$L__BB3_55:
	mov.pred 	%p104, 0;
	mov.f32 	%f1219, %f359;

$L__BB3_56:
	@%p104 bra 	$L__BB3_79;

	max.f32 	%f363, %f1218, %f1236;
	setp.lt.f32 	%p46, %f1219, %f363;
	@%p46 bra 	$L__BB3_79;

	cvt.rn.f32.u32 	%f943, %r324;
	cvt.rn.f32.u32 	%f944, %r326;
	ld.u32 	%r333, [%rd1+16];
	add.s32 	%r334, %r333, -1;
	cvt.rn.f32.u32 	%f945, %r334;
	mul.f32 	%f946, %f341, %f943;
	fma.rn.f32 	%f948, %f1236, %f342, %f946;
	fma.rn.f32 	%f949, %f1236, %f343, %f948;
	neg.f32 	%f950, %f347;
	fma.rn.f32 	%f952, %f950, %f878, %f949;
	mul.f32 	%f953, %f341, 0f00000000;
	fma.rn.f32 	%f954, %f944, %f342, %f953;
	fma.rn.f32 	%f955, %f1236, %f343, %f954;
	neg.f32 	%f956, %f348;
	fma.rn.f32 	%f957, %f956, %f878, %f955;
	fma.rn.f32 	%f958, %f1236, %f342, %f953;
	fma.rn.f32 	%f959, %f945, %f343, %f958;
	neg.f32 	%f960, %f349;
	fma.rn.f32 	%f961, %f960, %f878, %f959;
	mul.f32 	%f962, %f344, %f943;
	fma.rn.f32 	%f963, %f1236, %f345, %f962;
	fma.rn.f32 	%f964, %f1236, %f346, %f963;
	fma.rn.f32 	%f965, %f950, %f1236, %f964;
	mul.f32 	%f966, %f344, 0f00000000;
	fma.rn.f32 	%f967, %f944, %f345, %f966;
	fma.rn.f32 	%f968, %f1236, %f346, %f967;
	fma.rn.f32 	%f969, %f956, %f1236, %f968;
	fma.rn.f32 	%f970, %f1236, %f345, %f966;
	fma.rn.f32 	%f971, %f945, %f346, %f970;
	fma.rn.f32 	%f972, %f960, %f1236, %f971;
	mul.lo.s32 	%r335, %r323, %r14;
	add.s32 	%r336, %r13, %r335;
	mul.lo.s32 	%r337, %r336, %r322;
	add.s32 	%r338, %r337, %r12;
	ld.u64 	%rd258, [%rd1+32];
	mul.wide.u32 	%rd259, %r338, 4;
	add.s64 	%rd260, %rd258, %rd259;
	add.s32 	%r339, %r12, 1;
	add.s32 	%r340, %r337, %r339;
	mul.wide.u32 	%rd261, %r340, 4;
	add.s64 	%rd262, %rd258, %rd261;
	add.s32 	%r341, %r13, 1;
	add.s32 	%r342, %r335, %r341;
	mul.lo.s32 	%r343, %r342, %r322;
	add.s32 	%r344, %r343, %r12;
	mul.wide.u32 	%rd263, %r344, 4;
	add.s64 	%rd264, %rd258, %rd263;
	add.s32 	%r345, %r343, %r339;
	mul.wide.u32 	%rd265, %r345, 4;
	add.s64 	%rd266, %rd258, %rd265;
	add.s32 	%r346, %r335, %r323;
	add.s32 	%r347, %r346, %r13;
	mul.lo.s32 	%r348, %r347, %r322;
	add.s32 	%r349, %r348, %r12;
	mul.wide.u32 	%rd267, %r349, 4;
	add.s64 	%rd268, %rd258, %rd267;
	add.s32 	%r350, %r348, %r339;
	mul.wide.u32 	%rd269, %r350, 4;
	add.s64 	%rd270, %rd258, %rd269;
	add.s32 	%r351, %r346, %r341;
	mul.lo.s32 	%r352, %r351, %r322;
	add.s32 	%r353, %r352, %r12;
	mul.wide.u32 	%rd271, %r353, 4;
	add.s64 	%rd272, %rd258, %rd271;
	add.s32 	%r354, %r352, %r339;
	mul.wide.u32 	%rd273, %r354, 4;
	add.s64 	%rd274, %rd258, %rd273;
	fma.rn.f32 	%f973, %f363, %f965, %f952;
	fma.rn.f32 	%f974, %f363, %f969, %f957;
	fma.rn.f32 	%f975, %f363, %f972, %f961;
	ld.f32 	%f976, [%rd270];
	ld.f32 	%f977, [%rd268];
	sub.f32 	%f978, %f976, %f977;
	ld.f32 	%f979, [%rd262];
	ld.f32 	%f980, [%rd260];
	sub.f32 	%f981, %f979, %f980;
	ld.f32 	%f982, [%rd264];
	sub.f32 	%f983, %f982, %f980;
	ld.f32 	%f984, [%rd266];
	sub.f32 	%f985, %f984, %f982;
	sub.f32 	%f986, %f985, %f981;
	sub.f32 	%f987, %f980, %f977;
	sub.f32 	%f988, %f981, %f978;
	ld.f32 	%f989, [%rd272];
	sub.f32 	%f990, %f989, %f977;
	sub.f32 	%f991, %f983, %f990;
	ld.f32 	%f992, [%rd274];
	sub.f32 	%f993, %f992, %f989;
	sub.f32 	%f994, %f993, %f978;
	sub.f32 	%f995, %f986, %f994;
	mul.f32 	%f996, %f973, %f974;
	mul.f32 	%f997, %f965, %f969;
	mul.f32 	%f998, %f974, %f965;
	fma.rn.f32 	%f999, %f973, %f969, %f998;
	neg.f32 	%f1000, %f981;
	fma.rn.f32 	%f1001, %f988, %f975, %f1000;
	neg.f32 	%f1002, %f983;
	fma.rn.f32 	%f1003, %f991, %f975, %f1002;
	neg.f32 	%f1004, %f986;
	fma.rn.f32 	%f1005, %f995, %f975, %f1004;
	neg.f32 	%f1006, %f980;
	fma.rn.f32 	%f1007, %f987, %f975, %f1006;
	mul.f32 	%f1008, %f996, %f1005;
	fma.rn.f32 	%f1009, %f974, %f1003, %f1008;
	fma.rn.f32 	%f1010, %f973, %f1001, %f1009;
	add.f32 	%f364, %f1007, %f1010;
	mul.f32 	%f1011, %f969, %f1003;
	fma.rn.f32 	%f1012, %f965, %f1001, %f1011;
	fma.rn.f32 	%f1013, %f999, %f1005, %f1012;
	mul.f32 	%f1014, %f995, %f996;
	fma.rn.f32 	%f1015, %f991, %f974, %f1014;
	fma.rn.f32 	%f1016, %f988, %f973, %f1015;
	add.f32 	%f1017, %f987, %f1016;
	fma.rn.f32 	%f365, %f972, %f1017, %f1013;
	mul.f32 	%f1018, %f995, %f999;
	fma.rn.f32 	%f1019, %f991, %f969, %f1018;
	fma.rn.f32 	%f1020, %f988, %f965, %f1019;
	mul.f32 	%f1021, %f972, %f1020;
	fma.rn.f32 	%f366, %f997, %f1005, %f1021;
	mul.f32 	%f1022, %f995, %f997;
	mul.f32 	%f367, %f972, %f1022;
	sub.f32 	%f368, %f1219, %f363;
	setp.neu.f32 	%p47, %f367, 0f00000000;
	@%p47 bra 	$L__BB3_66;
	bra.uni 	$L__BB3_59;

$L__BB3_66:
	mul.f32 	%f377, %f367, 0f40400000;
	setp.eq.f32 	%p72, %f377, 0f00000000;
	add.f32 	%f378, %f366, %f366;
	setp.eq.f32 	%p73, %f378, 0f00000000;
	and.pred  	%p74, %p72, %p73;
	mov.pred 	%p106, -1;
	mov.f32 	%f1222, %f1236;
	mov.f32 	%f1223, %f1236;
	@%p74 bra 	$L__BB3_69;

	neg.f32 	%f1039, %f365;
	div.rn.f32 	%f1222, %f1039, %f378;
	mul.f32 	%f1040, %f377, 0fC0800000;
	mul.f32 	%f1041, %f1040, %f365;
	fma.rn.f32 	%f380, %f378, %f378, %f1041;
	setp.neu.f32 	%p76, %f377, 0f00000000;
	setp.lt.f32 	%p77, %f380, 0f00000000;
	and.pred  	%p78, %p77, %p76;
	mov.f32 	%f1223, %f1222;
	@%p78 bra 	$L__BB3_69;

	mov.b32 	%r364, %f378;
	and.b32  	%r365, %r364, -2147483648;
	sqrt.rn.f32 	%f1042, %f380;
	mov.b32 	%r366, %f1042;
	and.b32  	%r367, %r366, 2147483647;
	or.b32  	%r368, %r367, %r365;
	mov.b32 	%f1043, %r368;
	add.f32 	%f1044, %f378, %f1043;
	mul.f32 	%f1045, %f1044, 0fBF000000;
	div.rn.f32 	%f1046, %f1045, %f377;
	div.rn.f32 	%f1047, %f365, %f1045;
	min.f32 	%f1048, %f1046, %f1047;
	max.f32 	%f1049, %f1046, %f1047;
	selp.f32 	%f1223, %f1222, %f1048, %p72;
	selp.f32 	%f1222, %f1222, %f1049, %p72;
	mov.pred 	%p106, 0;

$L__BB3_69:
	fma.rn.f32 	%f1051, %f367, %f1236, %f366;
	fma.rn.f32 	%f1052, %f1051, %f1236, %f365;
	fma.rn.f32 	%f1229, %f1052, %f1236, %f364;
	fma.rn.f32 	%f1053, %f367, %f368, %f366;
	fma.rn.f32 	%f1054, %f1053, %f368, %f365;
	fma.rn.f32 	%f1231, %f1054, %f368, %f364;
	mov.f32 	%f1228, %f1236;
	mov.f32 	%f1230, %f368;
	@%p106 bra 	$L__BB3_74;

	setp.ltu.f32 	%p81, %f1223, 0f00000000;
	mov.f32 	%f1228, 0f00000000;
	setp.gtu.f32 	%p82, %f1223, %f368;
	or.pred  	%p83, %p81, %p82;
	mov.f32 	%f1230, %f368;
	@%p83 bra 	$L__BB3_72;

	fma.rn.f32 	%f1056, %f367, %f1223, %f366;
	fma.rn.f32 	%f1057, %f1056, %f1223, %f365;
	fma.rn.f32 	%f1058, %f1057, %f1223, %f364;
	mul.f32 	%f1059, %f1229, %f1058;
	setp.le.f32 	%p84, %f1059, 0f00000000;
	selp.f32 	%f1228, 0f00000000, %f1223, %p84;
	selp.f32 	%f1229, %f1229, %f1058, %p84;
	selp.f32 	%f1230, %f1223, %f368, %p84;
	selp.f32 	%f1231, %f1058, %f1231, %p84;

$L__BB3_72:
	setp.gtu.f32 	%p85, %f1222, %f1230;
	setp.gtu.f32 	%p86, %f1228, %f1222;
	or.pred  	%p87, %p86, %p85;
	@%p87 bra 	$L__BB3_74;

	fma.rn.f32 	%f1060, %f367, %f1222, %f366;
	fma.rn.f32 	%f1061, %f1060, %f1222, %f365;
	fma.rn.f32 	%f1062, %f1061, %f1222, %f364;
	mul.f32 	%f1063, %f1229, %f1062;
	setp.le.f32 	%p88, %f1063, 0f00000000;
	selp.f32 	%f1228, %f1228, %f1222, %p88;
	selp.f32 	%f1229, %f1229, %f1062, %p88;
	selp.f32 	%f1230, %f1222, %f1230, %p88;
	selp.f32 	%f1231, %f1062, %f1231, %p88;

$L__BB3_74:
	mul.f32 	%f1065, %f1229, %f1231;
	setp.gt.f32 	%p90, %f1065, 0f00000000;
	mov.pred 	%p107, 0;
	@%p90 bra 	$L__BB3_77;

	mov.u32 	%r376, 0;
	mov.pred 	%p107, -1;

$L__BB3_76:
	sub.f32 	%f1066, %f1231, %f1229;
	div.rn.f32 	%f1067, %f1229, %f1066;
	sub.f32 	%f1068, %f1230, %f1228;
	mul.f32 	%f1069, %f1067, %f1068;
	sub.f32 	%f1236, %f1228, %f1069;
	fma.rn.f32 	%f1070, %f367, %f1236, %f366;
	fma.rn.f32 	%f1071, %f1070, %f1236, %f365;
	fma.rn.f32 	%f1072, %f1071, %f1236, %f364;
	mul.f32 	%f1073, %f1229, %f1072;
	setp.le.f32 	%p92, %f1073, 0f00000000;
	selp.f32 	%f1231, %f1072, %f1231, %p92;
	selp.f32 	%f1229, %f1229, %f1072, %p92;
	selp.f32 	%f1230, %f1236, %f1230, %p92;
	selp.f32 	%f1228, %f1228, %f1236, %p92;
	sub.f32 	%f1074, %f1230, %f1228;
	abs.f32 	%f1075, %f1074;
	setp.geu.f32 	%p93, %f1075, 0f3727C5AC;
	setp.lt.f32 	%p94, %f1075, 0f3727C5AC;
	add.s32 	%r370, %r376, 1;
	setp.lt.u32 	%p95, %r370, 51;
	selp.b32 	%r376, %r376, %r370, %p94;
	and.pred  	%p96, %p95, %p93;
	@%p96 bra 	$L__BB3_76;

$L__BB3_77:
	setp.ltu.f32 	%p97, %f1236, 0f00000000;
	not.pred 	%p98, %p107;
	or.pred  	%p99, %p97, %p98;
	setp.gtu.f32 	%p100, %f1236, %f368;
	or.pred  	%p101, %p100, %p99;
	add.f32 	%f413, %f363, %f1236;
	setp.geu.f32 	%p102, %f413, %f340;
	or.pred  	%p103, %p101, %p102;
	@%p103 bra 	$L__BB3_79;

	mov.u32 	%r372, 254;
	// begin inline asm
	call (%r371), _optix_report_intersection_0, (%f413, %r372);
	// end inline asm
	bra.uni 	$L__BB3_79;

$L__BB3_59:
	setp.eq.f32 	%p49, %f366, 0f00000000;
	setp.eq.f32 	%p50, %f365, 0f00000000;
	and.pred  	%p51, %p49, %p50;
	mov.pred 	%p105, 0;
	@%p51 bra 	$L__BB3_62;

	neg.f32 	%f1024, %f364;
	div.rn.f32 	%f1220, %f1024, %f365;
	mul.f32 	%f1025, %f366, 0fC0800000;
	mul.f32 	%f1026, %f364, %f1025;
	fma.rn.f32 	%f370, %f365, %f365, %f1026;
	setp.neu.f32 	%p53, %f366, 0f00000000;
	setp.lt.f32 	%p54, %f370, 0f00000000;
	and.pred  	%p55, %p54, %p53;
	mov.f32 	%f1221, %f1220;
	@%p55 bra 	$L__BB3_62;

	mov.b32 	%r355, %f365;
	and.b32  	%r356, %r355, -2147483648;
	sqrt.rn.f32 	%f1027, %f370;
	mov.b32 	%r357, %f1027;
	and.b32  	%r358, %r357, 2147483647;
	or.b32  	%r359, %r358, %r356;
	mov.b32 	%f1028, %r359;
	add.f32 	%f1029, %f365, %f1028;
	mul.f32 	%f1030, %f1029, 0fBF000000;
	div.rn.f32 	%f1031, %f1030, %f366;
	div.rn.f32 	%f1032, %f364, %f1030;
	min.f32 	%f1033, %f1031, %f1032;
	max.f32 	%f1034, %f1031, %f1032;
	selp.f32 	%f371, %f1220, %f1033, %p49;
	selp.f32 	%f1221, %f1220, %f1034, %p49;
	mov.pred 	%p105, -1;
	mov.f32 	%f1220, %f371;

$L__BB3_62:
	setp.ge.f32 	%p58, %f1220, 0f00000000;
	and.pred  	%p59, %p58, %p105;
	setp.le.f32 	%p60, %f1220, %f368;
	and.pred  	%p61, %p60, %p59;
	add.f32 	%f375, %f363, %f1220;
	setp.lt.f32 	%p62, %f375, %f340;
	and.pred  	%p63, %p61, %p62;
	@%p63 bra 	$L__BB3_65;
	bra.uni 	$L__BB3_63;

$L__BB3_65:
	mov.u32 	%r363, 254;
	// begin inline asm
	call (%r362), _optix_report_intersection_0, (%f375, %r363);
	// end inline asm
	bra.uni 	$L__BB3_79;

$L__BB3_63:
	setp.ltu.f32 	%p64, %f1221, 0f00000000;
	not.pred 	%p65, %p105;
	or.pred  	%p66, %p64, %p65;
	setp.gtu.f32 	%p67, %f1221, %f368;
	or.pred  	%p68, %p67, %p66;
	add.f32 	%f376, %f363, %f1221;
	setp.geu.f32 	%p69, %f376, %f340;
	or.pred  	%p70, %p68, %p69;
	@%p70 bra 	$L__BB3_79;

	mov.u32 	%r361, 254;
	// begin inline asm
	call (%r360), _optix_report_intersection_0, (%f376, %r361);
	// end inline asm

$L__BB3_79:
	ret;

}
	// .globl	__intersection__sphere
.visible .entry __intersection__sphere()
{
	.reg .pred 	%p<50>;
	.reg .f32 	%f<993>;
	.reg .b32 	%r<323>;
	.reg .b64 	%rd<259>;


	// begin inline asm
	call (%rd17), _optix_get_sbt_data_ptr_64, ();
	// end inline asm
	ld.u64 	%rd1, [%rd17+8];
	// begin inline asm
	call (%f930), _optix_get_world_ray_origin_x, ();
	// end inline asm
	// begin inline asm
	call (%f931), _optix_get_world_ray_origin_y, ();
	// end inline asm
	// begin inline asm
	call (%f932), _optix_get_world_ray_origin_z, ();
	// end inline asm
	// begin inline asm
	call (%r9), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p2, %r9, 0;
	@%p2 bra 	$L__BB4_21;

	// begin inline asm
	call (%r10), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f369), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p3, %r10, 0;
	@%p3 bra 	$L__BB4_19;

	mov.u32 	%r321, 0;

$L__BB4_3:
	.pragma "nounroll";
	// begin inline asm
	call (%rd18), _optix_get_transform_list_handle, (%r321);
	// end inline asm
	// begin inline asm
	call (%r13), _optix_get_transform_type_from_handle, (%rd18);
	// end inline asm
	or.b32  	%r14, %r13, 1;
	setp.eq.s32 	%p4, %r14, 3;
	@%p4 bra 	$L__BB4_9;
	bra.uni 	$L__BB4_4;

$L__BB4_9:
	setp.eq.s32 	%p7, %r13, 2;
	@%p7 bra 	$L__BB4_13;
	bra.uni 	$L__BB4_10;

$L__BB4_13:
	// begin inline asm
	call (%rd90), _optix_get_matrix_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd92, %rd90;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r102,%r103,%r104,%r105}, [%rd92];
	// end inline asm
	add.s64 	%rd96, %rd90, 16;
	// begin inline asm
	cvta.to.global.u64 %rd95, %rd96;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r106,%r107,%r108,%r109}, [%rd95];
	// end inline asm
	add.s64 	%rd99, %rd90, 32;
	// begin inline asm
	cvta.to.global.u64 %rd98, %rd99;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r110,%r111,%r112,%r113}, [%rd98];
	// end inline asm
	add.s64 	%rd102, %rd90, 48;
	// begin inline asm
	cvta.to.global.u64 %rd101, %rd102;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r114,%r115,%r116,%r117}, [%rd101];
	// end inline asm
	add.s64 	%rd105, %rd90, 64;
	// begin inline asm
	cvta.to.global.u64 %rd104, %rd105;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r118,%r119,%r120,%r121}, [%rd104];
	// end inline asm
	add.s64 	%rd108, %rd90, 80;
	// begin inline asm
	cvta.to.global.u64 %rd107, %rd108;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r122,%r123,%r124,%r125}, [%rd107];
	// end inline asm
	add.s64 	%rd111, %rd90, 96;
	// begin inline asm
	cvta.to.global.u64 %rd110, %rd111;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r126,%r127,%r128,%r129}, [%rd110];
	// end inline asm
	add.s64 	%rd114, %rd90, 112;
	// begin inline asm
	cvta.to.global.u64 %rd113, %rd114;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r130,%r131,%r132,%r133}, [%rd113];
	// end inline asm
	mov.b32 	%f497, %r105;
	mov.b32 	%f498, %r106;
	and.b32  	%r146, %r104, 65535;
	add.s32 	%r147, %r146, -1;
	cvt.rn.f32.s32 	%f499, %r147;
	sub.f32 	%f500, %f369, %f497;
	mul.f32 	%f501, %f500, %f499;
	sub.f32 	%f502, %f498, %f497;
	div.rn.f32 	%f503, %f501, %f502;
	min.f32 	%f504, %f499, %f503;
	mov.f32 	%f505, 0f00000000;
	max.f32 	%f506, %f505, %f504;
	cvt.rmi.f32.f32 	%f507, %f506;
	sub.f32 	%f90, %f506, %f507;
	cvt.rzi.s32.f32 	%r148, %f507;
	mul.wide.s32 	%rd125, %r148, 48;
	add.s64 	%rd117, %rd99, %rd125;
	// begin inline asm
	cvta.to.global.u64 %rd116, %rd117;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r134,%r135,%r136,%r137}, [%rd116];
	// end inline asm
	mov.b32 	%f885, %r134;
	mov.b32 	%f884, %r135;
	mov.b32 	%f883, %r136;
	mov.b32 	%f882, %r137;
	add.s64 	%rd120, %rd117, 16;
	// begin inline asm
	cvta.to.global.u64 %rd119, %rd120;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r138,%r139,%r140,%r141}, [%rd119];
	// end inline asm
	mov.b32 	%f889, %r138;
	mov.b32 	%f888, %r139;
	mov.b32 	%f887, %r140;
	mov.b32 	%f886, %r141;
	add.s64 	%rd123, %rd117, 32;
	// begin inline asm
	cvta.to.global.u64 %rd122, %rd123;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r142,%r143,%r144,%r145}, [%rd122];
	// end inline asm
	mov.b32 	%f893, %r142;
	mov.b32 	%f892, %r143;
	mov.b32 	%f891, %r144;
	mov.b32 	%f890, %r145;
	setp.leu.f32 	%p9, %f90, 0f00000000;
	@%p9 bra 	$L__BB4_15;

	cvt.rmi.f32.f32 	%f853, %f506;
	cvt.rzi.s32.f32 	%r320, %f853;
	cvt.s64.s32 	%rd256, %r320;
	mov.f32 	%f508, 0f3F800000;
	sub.f32 	%f509, %f508, %f90;
	mul.lo.s64 	%rd135, %rd256, 48;
	add.s64 	%rd136, %rd90, %rd135;
	add.s64 	%rd127, %rd136, 80;
	// begin inline asm
	cvta.to.global.u64 %rd126, %rd127;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r149,%r150,%r151,%r152}, [%rd126];
	// end inline asm
	mov.b32 	%f510, %r149;
	mov.b32 	%f511, %r150;
	mov.b32 	%f512, %r151;
	mov.b32 	%f513, %r152;
	mul.f32 	%f514, %f90, %f510;
	mul.f32 	%f515, %f90, %f511;
	mul.f32 	%f516, %f90, %f512;
	mul.f32 	%f517, %f90, %f513;
	fma.rn.f32 	%f885, %f509, %f885, %f514;
	fma.rn.f32 	%f884, %f509, %f884, %f515;
	fma.rn.f32 	%f883, %f509, %f883, %f516;
	fma.rn.f32 	%f882, %f509, %f882, %f517;
	add.s64 	%rd130, %rd136, 96;
	// begin inline asm
	cvta.to.global.u64 %rd129, %rd130;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r153,%r154,%r155,%r156}, [%rd129];
	// end inline asm
	mov.b32 	%f518, %r153;
	mov.b32 	%f519, %r154;
	mov.b32 	%f520, %r155;
	mov.b32 	%f521, %r156;
	mul.f32 	%f522, %f90, %f518;
	mul.f32 	%f523, %f90, %f519;
	mul.f32 	%f524, %f90, %f520;
	mul.f32 	%f525, %f90, %f521;
	fma.rn.f32 	%f889, %f509, %f889, %f522;
	fma.rn.f32 	%f888, %f509, %f888, %f523;
	fma.rn.f32 	%f887, %f509, %f887, %f524;
	fma.rn.f32 	%f886, %f509, %f886, %f525;
	add.s64 	%rd133, %rd136, 112;
	// begin inline asm
	cvta.to.global.u64 %rd132, %rd133;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r157,%r158,%r159,%r160}, [%rd132];
	// end inline asm
	mov.b32 	%f526, %r157;
	mov.b32 	%f527, %r158;
	mov.b32 	%f528, %r159;
	mov.b32 	%f529, %r160;
	mul.f32 	%f530, %f90, %f526;
	mul.f32 	%f531, %f90, %f527;
	mul.f32 	%f532, %f90, %f528;
	mul.f32 	%f533, %f90, %f529;
	fma.rn.f32 	%f893, %f509, %f893, %f530;
	fma.rn.f32 	%f892, %f509, %f892, %f531;
	fma.rn.f32 	%f891, %f509, %f891, %f532;
	fma.rn.f32 	%f890, %f509, %f890, %f533;
	bra.uni 	$L__BB4_15;

$L__BB4_4:
	mov.f32 	%f894, 0f00000000;
	mov.f32 	%f897, 0f3F800000;
	setp.eq.s32 	%p5, %r13, 4;
	@%p5 bra 	$L__BB4_7;

	setp.ne.s32 	%p6, %r13, 1;
	mov.f32 	%f895, %f894;
	mov.f32 	%f896, %f894;
	mov.f32 	%f898, %f894;
	mov.f32 	%f899, %f894;
	mov.f32 	%f900, %f897;
	mov.f32 	%f901, %f894;
	mov.f32 	%f902, %f894;
	mov.f32 	%f903, %f897;
	mov.f32 	%f904, %f894;
	mov.f32 	%f905, %f894;
	@%p6 bra 	$L__BB4_16;

	// begin inline asm
	call (%rd20), _optix_get_static_transform_from_handle, (%rd18);
	// end inline asm
	add.s64 	%rd257, %rd20, 64;
	bra.uni 	$L__BB4_8;

$L__BB4_10:
	// begin inline asm
	call (%rd33), _optix_get_srt_motion_transform_from_handle, (%rd18);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd35, %rd33;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r27,%r28,%r29,%r30}, [%rd35];
	// end inline asm
	add.s64 	%rd39, %rd33, 16;
	// begin inline asm
	cvta.to.global.u64 %rd38, %rd39;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r31,%r32,%r33,%r34}, [%rd38];
	// end inline asm
	add.s64 	%rd42, %rd33, 32;
	// begin inline asm
	cvta.to.global.u64 %rd41, %rd42;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r35,%r36,%r37,%r38}, [%rd41];
	// end inline asm
	add.s64 	%rd45, %rd33, 48;
	// begin inline asm
	cvta.to.global.u64 %rd44, %rd45;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r39,%r40,%r41,%r42}, [%rd44];
	// end inline asm
	add.s64 	%rd48, %rd33, 64;
	// begin inline asm
	cvta.to.global.u64 %rd47, %rd48;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r43,%r44,%r45,%r46}, [%rd47];
	// end inline asm
	add.s64 	%rd51, %rd33, 80;
	// begin inline asm
	cvta.to.global.u64 %rd50, %rd51;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r47,%r48,%r49,%r50}, [%rd50];
	// end inline asm
	add.s64 	%rd54, %rd33, 96;
	// begin inline asm
	cvta.to.global.u64 %rd53, %rd54;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r51,%r52,%r53,%r54}, [%rd53];
	// end inline asm
	add.s64 	%rd57, %rd33, 112;
	// begin inline asm
	cvta.to.global.u64 %rd56, %rd57;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r55,%r56,%r57,%r58}, [%rd56];
	// end inline asm
	add.s64 	%rd60, %rd33, 128;
	// begin inline asm
	cvta.to.global.u64 %rd59, %rd60;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r59,%r60,%r61,%r62}, [%rd59];
	// end inline asm
	add.s64 	%rd63, %rd33, 144;
	// begin inline asm
	cvta.to.global.u64 %rd62, %rd63;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r63,%r64,%r65,%r66}, [%rd62];
	// end inline asm
	mov.b32 	%f384, %r30;
	mov.b32 	%f385, %r31;
	and.b32  	%r83, %r29, 65535;
	add.s32 	%r84, %r83, -1;
	cvt.rn.f32.s32 	%f386, %r84;
	sub.f32 	%f387, %f369, %f384;
	mul.f32 	%f388, %f387, %f386;
	sub.f32 	%f389, %f385, %f384;
	div.rn.f32 	%f390, %f388, %f389;
	min.f32 	%f391, %f386, %f390;
	mov.f32 	%f392, 0f00000000;
	max.f32 	%f393, %f392, %f391;
	cvt.rmi.f32.f32 	%f394, %f393;
	sub.f32 	%f29, %f393, %f394;
	cvt.rzi.s32.f32 	%r85, %f394;
	mul.wide.s32 	%rd77, %r85, 64;
	add.s64 	%rd66, %rd42, %rd77;
	// begin inline asm
	cvta.to.global.u64 %rd65, %rd66;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r67,%r68,%r69,%r70}, [%rd65];
	// end inline asm
	mov.b32 	%f866, %r67;
	mov.b32 	%f867, %r68;
	mov.b32 	%f868, %r69;
	mov.b32 	%f869, %r70;
	add.s64 	%rd69, %rd66, 16;
	// begin inline asm
	cvta.to.global.u64 %rd68, %rd69;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r71,%r72,%r73,%r74}, [%rd68];
	// end inline asm
	mov.b32 	%f870, %r71;
	mov.b32 	%f871, %r72;
	mov.b32 	%f872, %r73;
	mov.b32 	%f873, %r74;
	add.s64 	%rd72, %rd66, 32;
	// begin inline asm
	cvta.to.global.u64 %rd71, %rd72;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r75,%r76,%r77,%r78}, [%rd71];
	// end inline asm
	mov.b32 	%f874, %r75;
	mov.b32 	%f875, %r76;
	mov.b32 	%f876, %r77;
	mov.b32 	%f877, %r78;
	add.s64 	%rd75, %rd66, 48;
	// begin inline asm
	cvta.to.global.u64 %rd74, %rd75;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r79,%r80,%r81,%r82}, [%rd74];
	// end inline asm
	mov.b32 	%f878, %r79;
	mov.b32 	%f879, %r80;
	mov.b32 	%f880, %r81;
	mov.b32 	%f881, %r82;
	setp.leu.f32 	%p8, %f29, 0f00000000;
	@%p8 bra 	$L__BB4_12;

	mov.f32 	%f395, 0f3F800000;
	sub.f32 	%f396, %f395, %f29;
	add.s64 	%rd79, %rd66, 64;
	// begin inline asm
	cvta.to.global.u64 %rd78, %rd79;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r86,%r87,%r88,%r89}, [%rd78];
	// end inline asm
	mov.b32 	%f397, %r86;
	mov.b32 	%f398, %r87;
	mov.b32 	%f399, %r88;
	mov.b32 	%f400, %r89;
	mul.f32 	%f401, %f29, %f397;
	mul.f32 	%f402, %f29, %f398;
	mul.f32 	%f403, %f29, %f399;
	mul.f32 	%f404, %f29, %f400;
	fma.rn.f32 	%f866, %f396, %f866, %f401;
	fma.rn.f32 	%f867, %f396, %f867, %f402;
	fma.rn.f32 	%f868, %f396, %f868, %f403;
	fma.rn.f32 	%f869, %f396, %f869, %f404;
	add.s64 	%rd82, %rd66, 80;
	// begin inline asm
	cvta.to.global.u64 %rd81, %rd82;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r90,%r91,%r92,%r93}, [%rd81];
	// end inline asm
	mov.b32 	%f405, %r90;
	mov.b32 	%f406, %r91;
	mov.b32 	%f407, %r92;
	mov.b32 	%f408, %r93;
	mul.f32 	%f409, %f29, %f405;
	mul.f32 	%f410, %f29, %f406;
	mul.f32 	%f411, %f29, %f407;
	mul.f32 	%f412, %f29, %f408;
	fma.rn.f32 	%f870, %f396, %f870, %f409;
	fma.rn.f32 	%f871, %f396, %f871, %f410;
	fma.rn.f32 	%f872, %f396, %f872, %f411;
	fma.rn.f32 	%f873, %f396, %f873, %f412;
	add.s64 	%rd85, %rd66, 96;
	// begin inline asm
	cvta.to.global.u64 %rd84, %rd85;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r94,%r95,%r96,%r97}, [%rd84];
	// end inline asm
	mov.b32 	%f413, %r94;
	mov.b32 	%f414, %r95;
	mov.b32 	%f415, %r96;
	mov.b32 	%f416, %r97;
	mul.f32 	%f417, %f29, %f413;
	mul.f32 	%f418, %f29, %f414;
	mul.f32 	%f419, %f29, %f415;
	mul.f32 	%f420, %f29, %f416;
	fma.rn.f32 	%f874, %f396, %f874, %f417;
	fma.rn.f32 	%f421, %f396, %f875, %f418;
	fma.rn.f32 	%f422, %f396, %f876, %f419;
	fma.rn.f32 	%f423, %f396, %f877, %f420;
	add.s64 	%rd88, %rd66, 112;
	// begin inline asm
	cvta.to.global.u64 %rd87, %rd88;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r98,%r99,%r100,%r101}, [%rd87];
	// end inline asm
	mov.b32 	%f424, %r98;
	mov.b32 	%f425, %r99;
	mov.b32 	%f426, %r100;
	mov.b32 	%f427, %r101;
	mul.f32 	%f428, %f29, %f424;
	mul.f32 	%f429, %f29, %f425;
	mul.f32 	%f430, %f29, %f426;
	mul.f32 	%f431, %f29, %f427;
	fma.rn.f32 	%f432, %f396, %f878, %f428;
	fma.rn.f32 	%f879, %f396, %f879, %f429;
	fma.rn.f32 	%f880, %f396, %f880, %f430;
	fma.rn.f32 	%f881, %f396, %f881, %f431;
	mul.f32 	%f433, %f422, %f422;
	fma.rn.f32 	%f434, %f421, %f421, %f433;
	fma.rn.f32 	%f435, %f423, %f423, %f434;
	fma.rn.f32 	%f436, %f432, %f432, %f435;
	sqrt.rn.f32 	%f437, %f436;
	rcp.rn.f32 	%f438, %f437;
	mul.f32 	%f875, %f421, %f438;
	mul.f32 	%f876, %f422, %f438;
	mul.f32 	%f877, %f423, %f438;
	mul.f32 	%f878, %f438, %f432;

$L__BB4_12:
	mul.f32 	%f439, %f876, %f876;
	fma.rn.f32 	%f440, %f875, %f875, %f439;
	fma.rn.f32 	%f441, %f877, %f877, %f440;
	fma.rn.f32 	%f442, %f878, %f878, %f441;
	rcp.rn.f32 	%f443, %f442;
	mul.f32 	%f444, %f875, %f443;
	mul.f32 	%f445, %f876, %f443;
	mul.f32 	%f446, %f877, %f443;
	mul.f32 	%f447, %f878, %f443;
	mul.f32 	%f448, %f875, %f444;
	mul.f32 	%f449, %f876, %f445;
	mul.f32 	%f450, %f877, %f446;
	mul.f32 	%f451, %f875, %f445;
	mul.f32 	%f452, %f877, %f447;
	mul.f32 	%f453, %f875, %f446;
	mul.f32 	%f454, %f876, %f447;
	mul.f32 	%f455, %f876, %f446;
	mul.f32 	%f456, %f875, %f447;
	sub.f32 	%f457, %f448, %f449;
	sub.f32 	%f458, %f457, %f450;
	fma.rn.f32 	%f459, %f878, %f447, %f458;
	sub.f32 	%f460, %f451, %f452;
	add.f32 	%f461, %f460, %f460;
	add.f32 	%f462, %f453, %f454;
	add.f32 	%f463, %f462, %f462;
	add.f32 	%f464, %f451, %f452;
	add.f32 	%f465, %f464, %f464;
	sub.f32 	%f466, %f449, %f448;
	sub.f32 	%f467, %f466, %f450;
	fma.rn.f32 	%f468, %f878, %f447, %f467;
	sub.f32 	%f469, %f455, %f456;
	add.f32 	%f470, %f469, %f469;
	sub.f32 	%f471, %f453, %f454;
	add.f32 	%f472, %f471, %f471;
	add.f32 	%f473, %f455, %f456;
	add.f32 	%f474, %f473, %f473;
	neg.f32 	%f475, %f448;
	sub.f32 	%f476, %f475, %f449;
	add.f32 	%f477, %f450, %f476;
	fma.rn.f32 	%f478, %f878, %f447, %f477;
	mul.f32 	%f479, %f869, %f459;
	fma.rn.f32 	%f480, %f872, %f461, %f479;
	fma.rn.f32 	%f481, %f874, %f463, %f480;
	add.f32 	%f882, %f879, %f481;
	mul.f32 	%f482, %f872, %f468;
	fma.rn.f32 	%f483, %f869, %f465, %f482;
	fma.rn.f32 	%f484, %f874, %f470, %f483;
	add.f32 	%f886, %f880, %f484;
	mul.f32 	%f485, %f872, %f474;
	fma.rn.f32 	%f486, %f869, %f472, %f485;
	fma.rn.f32 	%f487, %f874, %f478, %f486;
	add.f32 	%f890, %f881, %f487;
	mul.f32 	%f488, %f868, %f459;
	fma.rn.f32 	%f489, %f871, %f461, %f488;
	fma.rn.f32 	%f883, %f873, %f463, %f489;
	mul.f32 	%f490, %f871, %f468;
	fma.rn.f32 	%f491, %f868, %f465, %f490;
	fma.rn.f32 	%f887, %f873, %f470, %f491;
	mul.f32 	%f492, %f871, %f474;
	fma.rn.f32 	%f493, %f868, %f472, %f492;
	fma.rn.f32 	%f891, %f873, %f478, %f493;
	mul.f32 	%f494, %f867, %f459;
	fma.rn.f32 	%f884, %f870, %f461, %f494;
	mul.f32 	%f495, %f870, %f468;
	fma.rn.f32 	%f888, %f867, %f465, %f495;
	mul.f32 	%f496, %f870, %f474;
	fma.rn.f32 	%f892, %f867, %f472, %f496;
	mul.f32 	%f885, %f866, %f459;
	mul.f32 	%f889, %f866, %f465;
	mul.f32 	%f893, %f866, %f472;

$L__BB4_15:
	mul.f32 	%f534, %f887, %f892;
	mul.f32 	%f535, %f888, %f891;
	sub.f32 	%f536, %f535, %f534;
	mul.f32 	%f537, %f885, %f536;
	mul.f32 	%f538, %f887, %f893;
	mul.f32 	%f539, %f889, %f891;
	sub.f32 	%f540, %f539, %f538;
	mul.f32 	%f541, %f884, %f540;
	sub.f32 	%f542, %f537, %f541;
	mul.f32 	%f543, %f888, %f893;
	mul.f32 	%f544, %f889, %f892;
	sub.f32 	%f545, %f544, %f543;
	fma.rn.f32 	%f546, %f883, %f545, %f542;
	rcp.rn.f32 	%f547, %f546;
	mul.f32 	%f897, %f536, %f547;
	mul.f32 	%f548, %f884, %f891;
	mul.f32 	%f549, %f883, %f892;
	sub.f32 	%f550, %f549, %f548;
	mul.f32 	%f896, %f550, %f547;
	mul.f32 	%f551, %f883, %f888;
	mul.f32 	%f552, %f884, %f887;
	sub.f32 	%f553, %f552, %f551;
	mul.f32 	%f895, %f553, %f547;
	sub.f32 	%f554, %f538, %f539;
	mul.f32 	%f901, %f554, %f547;
	mul.f32 	%f555, %f883, %f893;
	mul.f32 	%f556, %f885, %f891;
	sub.f32 	%f557, %f556, %f555;
	mul.f32 	%f900, %f557, %f547;
	mul.f32 	%f558, %f885, %f887;
	mul.f32 	%f559, %f883, %f889;
	sub.f32 	%f560, %f559, %f558;
	mul.f32 	%f899, %f560, %f547;
	mul.f32 	%f905, %f545, %f547;
	mul.f32 	%f561, %f885, %f892;
	mul.f32 	%f562, %f884, %f893;
	sub.f32 	%f563, %f562, %f561;
	mul.f32 	%f904, %f563, %f547;
	mul.f32 	%f564, %f884, %f889;
	mul.f32 	%f565, %f885, %f888;
	sub.f32 	%f566, %f565, %f564;
	mul.f32 	%f903, %f566, %f547;
	mul.f32 	%f567, %f882, %f897;
	neg.f32 	%f568, %f567;
	mul.f32 	%f569, %f886, %f896;
	sub.f32 	%f570, %f568, %f569;
	mul.f32 	%f571, %f890, %f895;
	sub.f32 	%f894, %f570, %f571;
	mul.f32 	%f572, %f882, %f901;
	neg.f32 	%f573, %f572;
	mul.f32 	%f574, %f886, %f900;
	sub.f32 	%f575, %f573, %f574;
	mul.f32 	%f576, %f890, %f899;
	sub.f32 	%f898, %f575, %f576;
	mul.f32 	%f577, %f882, %f905;
	neg.f32 	%f578, %f577;
	mul.f32 	%f579, %f886, %f904;
	sub.f32 	%f580, %f578, %f579;
	mul.f32 	%f581, %f890, %f903;
	sub.f32 	%f902, %f580, %f581;
	bra.uni 	$L__BB4_16;

$L__BB4_7:
	// begin inline asm
	call (%rd257), _optix_get_instance_inverse_transform_from_handle, (%rd18);
	// end inline asm

$L__BB4_8:
	// begin inline asm
	cvta.to.global.u64 %rd24, %rd257;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r15,%r16,%r17,%r18}, [%rd24];
	// end inline asm
	mov.b32 	%f897, %r15;
	mov.b32 	%f896, %r16;
	mov.b32 	%f895, %r17;
	mov.b32 	%f894, %r18;
	add.s64 	%rd28, %rd257, 16;
	// begin inline asm
	cvta.to.global.u64 %rd27, %rd28;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r19,%r20,%r21,%r22}, [%rd27];
	// end inline asm
	mov.b32 	%f901, %r19;
	mov.b32 	%f900, %r20;
	mov.b32 	%f899, %r21;
	mov.b32 	%f898, %r22;
	add.s64 	%rd31, %rd257, 32;
	// begin inline asm
	cvta.to.global.u64 %rd30, %rd31;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r23,%r24,%r25,%r26}, [%rd30];
	// end inline asm
	mov.b32 	%f905, %r23;
	mov.b32 	%f904, %r24;
	mov.b32 	%f903, %r25;
	mov.b32 	%f902, %r26;

$L__BB4_16:
	setp.eq.s32 	%p10, %r321, 0;
	@%p10 bra 	$L__BB4_18;

	mul.f32 	%f582, %f862, %f897;
	fma.rn.f32 	%f583, %f858, %f896, %f582;
	fma.rn.f32 	%f151, %f854, %f895, %f583;
	mul.f32 	%f584, %f863, %f897;
	fma.rn.f32 	%f585, %f859, %f896, %f584;
	fma.rn.f32 	%f152, %f855, %f895, %f585;
	mul.f32 	%f586, %f864, %f897;
	fma.rn.f32 	%f587, %f860, %f896, %f586;
	fma.rn.f32 	%f153, %f856, %f895, %f587;
	mul.f32 	%f588, %f865, %f897;
	fma.rn.f32 	%f589, %f861, %f896, %f588;
	fma.rn.f32 	%f590, %f857, %f895, %f589;
	add.f32 	%f894, %f894, %f590;
	mul.f32 	%f591, %f862, %f901;
	fma.rn.f32 	%f592, %f858, %f900, %f591;
	fma.rn.f32 	%f155, %f854, %f899, %f592;
	mul.f32 	%f593, %f863, %f901;
	fma.rn.f32 	%f594, %f859, %f900, %f593;
	fma.rn.f32 	%f156, %f855, %f899, %f594;
	mul.f32 	%f595, %f864, %f901;
	fma.rn.f32 	%f596, %f860, %f900, %f595;
	fma.rn.f32 	%f157, %f856, %f899, %f596;
	mul.f32 	%f597, %f865, %f901;
	fma.rn.f32 	%f598, %f861, %f900, %f597;
	fma.rn.f32 	%f599, %f857, %f899, %f598;
	add.f32 	%f898, %f898, %f599;
	mul.f32 	%f600, %f862, %f905;
	fma.rn.f32 	%f601, %f858, %f904, %f600;
	fma.rn.f32 	%f159, %f854, %f903, %f601;
	mul.f32 	%f602, %f863, %f905;
	fma.rn.f32 	%f603, %f859, %f904, %f602;
	fma.rn.f32 	%f160, %f855, %f903, %f603;
	mul.f32 	%f604, %f864, %f905;
	fma.rn.f32 	%f605, %f860, %f904, %f604;
	fma.rn.f32 	%f161, %f856, %f903, %f605;
	mul.f32 	%f606, %f865, %f905;
	fma.rn.f32 	%f607, %f861, %f904, %f606;
	fma.rn.f32 	%f608, %f857, %f903, %f607;
	add.f32 	%f902, %f902, %f608;
	mov.f32 	%f895, %f153;
	mov.f32 	%f896, %f152;
	mov.f32 	%f897, %f151;
	mov.f32 	%f899, %f157;
	mov.f32 	%f900, %f156;
	mov.f32 	%f901, %f155;
	mov.f32 	%f903, %f161;
	mov.f32 	%f904, %f160;
	mov.f32 	%f905, %f159;

$L__BB4_18:
	add.s32 	%r321, %r321, 1;
	setp.lt.u32 	%p11, %r321, %r10;
	mov.f32 	%f854, %f905;
	mov.f32 	%f855, %f904;
	mov.f32 	%f856, %f903;
	mov.f32 	%f857, %f902;
	mov.f32 	%f858, %f901;
	mov.f32 	%f859, %f900;
	mov.f32 	%f860, %f899;
	mov.f32 	%f861, %f898;
	mov.f32 	%f862, %f897;
	mov.f32 	%f863, %f896;
	mov.f32 	%f864, %f895;
	mov.f32 	%f865, %f894;
	@%p11 bra 	$L__BB4_3;

$L__BB4_19:
	mul.f32 	%f609, %f930, %f897;
	fma.rn.f32 	%f610, %f931, %f896, %f609;
	fma.rn.f32 	%f611, %f932, %f895, %f610;
	mul.f32 	%f612, %f930, %f901;
	fma.rn.f32 	%f613, %f931, %f900, %f612;
	fma.rn.f32 	%f614, %f932, %f899, %f613;
	mul.f32 	%f615, %f930, %f905;
	fma.rn.f32 	%f616, %f931, %f904, %f615;
	fma.rn.f32 	%f617, %f932, %f903, %f616;
	add.f32 	%f932, %f902, %f617;
	add.f32 	%f931, %f898, %f614;
	add.f32 	%f930, %f894, %f611;

$L__BB4_21:
	// begin inline asm
	call (%f988), _optix_get_world_ray_direction_x, ();
	// end inline asm
	// begin inline asm
	call (%f989), _optix_get_world_ray_direction_y, ();
	// end inline asm
	// begin inline asm
	call (%f620), _optix_get_world_ray_direction_z, ();
	// end inline asm
	// begin inline asm
	call (%r161), _optix_get_transform_list_size, ();
	// end inline asm
	setp.eq.s32 	%p12, %r161, 0;
	@%p12 bra 	$L__BB4_41;

	// begin inline asm
	call (%r162), _optix_get_transform_list_size, ();
	// end inline asm
	// begin inline asm
	call (%f621), _optix_get_ray_time, ();
	// end inline asm
	setp.eq.s32 	%p13, %r162, 0;
	@%p13 bra 	$L__BB4_40;

	mov.u32 	%r322, 0;

$L__BB4_24:
	.pragma "nounroll";
	// begin inline asm
	call (%rd137), _optix_get_transform_list_handle, (%r322);
	// end inline asm
	// begin inline asm
	call (%r165), _optix_get_transform_type_from_handle, (%rd137);
	// end inline asm
	or.b32  	%r166, %r165, 1;
	setp.eq.s32 	%p14, %r166, 3;
	@%p14 bra 	$L__BB4_30;
	bra.uni 	$L__BB4_25;

$L__BB4_30:
	setp.eq.s32 	%p17, %r165, 2;
	@%p17 bra 	$L__BB4_34;
	bra.uni 	$L__BB4_31;

$L__BB4_34:
	// begin inline asm
	call (%rd209), _optix_get_matrix_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd211, %rd209;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r254,%r255,%r256,%r257}, [%rd211];
	// end inline asm
	add.s64 	%rd215, %rd209, 16;
	// begin inline asm
	cvta.to.global.u64 %rd214, %rd215;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r258,%r259,%r260,%r261}, [%rd214];
	// end inline asm
	add.s64 	%rd218, %rd209, 32;
	// begin inline asm
	cvta.to.global.u64 %rd217, %rd218;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r262,%r263,%r264,%r265}, [%rd217];
	// end inline asm
	add.s64 	%rd221, %rd209, 48;
	// begin inline asm
	cvta.to.global.u64 %rd220, %rd221;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r266,%r267,%r268,%r269}, [%rd220];
	// end inline asm
	add.s64 	%rd224, %rd209, 64;
	// begin inline asm
	cvta.to.global.u64 %rd223, %rd224;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r270,%r271,%r272,%r273}, [%rd223];
	// end inline asm
	add.s64 	%rd227, %rd209, 80;
	// begin inline asm
	cvta.to.global.u64 %rd226, %rd227;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r274,%r275,%r276,%r277}, [%rd226];
	// end inline asm
	add.s64 	%rd230, %rd209, 96;
	// begin inline asm
	cvta.to.global.u64 %rd229, %rd230;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r278,%r279,%r280,%r281}, [%rd229];
	// end inline asm
	add.s64 	%rd233, %rd209, 112;
	// begin inline asm
	cvta.to.global.u64 %rd232, %rd233;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r282,%r283,%r284,%r285}, [%rd232];
	// end inline asm
	mov.b32 	%f725, %r257;
	mov.b32 	%f726, %r258;
	and.b32  	%r298, %r256, 65535;
	add.s32 	%r299, %r298, -1;
	cvt.rn.f32.s32 	%f727, %r299;
	sub.f32 	%f728, %f621, %f725;
	mul.f32 	%f729, %f728, %f727;
	sub.f32 	%f730, %f726, %f725;
	div.rn.f32 	%f731, %f729, %f730;
	min.f32 	%f732, %f727, %f731;
	mov.f32 	%f733, 0f00000000;
	max.f32 	%f734, %f733, %f732;
	cvt.rmi.f32.f32 	%f735, %f734;
	sub.f32 	%f258, %f734, %f735;
	cvt.rzi.s32.f32 	%r300, %f735;
	cvt.s64.s32 	%rd15, %r300;
	mul.wide.s32 	%rd244, %r300, 48;
	add.s64 	%rd236, %rd218, %rd244;
	// begin inline asm
	cvta.to.global.u64 %rd235, %rd236;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r286,%r287,%r288,%r289}, [%rd235];
	// end inline asm
	mov.b32 	%f958, %r286;
	mov.b32 	%f959, %r287;
	mov.b32 	%f960, %r288;
	add.s64 	%rd239, %rd236, 16;
	// begin inline asm
	cvta.to.global.u64 %rd238, %rd239;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r290,%r291,%r292,%r293}, [%rd238];
	// end inline asm
	mov.b32 	%f955, %r290;
	mov.b32 	%f956, %r291;
	mov.b32 	%f957, %r292;
	add.s64 	%rd242, %rd236, 32;
	// begin inline asm
	cvta.to.global.u64 %rd241, %rd242;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r294,%r295,%r296,%r297}, [%rd241];
	// end inline asm
	mov.b32 	%f952, %r294;
	mov.b32 	%f953, %r295;
	mov.b32 	%f954, %r296;
	setp.leu.f32 	%p19, %f258, 0f00000000;
	@%p19 bra 	$L__BB4_36;

	mov.f32 	%f736, 0f3F800000;
	sub.f32 	%f737, %f736, %f258;
	mul.lo.s64 	%rd254, %rd15, 48;
	add.s64 	%rd255, %rd209, %rd254;
	add.s64 	%rd246, %rd255, 80;
	// begin inline asm
	cvta.to.global.u64 %rd245, %rd246;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r301,%r302,%r303,%r304}, [%rd245];
	// end inline asm
	mov.b32 	%f738, %r301;
	mov.b32 	%f739, %r302;
	mov.b32 	%f740, %r303;
	mul.f32 	%f741, %f258, %f738;
	mul.f32 	%f742, %f258, %f739;
	mul.f32 	%f743, %f258, %f740;
	fma.rn.f32 	%f958, %f737, %f958, %f741;
	fma.rn.f32 	%f959, %f737, %f959, %f742;
	fma.rn.f32 	%f960, %f737, %f960, %f743;
	add.s64 	%rd249, %rd255, 96;
	// begin inline asm
	cvta.to.global.u64 %rd248, %rd249;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r305,%r306,%r307,%r308}, [%rd248];
	// end inline asm
	mov.b32 	%f744, %r305;
	mov.b32 	%f745, %r306;
	mov.b32 	%f746, %r307;
	mul.f32 	%f747, %f258, %f744;
	mul.f32 	%f748, %f258, %f745;
	mul.f32 	%f749, %f258, %f746;
	fma.rn.f32 	%f955, %f737, %f955, %f747;
	fma.rn.f32 	%f956, %f737, %f956, %f748;
	fma.rn.f32 	%f957, %f737, %f957, %f749;
	add.s64 	%rd252, %rd255, 112;
	// begin inline asm
	cvta.to.global.u64 %rd251, %rd252;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r309,%r310,%r311,%r312}, [%rd251];
	// end inline asm
	mov.b32 	%f750, %r309;
	mov.b32 	%f751, %r310;
	mov.b32 	%f752, %r311;
	mul.f32 	%f753, %f258, %f750;
	mul.f32 	%f754, %f258, %f751;
	mul.f32 	%f755, %f258, %f752;
	fma.rn.f32 	%f952, %f737, %f952, %f753;
	fma.rn.f32 	%f953, %f737, %f953, %f754;
	fma.rn.f32 	%f954, %f737, %f954, %f755;
	bra.uni 	$L__BB4_36;

$L__BB4_25:
	mov.f32 	%f961, 0f00000000;
	mov.f32 	%f963, 0f3F800000;
	setp.eq.s32 	%p15, %r165, 4;
	@%p15 bra 	$L__BB4_28;

	setp.ne.s32 	%p16, %r165, 1;
	mov.f32 	%f962, %f961;
	mov.f32 	%f964, %f961;
	mov.f32 	%f965, %f963;
	mov.f32 	%f966, %f961;
	mov.f32 	%f967, %f963;
	mov.f32 	%f968, %f961;
	mov.f32 	%f969, %f961;
	@%p16 bra 	$L__BB4_37;

	// begin inline asm
	call (%rd139), _optix_get_static_transform_from_handle, (%rd137);
	// end inline asm
	add.s64 	%rd258, %rd139, 64;
	bra.uni 	$L__BB4_29;

$L__BB4_31:
	// begin inline asm
	call (%rd152), _optix_get_srt_motion_transform_from_handle, (%rd137);
	// end inline asm
	// begin inline asm
	cvta.to.global.u64 %rd154, %rd152;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r179,%r180,%r181,%r182}, [%rd154];
	// end inline asm
	add.s64 	%rd158, %rd152, 16;
	// begin inline asm
	cvta.to.global.u64 %rd157, %rd158;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r183,%r184,%r185,%r186}, [%rd157];
	// end inline asm
	add.s64 	%rd161, %rd152, 32;
	// begin inline asm
	cvta.to.global.u64 %rd160, %rd161;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r187,%r188,%r189,%r190}, [%rd160];
	// end inline asm
	add.s64 	%rd164, %rd152, 48;
	// begin inline asm
	cvta.to.global.u64 %rd163, %rd164;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r191,%r192,%r193,%r194}, [%rd163];
	// end inline asm
	add.s64 	%rd167, %rd152, 64;
	// begin inline asm
	cvta.to.global.u64 %rd166, %rd167;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r195,%r196,%r197,%r198}, [%rd166];
	// end inline asm
	add.s64 	%rd170, %rd152, 80;
	// begin inline asm
	cvta.to.global.u64 %rd169, %rd170;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r199,%r200,%r201,%r202}, [%rd169];
	// end inline asm
	add.s64 	%rd173, %rd152, 96;
	// begin inline asm
	cvta.to.global.u64 %rd172, %rd173;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r203,%r204,%r205,%r206}, [%rd172];
	// end inline asm
	add.s64 	%rd176, %rd152, 112;
	// begin inline asm
	cvta.to.global.u64 %rd175, %rd176;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r207,%r208,%r209,%r210}, [%rd175];
	// end inline asm
	add.s64 	%rd179, %rd152, 128;
	// begin inline asm
	cvta.to.global.u64 %rd178, %rd179;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r211,%r212,%r213,%r214}, [%rd178];
	// end inline asm
	add.s64 	%rd182, %rd152, 144;
	// begin inline asm
	cvta.to.global.u64 %rd181, %rd182;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r215,%r216,%r217,%r218}, [%rd181];
	// end inline asm
	mov.b32 	%f633, %r182;
	mov.b32 	%f634, %r183;
	and.b32  	%r235, %r181, 65535;
	add.s32 	%r236, %r235, -1;
	cvt.rn.f32.s32 	%f635, %r236;
	sub.f32 	%f636, %f621, %f633;
	mul.f32 	%f637, %f636, %f635;
	sub.f32 	%f638, %f634, %f633;
	div.rn.f32 	%f639, %f637, %f638;
	min.f32 	%f640, %f635, %f639;
	mov.f32 	%f641, 0f00000000;
	max.f32 	%f642, %f641, %f640;
	cvt.rmi.f32.f32 	%f643, %f642;
	sub.f32 	%f218, %f642, %f643;
	cvt.rzi.s32.f32 	%r237, %f643;
	mul.wide.s32 	%rd196, %r237, 64;
	add.s64 	%rd185, %rd161, %rd196;
	// begin inline asm
	cvta.to.global.u64 %rd184, %rd185;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r219,%r220,%r221,%r222}, [%rd184];
	// end inline asm
	mov.b32 	%f942, %r219;
	mov.b32 	%f943, %r220;
	mov.b32 	%f944, %r221;
	add.s64 	%rd188, %rd185, 16;
	// begin inline asm
	cvta.to.global.u64 %rd187, %rd188;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r223,%r224,%r225,%r226}, [%rd187];
	// end inline asm
	mov.b32 	%f945, %r223;
	mov.b32 	%f946, %r224;
	mov.b32 	%f947, %r226;
	add.s64 	%rd191, %rd185, 32;
	// begin inline asm
	cvta.to.global.u64 %rd190, %rd191;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r227,%r228,%r229,%r230}, [%rd190];
	// end inline asm
	mov.b32 	%f948, %r228;
	mov.b32 	%f949, %r229;
	mov.b32 	%f950, %r230;
	add.s64 	%rd194, %rd185, 48;
	// begin inline asm
	cvta.to.global.u64 %rd193, %rd194;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r231,%r232,%r233,%r234}, [%rd193];
	// end inline asm
	mov.b32 	%f951, %r231;
	setp.leu.f32 	%p18, %f218, 0f00000000;
	@%p18 bra 	$L__BB4_33;

	mov.f32 	%f644, 0f3F800000;
	sub.f32 	%f645, %f644, %f218;
	add.s64 	%rd198, %rd185, 64;
	// begin inline asm
	cvta.to.global.u64 %rd197, %rd198;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r238,%r239,%r240,%r241}, [%rd197];
	// end inline asm
	mov.b32 	%f646, %r238;
	mov.b32 	%f647, %r239;
	mov.b32 	%f648, %r240;
	mul.f32 	%f649, %f218, %f646;
	mul.f32 	%f650, %f218, %f647;
	mul.f32 	%f651, %f218, %f648;
	fma.rn.f32 	%f942, %f645, %f942, %f649;
	fma.rn.f32 	%f943, %f645, %f943, %f650;
	fma.rn.f32 	%f944, %f645, %f944, %f651;
	add.s64 	%rd201, %rd185, 80;
	// begin inline asm
	cvta.to.global.u64 %rd200, %rd201;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r242,%r243,%r244,%r245}, [%rd200];
	// end inline asm
	mov.b32 	%f652, %r242;
	mov.b32 	%f653, %r243;
	mov.b32 	%f654, %r245;
	mul.f32 	%f655, %f218, %f652;
	mul.f32 	%f656, %f218, %f653;
	mul.f32 	%f657, %f218, %f654;
	fma.rn.f32 	%f945, %f645, %f945, %f655;
	fma.rn.f32 	%f946, %f645, %f946, %f656;
	fma.rn.f32 	%f947, %f645, %f947, %f657;
	add.s64 	%rd204, %rd185, 96;
	// begin inline asm
	cvta.to.global.u64 %rd203, %rd204;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r246,%r247,%r248,%r249}, [%rd203];
	// end inline asm
	mov.b32 	%f658, %r247;
	mov.b32 	%f659, %r248;
	mov.b32 	%f660, %r249;
	mul.f32 	%f661, %f218, %f658;
	mul.f32 	%f662, %f218, %f659;
	mul.f32 	%f663, %f218, %f660;
	fma.rn.f32 	%f664, %f645, %f948, %f661;
	fma.rn.f32 	%f665, %f645, %f949, %f662;
	fma.rn.f32 	%f666, %f645, %f950, %f663;
	add.s64 	%rd207, %rd185, 112;
	// begin inline asm
	cvta.to.global.u64 %rd206, %rd207;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r250,%r251,%r252,%r253}, [%rd206];
	// end inline asm
	mov.b32 	%f667, %r250;
	mul.f32 	%f668, %f218, %f667;
	fma.rn.f32 	%f669, %f645, %f951, %f668;
	mul.f32 	%f670, %f665, %f665;
	fma.rn.f32 	%f671, %f664, %f664, %f670;
	fma.rn.f32 	%f672, %f666, %f666, %f671;
	fma.rn.f32 	%f673, %f669, %f669, %f672;
	sqrt.rn.f32 	%f674, %f673;
	rcp.rn.f32 	%f675, %f674;
	mul.f32 	%f948, %f664, %f675;
	mul.f32 	%f949, %f665, %f675;
	mul.f32 	%f950, %f666, %f675;
	mul.f32 	%f951, %f675, %f669;

$L__BB4_33:
	mul.f32 	%f676, %f949, %f949;
	fma.rn.f32 	%f677, %f948, %f948, %f676;
	fma.rn.f32 	%f678, %f950, %f950, %f677;
	fma.rn.f32 	%f679, %f951, %f951, %f678;
	rcp.rn.f32 	%f680, %f679;
	mul.f32 	%f681, %f948, %f680;
	mul.f32 	%f682, %f949, %f680;
	mul.f32 	%f683, %f950, %f680;
	mul.f32 	%f684, %f951, %f680;
	mul.f32 	%f685, %f948, %f681;
	mul.f32 	%f686, %f949, %f682;
	mul.f32 	%f687, %f950, %f683;
	mul.f32 	%f688, %f948, %f682;
	mul.f32 	%f689, %f950, %f684;
	mul.f32 	%f690, %f948, %f683;
	mul.f32 	%f691, %f949, %f684;
	mul.f32 	%f692, %f949, %f683;
	mul.f32 	%f693, %f948, %f684;
	sub.f32 	%f694, %f685, %f686;
	sub.f32 	%f695, %f694, %f687;
	fma.rn.f32 	%f696, %f951, %f684, %f695;
	sub.f32 	%f697, %f688, %f689;
	add.f32 	%f698, %f697, %f697;
	add.f32 	%f699, %f690, %f691;
	add.f32 	%f700, %f699, %f699;
	add.f32 	%f701, %f688, %f689;
	add.f32 	%f702, %f701, %f701;
	sub.f32 	%f703, %f686, %f685;
	sub.f32 	%f704, %f703, %f687;
	fma.rn.f32 	%f705, %f951, %f684, %f704;
	sub.f32 	%f706, %f692, %f693;
	add.f32 	%f707, %f706, %f706;
	sub.f32 	%f708, %f690, %f691;
	add.f32 	%f709, %f708, %f708;
	add.f32 	%f710, %f692, %f693;
	add.f32 	%f711, %f710, %f710;
	neg.f32 	%f712, %f685;
	sub.f32 	%f713, %f712, %f686;
	add.f32 	%f714, %f687, %f713;
	fma.rn.f32 	%f715, %f951, %f684, %f714;
	mul.f32 	%f716, %f944, %f696;
	fma.rn.f32 	%f717, %f946, %f698, %f716;
	fma.rn.f32 	%f960, %f947, %f700, %f717;
	mul.f32 	%f718, %f946, %f705;
	fma.rn.f32 	%f719, %f944, %f702, %f718;
	fma.rn.f32 	%f957, %f947, %f707, %f719;
	mul.f32 	%f720, %f946, %f711;
	fma.rn.f32 	%f721, %f944, %f709, %f720;
	fma.rn.f32 	%f954, %f947, %f715, %f721;
	mul.f32 	%f722, %f943, %f696;
	fma.rn.f32 	%f959, %f945, %f698, %f722;
	mul.f32 	%f723, %f945, %f705;
	fma.rn.f32 	%f956, %f943, %f702, %f723;
	mul.f32 	%f724, %f945, %f711;
	fma.rn.f32 	%f953, %f943, %f709, %f724;
	mul.f32 	%f958, %f942, %f696;
	mul.f32 	%f955, %f942, %f702;
	mul.f32 	%f952, %f942, %f709;

$L__BB4_36:
	mul.f32 	%f756, %f953, %f957;
	mul.f32 	%f757, %f954, %f956;
	sub.f32 	%f758, %f757, %f756;
	mul.f32 	%f759, %f958, %f758;
	mul.f32 	%f760, %f952, %f957;
	mul.f32 	%f761, %f954, %f955;
	sub.f32 	%f762, %f761, %f760;
	mul.f32 	%f763, %f762, %f959;
	sub.f32 	%f764, %f759, %f763;
	mul.f32 	%f765, %f952, %f956;
	mul.f32 	%f766, %f953, %f955;
	sub.f32 	%f767, %f766, %f765;
	fma.rn.f32 	%f768, %f767, %f960, %f764;
	rcp.rn.f32 	%f769, %f768;
	mul.f32 	%f967, %f758, %f769;
	mul.f32 	%f770, %f954, %f959;
	mul.f32 	%f771, %f953, %f960;
	sub.f32 	%f772, %f771, %f770;
	mul.f32 	%f968, %f772, %f769;
	mul.f32 	%f773, %f956, %f960;
	mul.f32 	%f774, %f957, %f959;
	sub.f32 	%f775, %f774, %f773;
	mul.f32 	%f969, %f775, %f769;
	sub.f32 	%f776, %f760, %f761;
	mul.f32 	%f964, %f776, %f769;
	mul.f32 	%f777, %f952, %f960;
	mul.f32 	%f778, %f954, %f958;
	sub.f32 	%f779, %f778, %f777;
	mul.f32 	%f965, %f779, %f769;
	mul.f32 	%f780, %f957, %f958;
	mul.f32 	%f781, %f955, %f960;
	sub.f32 	%f782, %f781, %f780;
	mul.f32 	%f966, %f782, %f769;
	mul.f32 	%f961, %f767, %f769;
	mul.f32 	%f783, %f953, %f958;
	mul.f32 	%f784, %f952, %f959;
	sub.f32 	%f785, %f784, %f783;
	mul.f32 	%f962, %f785, %f769;
	mul.f32 	%f786, %f955, %f959;
	mul.f32 	%f787, %f956, %f958;
	sub.f32 	%f788, %f787, %f786;
	mul.f32 	%f963, %f788, %f769;
	bra.uni 	$L__BB4_37;

$L__BB4_28:
	// begin inline asm
	call (%rd258), _optix_get_instance_inverse_transform_from_handle, (%rd137);
	// end inline asm

$L__BB4_29:
	// begin inline asm
	cvta.to.global.u64 %rd143, %rd258;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r167,%r168,%r169,%r170}, [%rd143];
	// end inline asm
	mov.b32 	%f967, %r167;
	mov.b32 	%f968, %r168;
	mov.b32 	%f969, %r169;
	add.s64 	%rd147, %rd258, 16;
	// begin inline asm
	cvta.to.global.u64 %rd146, %rd147;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r171,%r172,%r173,%r174}, [%rd146];
	// end inline asm
	mov.b32 	%f964, %r171;
	mov.b32 	%f965, %r172;
	mov.b32 	%f966, %r173;
	add.s64 	%rd150, %rd258, 32;
	// begin inline asm
	cvta.to.global.u64 %rd149, %rd150;
	// end inline asm
	// begin inline asm
	ld.global.v4.u32 {%r175,%r176,%r177,%r178}, [%rd149];
	// end inline asm
	mov.b32 	%f961, %r175;
	mov.b32 	%f962, %r176;
	mov.b32 	%f963, %r177;

$L__BB4_37:
	setp.eq.s32 	%p20, %r322, 0;
	@%p20 bra 	$L__BB4_39;

	mul.f32 	%f789, %f938, %f968;
	fma.rn.f32 	%f790, %f935, %f967, %f789;
	fma.rn.f32 	%f304, %f941, %f969, %f790;
	mul.f32 	%f791, %f937, %f968;
	fma.rn.f32 	%f792, %f934, %f967, %f791;
	fma.rn.f32 	%f305, %f940, %f969, %f792;
	mul.f32 	%f793, %f936, %f968;
	fma.rn.f32 	%f794, %f933, %f967, %f793;
	fma.rn.f32 	%f969, %f939, %f969, %f794;
	mul.f32 	%f795, %f938, %f965;
	fma.rn.f32 	%f796, %f935, %f964, %f795;
	fma.rn.f32 	%f307, %f941, %f966, %f796;
	mul.f32 	%f797, %f937, %f965;
	fma.rn.f32 	%f798, %f934, %f964, %f797;
	fma.rn.f32 	%f308, %f940, %f966, %f798;
	mul.f32 	%f799, %f936, %f965;
	fma.rn.f32 	%f800, %f933, %f964, %f799;
	fma.rn.f32 	%f966, %f939, %f966, %f800;
	mul.f32 	%f801, %f938, %f962;
	fma.rn.f32 	%f802, %f935, %f961, %f801;
	fma.rn.f32 	%f310, %f941, %f963, %f802;
	mul.f32 	%f803, %f937, %f962;
	fma.rn.f32 	%f804, %f934, %f961, %f803;
	fma.rn.f32 	%f311, %f940, %f963, %f804;
	mul.f32 	%f805, %f936, %f962;
	fma.rn.f32 	%f806, %f933, %f961, %f805;
	fma.rn.f32 	%f963, %f939, %f963, %f806;
	mov.f32 	%f961, %f310;
	mov.f32 	%f962, %f311;
	mov.f32 	%f964, %f307;
	mov.f32 	%f965, %f308;
	mov.f32 	%f967, %f304;
	mov.f32 	%f968, %f305;

$L__BB4_39:
	add.s32 	%r322, %r322, 1;
	setp.lt.u32 	%p21, %r322, %r162;
	mov.f32 	%f933, %f969;
	mov.f32 	%f934, %f968;
	mov.f32 	%f935, %f967;
	mov.f32 	%f936, %f966;
	mov.f32 	%f937, %f965;
	mov.f32 	%f938, %f964;
	mov.f32 	%f939, %f963;
	mov.f32 	%f940, %f962;
	mov.f32 	%f941, %f961;
	@%p21 bra 	$L__BB4_24;

$L__BB4_40:
	mul.f32 	%f807, %f989, %f968;
	fma.rn.f32 	%f808, %f988, %f967, %f807;
	mul.f32 	%f809, %f989, %f965;
	fma.rn.f32 	%f810, %f988, %f964, %f809;
	mul.f32 	%f811, %f989, %f962;
	fma.rn.f32 	%f812, %f988, %f961, %f811;
	fma.rn.f32 	%f990, %f620, %f963, %f812;
	fma.rn.f32 	%f989, %f620, %f966, %f810;
	fma.rn.f32 	%f988, %f620, %f969, %f808;
	bra.uni 	$L__BB4_42;

$L__BB4_41:
	mov.f32 	%f990, %f620;

$L__BB4_42:
	// begin inline asm
	call (%f813), _optix_get_ray_tmin, ();
	// end inline asm
	// begin inline asm
	call (%f814), _optix_get_ray_tmax, ();
	// end inline asm
	sub.f32 	%f343, %f814, %f813;
	fma.rn.f32 	%f344, %f988, %f813, %f930;
	fma.rn.f32 	%f345, %f989, %f813, %f931;
	fma.rn.f32 	%f346, %f990, %f813, %f932;
	add.s64 	%rd16, %rd1, 32;
	ld.f32 	%f347, [%rd1+32];
	sub.f32 	%f816, %f344, %f347;
	ld.f32 	%f348, [%rd1+36];
	sub.f32 	%f817, %f345, %f348;
	ld.f32 	%f349, [%rd1+40];
	sub.f32 	%f818, %f346, %f349;
	neg.f32 	%f819, %f817;
	neg.f32 	%f820, %f818;
	mul.f32 	%f821, %f816, %f988;
	neg.f32 	%f822, %f821;
	fma.rn.f32 	%f823, %f819, %f989, %f822;
	fma.rn.f32 	%f824, %f820, %f990, %f823;
	mul.f32 	%f825, %f988, %f988;
	fma.rn.f32 	%f826, %f989, %f989, %f825;
	fma.rn.f32 	%f350, %f990, %f990, %f826;
	sqrt.rn.f32 	%f827, %f350;
	div.rn.f32 	%f351, %f824, %f827;
	setp.neu.f32 	%p22, %f351, 0f00000000;
	@%p22 bra 	$L__BB4_44;

	setp.neu.f32 	%p23, %f344, %f347;
	setp.neu.f32 	%p24, %f345, %f348;
	or.pred  	%p25, %p23, %p24;
	setp.neu.f32 	%p26, %f346, %f349;
	or.pred  	%p27, %p25, %p26;
	@%p27 bra 	$L__BB4_50;

$L__BB4_44:
	fma.rn.f32 	%f828, %f351, %f988, %f344;
	sub.f32 	%f352, %f828, %f347;
	fma.rn.f32 	%f829, %f351, %f989, %f345;
	sub.f32 	%f353, %f829, %f348;
	fma.rn.f32 	%f830, %f351, %f990, %f346;
	sub.f32 	%f354, %f830, %f349;
	mul.f32 	%f831, %f352, %f352;
	fma.rn.f32 	%f832, %f353, %f353, %f831;
	fma.rn.f32 	%f355, %f354, %f354, %f832;
	sqrt.rn.f32 	%f833, %f355;
	ld.f32 	%f356, [%rd16+16];
	setp.gt.f32 	%p28, %f833, %f356;
	@%p28 bra 	$L__BB4_50;

	mul.f32 	%f835, %f352, %f988;
	fma.rn.f32 	%f836, %f353, %f989, %f835;
	fma.rn.f32 	%f837, %f354, %f990, %f836;
	add.f32 	%f357, %f837, %f837;
	mul.f32 	%f838, %f356, %f356;
	sub.f32 	%f358, %f355, %f838;
	setp.eq.f32 	%p30, %f357, 0f00000000;
	setp.eq.f32 	%p31, %f350, 0f00000000;
	and.pred  	%p32, %p31, %p30;
	mov.pred 	%p49, 0;
	@%p32 bra 	$L__BB4_48;

	neg.f32 	%f839, %f358;
	div.rn.f32 	%f991, %f839, %f357;
	mul.f32 	%f840, %f350, 0fC0800000;
	mul.f32 	%f841, %f840, %f358;
	fma.rn.f32 	%f360, %f357, %f357, %f841;
	setp.neu.f32 	%p34, %f350, 0f00000000;
	setp.lt.f32 	%p35, %f360, 0f00000000;
	and.pred  	%p36, %p35, %p34;
	mov.f32 	%f992, %f991;
	@%p36 bra 	$L__BB4_48;

	mov.b32 	%r313, %f357;
	and.b32  	%r314, %r313, -2147483648;
	sqrt.rn.f32 	%f842, %f360;
	mov.b32 	%r315, %f842;
	and.b32  	%r316, %r315, 2147483647;
	or.b32  	%r317, %r316, %r314;
	mov.b32 	%f843, %r317;
	add.f32 	%f844, %f357, %f843;
	mul.f32 	%f845, %f844, 0fBF000000;
	div.rn.f32 	%f846, %f845, %f350;
	div.rn.f32 	%f847, %f358, %f845;
	min.f32 	%f848, %f846, %f847;
	max.f32 	%f849, %f846, %f847;
	selp.f32 	%f361, %f991, %f848, %p31;
	selp.f32 	%f992, %f991, %f849, %p31;
	mov.pred 	%p49, -1;
	mov.f32 	%f991, %f361;

$L__BB4_48:
	add.f32 	%f850, %f351, %f991;
	setp.le.f32 	%p39, %f850, %f343;
	add.f32 	%f851, %f351, %f992;
	setp.ge.f32 	%p40, %f851, 0f00000000;
	setp.geu.f32 	%p41, %f850, 0f00000000;
	setp.leu.f32 	%p42, %f851, %f343;
	setp.lt.f32 	%p43, %f850, 0f00000000;
	selp.f32 	%f365, %f851, %f850, %p43;
	and.pred  	%p44, %p40, %p39;
	and.pred  	%p45, %p49, %p44;
	or.pred  	%p46, %p41, %p42;
	and.pred  	%p47, %p46, %p45;
	not.pred 	%p48, %p47;
	@%p48 bra 	$L__BB4_50;

	mov.u32 	%r319, 254;
	// begin inline asm
	call (%r318), _optix_report_intersection_0, (%f365, %r319);
	// end inline asm

$L__BB4_50:
	ret;

}

